// meta={"simUrl":"https://trg-arcade.userpxt.io/v1.2.6/---simulator","cdnUrl":"https://pxt.azureedge.net","version":"0.0.0","target":"arcade","targetVersion":"1.2.6"}
// total=2244286 new=5.58% cached=90.27% other=4.14%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const bind = ectx.bind;
const leaveAccessor = ectx.leaveAccessor;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("Stream 124 - Not very scarecrows");
pxsim.setConfigData({
 "37": 160,
 "38": 120
}, {
 "DISPLAY_WIDTH": 37,
 "DISPLAY_HEIGHT": 38
});
pxtrt.mapKeyNames = [
 "",
 "__draw",
 "__drawCore",
 "__preUpdate",
 "__update",
 "__visible",
 "_action",
 "_ax",
 "_ay",
 "_barHeight",
 "_barWidth",
 "_col",
 "_connected",
 "_controlledSprites",
 "_data",
 "_destroyCore",
 "_dt",
 "_factory",
 "_fx",
 "_fy",
 "_height",
 "_hitbox",
 "_id",
 "_image",
 "_inputLastFrame",
 "_kind",
 "_kindsOverlappedWith",
 "_label",
 "_lastX",
 "_lastY",
 "_layer",
 "_layers",
 "_map",
 "_max",
 "_millis",
 "_obstacles",
 "_offsetX",
 "_offsetY",
 "_overlappers",
 "_owner",
 "_player",
 "_pressed",
 "_pressedElasped",
 "_prune",
 "_repeatCount",
 "_row",
 "_scale",
 "_sprites",
 "_statusBar",
 "_text",
 "_update",
 "_vx",
 "_vy",
 "_width",
 "_x",
 "_y",
 "_z",
 "action",
 "activeCard",
 "add",
 "addShape",
 "addSprite",
 "alignX",
 "alignY",
 "allSprites",
 "analog",
 "anchor",
 "animations",
 "apply",
 "applyChange",
 "applyTo",
 "areaHeight",
 "areaWidth",
 "attachToSprite",
 "ax",
 "ay",
 "background",
 "basicCard",
 "bg",
 "bgColor",
 "border",
 "borderColor",
 "borderWidth",
 "bottom",
 "buckets",
 "button",
 "buttons",
 "cachedTileView",
 "cachedVx",
 "cachedVy",
 "camera",
 "canResolveClipping",
 "card",
 "cardSpacing",
 "cardWidth",
 "cardsPerRow",
 "cardsTop",
 "cellHeight",
 "cellWidth",
 "change",
 "changeLifeBy",
 "changeScoreBy",
 "changeValue",
 "charHeight",
 "charWidth",
 "clear",
 "clearInterior",
 "clearObstacles",
 "col",
 "collisionHandlers",
 "color",
 "colors",
 "columnCount",
 "columns",
 "comparison",
 "comparisonType",
 "condition",
 "conditionMet",
 "connected",
 "constrain",
 "contains",
 "controlledSprites",
 "count",
 "countdownEndHandler",
 "countdownExpired",
 "createMovingSprite",
 "createParticle",
 "createdHandlers",
 "current",
 "cursor",
 "cursorCount",
 "cursorOn",
 "cursorRowHeight",
 "data",
 "defaultLifespan",
 "defaultRate",
 "delay",
 "deltaTime",
 "deltaTimeMillis",
 "destroy",
 "destroyHandler",
 "destroyedHandlers",
 "displayCursor",
 "displayValue",
 "dispose",
 "distance",
 "down",
 "drainColor",
 "draw",
 "drawBorder",
 "drawCursorRow",
 "drawLives",
 "drawOffsetX",
 "drawOffsetY",
 "drawPartial",
 "drawParticle",
 "drawPlayer",
 "drawScore",
 "drawText",
 "drawTextCore",
 "dx",
 "dy",
 "effect",
 "eid",
 "enabled",
 "endScreenEffect",
 "eventContext",
 "explicitlySetDirection",
 "fastFill",
 "fastRandom",
 "fc",
 "flags",
 "follow",
 "followOffset",
 "followPadding",
 "followingSprites",
 "font",
 "fontColor",
 "frame",
 "frameCallbacks",
 "frameInterval",
 "frameWorker",
 "frames",
 "framesInSample",
 "func",
 "fx",
 "fy",
 "galois",
 "gameEnd",
 "gameForeverHandlers",
 "generator",
 "getImageType",
 "getObstacle",
 "getState",
 "getText",
 "getTile",
 "getTileImage",
 "getTileIndex",
 "getTileset",
 "handler",
 "handlers",
 "hasBackgroundImage",
 "hasHitZero",
 "hasLife",
 "hasScore",
 "head",
 "headerFont",
 "headerText",
 "heartImage",
 "height",
 "highScore",
 "icon",
 "iconImage",
 "id",
 "idleCallbacks",
 "image",
 "img",
 "infoFont",
 "infoTop",
 "init",
 "innerLeft",
 "innerTop",
 "insertAABB",
 "insertAtKey",
 "isInvalidIndex",
 "isNewHighScore",
 "isObstacle",
 "isOnWall",
 "isOutOfScreen",
 "isOutsideMap",
 "isPressed",
 "isStatic",
 "isVerticalBar",
 "isWall",
 "key",
 "kind",
 "label",
 "labelColor",
 "lastFrame",
 "lastNode",
 "lastUpdate",
 "layer",
 "layers",
 "left",
 "length",
 "lfsr",
 "life",
 "lifeZeroHandler",
 "lifespan",
 "loop",
 "map",
 "max",
 "maxLifespan",
 "maxNegativeVelocity",
 "maxSingleStep",
 "maxSpeed",
 "maxStep",
 "maxVelocity",
 "melody",
 "mergeAtKey",
 "millis",
 "minAngle",
 "minLifespan",
 "minSingleStep",
 "minStep",
 "mode",
 "move",
 "moveSprite",
 "multiplier",
 "multiplierImage",
 "neighbors",
 "next",
 "nodeInterval",
 "nodes",
 "offColor",
 "offsetX",
 "offsetY",
 "onColor",
 "onEvent",
 "onPlayFinished",
 "onUpdate",
 "once",
 "options",
 "order",
 "otherKind",
 "overlapHandlers",
 "overlapMap",
 "overlaps",
 "overlapsWith",
 "ox",
 "oy",
 "pFlags",
 "padding",
 "parent",
 "particleSources",
 "path",
 "percent",
 "percentChance",
 "period",
 "physicsEngine",
 "pickRandom",
 "place",
 "play",
 "playCore",
 "playerIndex",
 "playerStates",
 "position",
 "positionNextTo",
 "preferredDelay",
 "pressureLevel",
 "prevTimeMillis",
 "previousScene",
 "priority",
 "queuePlayInstructions",
 "raiseButtonDown",
 "raiseButtonRepeat",
 "raiseButtonUp",
 "raiseLifeZero",
 "randomRange",
 "rate",
 "rebuildImage",
 "register",
 "registerFrameCallbacks",
 "registerFrameHandler",
 "registerHandler",
 "registerMelody",
 "registerObstacle",
 "remove",
 "removeSprite",
 "render",
 "repeatDelay",
 "repeatInterval",
 "repeatX",
 "repeatY",
 "resizeBuckets",
 "right",
 "row",
 "rowCount",
 "rows",
 "run",
 "runCallbacks",
 "runningCallbacks",
 "s",
 "sampleTilesByType",
 "sayBubbleSprite",
 "scale",
 "scene",
 "sceneDefaultRate",
 "score",
 "scrollOffset",
 "scrollRow",
 "scrollTarget",
 "seed",
 "selectedCard",
 "selection",
 "self",
 "setAcceleration",
 "setAnchor",
 "setData",
 "setDirection",
 "setFactory",
 "setFlag",
 "setHitbox",
 "setImage",
 "setKind",
 "setLife",
 "setOffset",
 "setPosition",
 "setPressed",
 "setRate",
 "setRelativeToCamera",
 "setScore",
 "setSelection",
 "setSpeed",
 "setStart",
 "setState",
 "setTheme",
 "setVelocity",
 "shakeAmplitude",
 "shakeDuration",
 "shakeStartTime",
 "shouldBeVisible",
 "show",
 "showLife",
 "showPlayer",
 "showScore",
 "source",
 "sourceFactory",
 "sources",
 "speed",
 "spread",
 "sprite",
 "spriteAttachedTo",
 "spriteCollisions",
 "spriteNextId",
 "spriteToFollow",
 "sprites",
 "spritesByKind",
 "src",
 "start",
 "startEffect",
 "startScreenEffect",
 "startedAt",
 "state",
 "stop",
 "target",
 "textAreaHeight",
 "textAreaWidth",
 "textColor",
 "theme",
 "throttleAmount",
 "tileIndex",
 "tileMap",
 "tileOverlapHandlers",
 "tileSet",
 "tilemapCollisions",
 "tilemapOverlaps",
 "tileset",
 "timeInSample",
 "timeOut",
 "timer",
 "times",
 "toString",
 "top",
 "turnRate",
 "unit",
 "unregister",
 "unregisterMelody",
 "up",
 "update",
 "updateCard",
 "updateDisplay",
 "updateParticle",
 "updateSay",
 "updateScrollTarget",
 "updateState",
 "value",
 "vid",
 "visibilityFlag",
 "visilibity",
 "vx",
 "vy",
 "wallCollisionHandlers",
 "width",
 "win",
 "work",
 "x",
 "xOffset",
 "xRange",
 "xStep",
 "y",
 "yOffset",
 "yRange",
 "yStep",
 "z"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P60880(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals._intervals___3705 = (undefined);
    globals._pollEventQueue___3714 = (undefined);
    globals.minPriority___364 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, inline__P3717);
    globals.listeners___3718 = (s.tmp_0);
    globals.freqs___3767 = (_hex3766);
    globals.globalVolume___3771 = (null);
    globals.playToneID___3778 = (0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1598_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1601_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8";
    s.callLocIdx = 0; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    globals.wawawawaa___1615 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1598_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1601_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "g4:1 c5 e g:2 e:1 g:3";
    s.callLocIdx = 1; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    globals.powerUp___1618 = (s.tmp_0);
    globals.brightness___1724 = (100);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 8);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex6592);
    globals.font8___1745 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex6994);
    globals.font12___1746 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex16372);
    globals.font5___1750 = (s.tmp_0);
    globals.__updated___3815 = (false);
    r0 = pxsim.control.runInParallel(inline__P3818);
    r0 = pxsim_pxtcore.setPalette(_hex3829);
    r0 = pxsim.image.create(160, 120);
    globals.screen___1802 = (r0);
    s.tmp_0 = control___screen_setupUpdate__P1764_mk(s);
    s.tmp_0.arg0 = inline__P3836;
    s.callLocIdx = 4; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.control_EventContext_onStats___387 = (inline__P3841);
    globals.RUN_KEY___3846 = ("#run");
    globals.SCOPE_KEY___3847 = ("#scope");
    s.tmp_0 = settings_initScopes__P3858_mk(s);
    s.callLocIdx = 5; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 5;
    s.tmp_1.arg2 = 4;
    s.callLocIdx = 6; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    globals.A___1877 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 6;
    s.tmp_1.arg2 = 5;
    s.callLocIdx = 7; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    globals.B___1878 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.tmp_1.arg2 = 47;
    s.callLocIdx = 8; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    globals.left___1879 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 49;
    s.callLocIdx = 9; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    globals.up___1880 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = 48;
    s.callLocIdx = 10; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.right___1881 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = 50;
    s.callLocIdx = 11; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    globals.down___1882 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 7;
    s.tmp_1.arg2 = 51;
    s.callLocIdx = 12; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    globals.menu___1883 = (s.tmp_0);
    globals._userEventsEnabled___3885 = (true);
    globals.defaultRepeatDelay___3887 = (500);
    globals.defaultRepeatInterval___3889 = (30);
    r0 = pxsim_pxtcore_mkClassInstance(controller_AnyButton__C3895_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1909_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = -1;
    s.callLocIdx = 13; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    globals.anyButton___1957 = (s.tmp_0);
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 14; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    globals.Player___2128 = (r0);
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 15; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    globals.Food___2130 = (r0);
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 16; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    globals.Enemy___2131 = (r0);
    s.tmp_0 = Fx8__P144_mk(s);
    s.tmp_0.arg0 = 100;
    s.callLocIdx = 17; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    globals.MAX_TIME_STEP___2168 = (r0);
    s.tmp_0 = Fx8__P144_mk(s);
    s.tmp_0.arg0 = 0.1;
    s.callLocIdx = 18; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    globals.MIN_MOVE_GAP___2170 = (r0);
    globals.infoState___3938 = (undefined);
    s.tmp_0 = game_addScenePushHandler__P2549_mk(s);
    s.tmp_0.arg0 = inline__P3942;
    s.callLocIdx = 19; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.tmp_0 = game_addScenePopHandler__P2551_mk(s);
    s.tmp_0.arg0 = inline__P3957;
    s.callLocIdx = 23; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(info_PlayerInfo__C2226_VT);
    s.tmp_0 = r0;
    s.tmp_1 = info_PlayerInfo_constructor__P2238_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.callLocIdx = 24; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    globals.player1___2257 = (s.tmp_0);
    r0 = pxsim_Array__mk();
    globals.scene_Scene_initializers___2439 = (r0);
    globals.debug___2528 = (false);
    globals.stats___2529 = (false);
    globals.winEffect___2530 = (undefined);
    globals.loseEffect___2531 = (undefined);
    globals.loseSound___4053 = (undefined);
    globals.winSound___4055 = (undefined);
    globals.__isOver___4063 = (false);
    s.tmp_0 = scene_systemMenu_initVolume__P4322_mk(s);
    s.callLocIdx = 25; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_initScreen__P4323_mk(s);
    s.callLocIdx = 26; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.scene_Scene_initializers___2439, scene_systemMenu_register__P2633);
    r0 = pxsim.image.ofBuffer(_hex4330);
    globals.CARD_NORMAL___2638 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4332);
    globals.CARD_SELECTED___2639 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4334);
    globals.CARD_ACTIVE___2640 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4336);
    globals.VOLUME_UP_ICON___2641 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4338);
    globals.BRIGHTNESS_DOWN_ICON___2642 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4340);
    globals.CLOSE_MENU_ICON___2643 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4342);
    globals.VOLUME_DOWN_ICON___2644 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4344);
    globals.SLEEP_ICON___2645 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4346);
    globals.CONSOLE_ICON___2646 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4348);
    globals.BRIGHTNESS_UP_ICON___2647 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4350);
    globals.STATS_ICON___2648 = (r0);
    globals.consoleColor___4353 = (1);
    globals.tabSize___4356 = (8);
    globals.consoleFont___4362 = (globals.font5___1750);
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_2 = r0;
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___4362;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 27; s.pc = 23; return s.tmp_5; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 / s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    globals.consoleLines___4367 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 8);
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___4362;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 28; s.pc = 24; return s.tmp_4; }
    }
  case 24:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.consoleColumns___4377 = (r0);
    s.tmp_0 = console_addListener__P372_mk(s);
    s.tmp_0.arg0 = game_consoleOverlay_listener__P4389;
    s.callLocIdx = 29; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = inline__P4393;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 31; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    globals.MAX_SOURCES___4391 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_SprayFactory__C2718_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_SprayFactory_constructor__P2719_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 20;
    s.tmp_1.arg2 = 0;
    s.tmp_1.arg3 = 60;
    s.callLocIdx = 32; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    globals.defaultFactory___2698 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2586_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2588_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 33; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    globals.galois___4426 = (s.tmp_0);
    globals.angleSlice___4434 = (0.06283185307179587);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ParticleEffect__C2789_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ParticleEffect_constructor__P2790_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 20;
    s.tmp_1.arg2 = 4000;
    s.tmp_1.arg3 = inline__P15034;
    s.callLocIdx = 36; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    globals.trail___2799 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ScreenEffect__C2793_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ScreenEffect_constructor__P2794_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 10;
    s.tmp_1.arg2 = 40;
    s.tmp_1.arg3 = 4000;
    s.tmp_1.arg4 = inline__P9300;
    s.callLocIdx = 42; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    globals.confetti___2801 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ParticleEffect__C2789_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ParticleEffect_constructor__P2790_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 60;
    s.tmp_1.arg2 = 2000;
    s.tmp_1.arg3 = inline__P14564;
    s.callLocIdx = 46; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    globals.ashes___2809 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C2816_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P2817_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 100;
    s.tmp_1.arg2 = inline__P14839;
    s.callLocIdx = 52; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    globals.dissolve___2821 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C2816_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P2817_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 125;
    s.tmp_1.arg2 = inline__P9192;
    s.callLocIdx = 55; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    globals.melt___2822 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(texteffects_TextEffect__C2831_VT);
    s.tmp_0 = r0;
    s.tmp_1 = texteffects_TextEffect_constructor__P2833_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = inline__P4485;
    s.callLocIdx = 56; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    globals.shake___2834 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(texteffects_TextEffect__C2831_VT);
    s.tmp_0 = r0;
    s.tmp_1 = texteffects_TextEffect_constructor__P2833_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = inline__P4498;
    s.callLocIdx = 66; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    globals.wave___2835 = (s.tmp_0);
    s.tmp_0 = game_setWaitAnyButton__P2533_mk(s);
    s.tmp_0.arg0 = controller_pauseUntilAnyButtonIsPressed__P1953;
    s.callLocIdx = 67; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    s.tmp_0 = game_eventContext__P2535_mk(s);
    s.callLocIdx = 68; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mkMap();
    globals.decounceTimeouts___5680 = (r0);
    r0 = pxsim_pxtrt.mkMap();
    globals.throttleTimeouts___5682 = (r0);
    globals.stateNamespace___5683 = ("__animation");
    s.tmp_0 = game_addScenePushHandler__P2549_mk(s);
    s.tmp_0.arg0 = inline__P5711;
    s.callLocIdx = 69; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.tmp_0 = game_addScenePopHandler__P2551_mk(s);
    s.tmp_0.arg0 = inline__P5726;
    s.callLocIdx = 73; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 74; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    globals.StatusBar___3571 = (r0);
    s.tmp_0 = StatusBarKind_create__P3574_mk(s);
    s.callLocIdx = 75; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    globals.Health___3575 = (r0);
    s.tmp_0 = StatusBarKind_create__P3574_mk(s);
    s.callLocIdx = 76; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    globals.Energy___3576 = (r0);
    s.tmp_0 = StatusBarKind_create__P3574_mk(s);
    s.callLocIdx = 77; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    globals.Magic___3577 = (r0);
    s.tmp_0 = StatusBarKind_create__P3574_mk(s);
    s.callLocIdx = 78; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    globals.EnemyHealth___3578 = (r0);
    globals.STATUS_BAR_DATA_KEY___5766 = ("STATUS_BAR_DATA_KEY");
    if ((globals.STATUS_BAR_DATA_KEY___5766) && (globals.STATUS_BAR_DATA_KEY___5766).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(globals.STATUS_BAR_DATA_KEY___5766);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.STATUS_BAR_DATA_KEY___5766) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "_SPRITES");
    globals.MANAGED_SPRITES_KEY___5770 = (r0);
    if ((globals.STATUS_BAR_DATA_KEY___5766) && (globals.STATUS_BAR_DATA_KEY___5766).vtable) {
    setupResume(s, 46);
    pxsim_String__stringConv(globals.STATUS_BAR_DATA_KEY___5766);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.STATUS_BAR_DATA_KEY___5766) + ""; }
  case 46:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "_ON_ZERO");
    globals.ZERO_HANDLERS_KEY___5776 = (r0);
    if ((globals.STATUS_BAR_DATA_KEY___5766) && (globals.STATUS_BAR_DATA_KEY___5766).vtable) {
    setupResume(s, 47);
    pxsim_String__stringConv(globals.STATUS_BAR_DATA_KEY___5766);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.STATUS_BAR_DATA_KEY___5766) + ""; }
  case 47:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "_ON_STATUS_REACHED");
    globals.STATUS_HANDLERS_KEY___5782 = (r0);
    if ((globals.STATUS_BAR_DATA_KEY___5766) && (globals.STATUS_BAR_DATA_KEY___5766).vtable) {
    setupResume(s, 48);
    pxsim_String__stringConv(globals.STATUS_BAR_DATA_KEY___5766);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.STATUS_BAR_DATA_KEY___5766) + ""; }
  case 48:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "_ON_DISPLAY_UPDATE");
    globals.POST_PROCESS_HANDLERS_KEY___5788 = (r0);
    r0 = pxsim.image.ofBuffer(_hex21725);
    globals.transparency16___21726 = (r0);
    r0 = pxsim.image.ofBuffer(_hex21730);
    globals.tile1___21731 = (r0);
    r0 = pxsim.image.ofBuffer(_hex21735);
    globals.tile2___21736 = (r0);
    s.tmp_0 = helpers_registerTilemapFactory__P2357_mk(s);
    s.tmp_0.arg0 = inline__P21740;
    s.callLocIdx = 81; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 82; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
    globals.ChargingEnemy___60273 = (r0);
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 83; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    globals.AttackingEnemy___60276 = (r0);
    s.tmp_0 = SpriteKind_create__P2127_mk(s);
    s.callLocIdx = 84; s.pc = 52; return s.tmp_0;
  case 52:
    r0 = s.retval;
    globals.StunnedEnemy___60279 = (r0);
    s.tmp_0 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_0.arg0 = globals.A___1877;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P60300;
    s.callLocIdx = 99; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.tmp_0 = statusbars_onZero__P3637_mk(s);
    s.tmp_0.arg0 = globals.EnemyHealth___3578;
    s.tmp_0.arg1 = inline__P60400;
    s.callLocIdx = 115; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.tmp_0 = sprites_onOverlap__P2106_mk(s);
    s.tmp_0.arg0 = globals.Player___2128;
    s.tmp_0.arg1 = globals.AttackingEnemy___60276;
    s.tmp_0.arg2 = inline__P60461;
    s.callLocIdx = 134; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
    globals.baddie___60470 = (null);
    globals.statusbar___60339 = (null);
    globals.projectile___60302 = (null);
    globals.ducko___60308 = (null);
    s.tmp_0 = scene_setBackgroundColor__P2457_mk(s);
    s.tmp_0.arg0 = 14;
    s.callLocIdx = 135; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.tmp_0 = sprites_create__P1974_mk(s);
    r0 = pxsim.image.ofBuffer(_hex60475);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.Player___2128;
    s.callLocIdx = 136; s.pc = 57; return s.tmp_0;
  case 57:
    r0 = s.retval;
    globals.ducko___60308 = (r0);
    s.tmp_0 = controller_moveSprite__P1952_mk(s);
    s.tmp_0.arg0 = globals.ducko___60308;
    s.tmp_0.arg1 = 100;
    s.tmp_0.arg2 = 100;
    s.callLocIdx = 137; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, globals.transparency16___21726);
    r0 = pxsim_Array__push(s.tmp_0, globals.tile1___21731);
    r0 = pxsim_Array__push(s.tmp_0, globals.tile2___21736);
    s.tmp_1 = tiles_setTilemap__P2341_mk(s);
    s.tmp_2 = tiles_createTilemap__P2340_mk(s);
    s.tmp_2.arg0 = _hex60482;
    r0 = pxsim.image.ofBuffer(_hex60484);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.tmp_0;
    s.tmp_2.arg3 = 4;
    s.callLocIdx = 138; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 139; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    s.tmp_0 = info_setLife__P2210_mk(s);
    s.tmp_0.arg0 = 10;
    s.callLocIdx = 140; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.tmp_0 = game_onUpdateInterval__P2544_mk(s);
    s.tmp_0.arg0 = 2000;
    s.tmp_0.arg1 = inline__P60492;
    s.callLocIdx = 147; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.tmp_0 = game_onUpdateInterval__P2544_mk(s);
    s.tmp_0.arg0 = 1000;
    s.tmp_0.arg1 = inline__P60515;
    s.callLocIdx = 149; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.tmp_0 = game_onUpdateInterval__P2544_mk(s);
    s.tmp_0.arg0 = 100;
    s.tmp_0.arg1 = inline__P60518;
    s.callLocIdx = 153; s.pc = 64; return s.tmp_0;
  case 64:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P60880.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"pxt_modules/Timers/main.ts","functionName":"<main>","argumentNames":[]}
_main___P60880.continuations = [ 45,46,47,48 ]

function _main___P60880_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P60880, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
} }

const _hex3766 = pxsim.BufferMethods.createBufferFromHex("1f00210023002500270029002c002e003100340037003a003e004100450049004e00520057005c00620068006e0075007b0083008b0093009c00a500af00b900c400d000dc00e900f70006011501260137014a015d01720188019f01b801d201ee010b022a024b026e029302ba02e40210033f037003a403dc03170455049704dd0427057505c80520067d06e0064907b8072d08a9082d09b9094d0aea0a900b400cfa0cc00d910e6f0f5a1053115b1272139a14d41520178018f519801b231dde1e")
const _hex6592 = pxsim.BufferMethods.createBufferFromHex("")
const _hex6994 = pxsim.BufferMethods.createBufferFromHex("20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000")
const _hex16372 = pxsim.BufferMethods.createBufferFromHex("20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000")
const _hex3829 = pxsim.BufferMethods.createBufferFromHex("000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000")
const _hex4330 = pxsim.BufferMethods.createBufferFromHex
const _hex4332 = pxsim.BufferMethods.createBufferFromHex
const _hex4334 = pxsim.BufferMethods.createBufferFromHex
const _hex4336 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4338 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4340 = pxsim.BufferMethods.createBufferFromHex
const _hex4342 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4344 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4346 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4348 = pxsim.BufferMethods.createBufferFromHex("87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4350 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex21725 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex21730 = pxsim.BufferMethods.createBufferFromHex("8704100010000000bbbb6666666666bb5b55c7c7ccc6ccbb55557577777777bb5b5547ccc67cccccbb444464666666665b5547cccc6c7cbb55557577777777b75b55c77cccc6ccbb4b4444666666b6bbbb5455c7ccccccbcbb555575777777774b5455c767ccbcbb44446466666666bb5b55c7c6ccccccbb55557577777777b75b5567cccc7cbbbb")
const _hex21735 = pxsim.BufferMethods.createBufferFromHex("8704100010000000bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbddbbbbbbbbbbbbbbddbbbbdbbdbbbbbbbbbbbbdbbdbbbbbbbbbbbbbbbbbbdbbbbbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbdbbbbbbbbbddbbbbbbbbbbbbbbddbbbbbbbbbbbbbbbbbbddbbbbbbbbbbbbbbddbbbbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb")
const _hex60475 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000000000000000000f000000000000f0fe000000f00000f0fe000000cfff0f4ffe0000f0cf11f3cffc0f00cfcdb111cfccfc0fcfcd1111bebbecfecfcdb111cfcc4c0ff0cf11f3cffcff0000cfff0ff0fe000000f00000f0fe000000000000f0fe000000000000000f000000000000000000000000000000000000")
const _hex60482 = pxsim.BufferMethods.createBufferFromHex("0a0008000101010101010101010101020202020202020201010202020202020202010102020202020202020101020202020202020201010202020202020202010102020202020202020101010101010101010101")
const _hex60484 = pxsim.BufferMethods.createBufferFromHex("87040a000800000022222222020000200200002002000020020000200200002002000020020000200200002022222222")




function inline__P3818(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 4; continue; }
    globals.__updated___3815 = (false);
    s.tmp_0 = pause__P402_mk(s);
    s.tmp_0.arg0 = 200;
    s.callLocIdx = 2; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.__updated___3815);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = control___screen_update__P1763_mk(s);
    s.callLocIdx = 3; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    globals.__updated___3815 = (true);
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P3818.info = {"start":396,"length":211,"line":17,"column":26,"endLine":26,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"inline","argumentNames":[]}

function inline__P3818_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P3818, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function inline__P3836(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.updateScreen(globals.screen___1802);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P3836.info = {"start":753,"length":26,"line":22,"column":33,"endLine":22,"endColumn":59,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":[]}

function inline__P3836_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P3836, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function inline__P3841(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.updateStats(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P3841.info = {"start":816,"length":56,"line":23,"column":35,"endLine":25,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":["msg"]}

function inline__P3841_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P3841, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function inline__P3942(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.infoState___3938);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(globals.infoStateStack___3940);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.infoStateStack___3940 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "state", globals.infoState___3938);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "scene", s.arg0);
    r0 = pxsim_Array__push(globals.infoStateStack___3940, s.tmp_0);
    globals.infoState___3938 = (undefined);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P3942.info = {"start":1920,"length":259,"line":73,"column":29,"endLine":82,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["oldScene"]}

function inline__P3942_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P3942, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P3957(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___3958 = undefined;
    s.nextState___3967 = undefined;
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 20; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___3958 = (r0);
    globals.infoState___3938 = (undefined);
    s.tmp_0 = r0 = globals.infoStateStack___3940;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals.infoStateStack___3940);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array_.pop(globals.infoStateStack___3940);
    s.nextState___3967 = (r0);
    s.tmp_2 = if_scene_1_mk(s);
    s.tmp_2.arg0 = s.nextState___3967;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "scene");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["scene"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["scene"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 21; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.scene___3958);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_state_1_mk(s);
    s.tmp_3.arg0 = s.nextState___3967;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "state");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["state"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["state"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 22; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    globals.infoState___3938 = (r0);
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__push(globals.infoStateStack___3940, s.nextState___3967);
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P3957.info = {"start":2211,"length":376,"line":84,"column":28,"endLine":95,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function inline__P3957_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P3957, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___3958: undefined,
  nextState___3967: undefined,
} }





function inline__P4393(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sz___4394 = undefined;
    s.tmp_0 = control_ramSize__P335_mk(s);
    s.callLocIdx = 30; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.sz___4394 = (r0);
    r0 = (s.sz___4394 <= 102400);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 8;
    { step = 5; continue; }
    { step = 4; continue; }
  case 1:
    r0 = (s.sz___4394 <= 204800);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = 16;
    { step = 5; continue; }
    { step = 3; continue; }
  case 2:
    r0 = 50;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
inline__P4393.info = {"start":223,"length":217,"line":8,"column":25,"endLine":17,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":[]}

function inline__P4393_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P4393, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sz___4394: undefined,
} }





function inline__P4485(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim.Math_.random();
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "xOffset", s.tmp_1);
    r0 = pxsim.Math_.random();
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "yOffset", s.tmp_4);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
inline__P4485.info = {"start":860,"length":117,"line":31,"column":40,"endLine":34,"endColumn":5,"fileName":"pxt_modules/game/texteffects.ts","functionName":"inline","argumentNames":[]}

function inline__P4485_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P4485, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function inline__P4498(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_2, "xOffset", 0);
    r0 = pxsim.Math_.sin(s.arg0);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 * 2);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_2, "yOffset", s.tmp_3);
    s.tmp_7 = Math_sign__P124_mk(s);
    r0 = pxsim.Math_.sin(s.arg0);
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 57; s.pc = 7; return s.tmp_7;
  case 7:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_2, "up", s.tmp_5);
    s.arg1 = (s.tmp_2);
  case 1:
  case 2:
    s.tmp_1 = if_up_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "up");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["up"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["up"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 58; s.pc = 8; return s.tmp_1; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = -1;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = if_yOffset_2_mk(s);
    s.tmp_4 = r0 = s.arg1;
    s.tmp_3.arg0 = r0;
    s.tmp_6 = if_yOffset_1_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "yOffset");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["yOffset"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["yOffset"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 59; s.pc = 10; return s.tmp_6; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_2 * 0.5);
    s.tmp_7 = r0;
    r0 = (s.tmp_5 + s.tmp_7);
    s.tmp_3.arg1 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "yOffset", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/yOffset"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["yOffset"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 60; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_2 = Math_abs__P123_mk(s);
    s.tmp_3 = if_yOffset_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "yOffset");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["yOffset"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["yOffset"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 61; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 62; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_6 = if_up_1_mk(s);
    s.tmp_6.arg0 = s.arg1;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "up");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["up"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["up"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 63; s.pc = 13; return s.tmp_6; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    { step = 6; continue; }
  case 5:
    s.tmp_7 = if_up_1_mk(s);
    s.tmp_7.arg0 = s.arg1;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "up");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["up"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["up"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 64; s.pc = 14; return s.tmp_7; }
    }
  case 14:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    s.tmp_9 = if_up_2_mk(s);
    s.tmp_9.arg0 = s.arg1;
    s.tmp_9.arg1 = s.tmp_8;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_9.arg0, "up", s.tmp_9.arg1);
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["set/up"];
      if (s.tmp_9.fn === null) { s.tmp_9.arg0.fields["up"] = s.tmp_9.arg1; }
      else if (s.tmp_9.fn === undefined) { failedCast(s.tmp_9.arg0) } 
     else { s.callLocIdx = 65; s.pc = 15; return s.tmp_9; }
    }
  case 15:
    r0 = s.retval;
    r0 = s.arg1;
    return leave(s, r0)
  default: oops()
} } }
inline__P4498.info = {"start":1127,"length":417,"line":42,"column":39,"endLine":55,"endColumn":5,"fileName":"pxt_modules/game/texteffects.ts","functionName":"inline","argumentNames":["index","state"]}

function inline__P4498_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P4498, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P5711(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.animations___5708);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(globals.animationStateStack___5709);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.animationStateStack___5709 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "state", globals.animations___5708);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "scene", s.arg0);
    r0 = pxsim_Array__push(globals.animationStateStack___5709, s.tmp_0);
    globals.animations___5708 = (undefined);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P5711.info = {"start":251,"length":277,"line":12,"column":29,"endLine":21,"endColumn":5,"fileName":"pxt_modules/animation/legacy.ts","functionName":"inline","argumentNames":["oldScene"]}

function inline__P5711_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P5711, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P5726(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___5727 = undefined;
    s.nextState___5736 = undefined;
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 70; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___5727 = (r0);
    globals.animations___5708 = (undefined);
    s.tmp_0 = r0 = globals.animationStateStack___5709;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals.animationStateStack___5709);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array_.pop(globals.animationStateStack___5709);
    s.nextState___5736 = (r0);
    s.tmp_2 = if_scene_1_mk(s);
    s.tmp_2.arg0 = s.nextState___5736;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "scene");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["scene"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["scene"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 71; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.scene___5727);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_state_1_mk(s);
    s.tmp_3.arg0 = s.nextState___5736;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "state");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["state"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["state"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 72; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    globals.animations___5708 = (r0);
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__push(globals.animationStateStack___5709, s.nextState___5736);
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P5726.info = {"start":560,"length":398,"line":23,"column":28,"endLine":34,"endColumn":5,"fileName":"pxt_modules/animation/legacy.ts","functionName":"inline","argumentNames":[]}

function inline__P5726_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P5726, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___5727: undefined,
  nextState___5736: undefined,
} }





function inline__P21740(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = helpers_stringTrim__P118_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 79; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("level", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, globals.transparency16___21726);
    r0 = pxsim_Array__push(s.tmp_2, globals.tile1___21731);
    r0 = pxsim_Array__push(s.tmp_2, globals.tile2___21736);
    s.tmp_3 = tiles_createTilemap__P2340_mk(s);
    s.tmp_3.arg0 = _hex21747;
    r0 = pxsim.image.ofBuffer(_hex21749);
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = 4;
    s.callLocIdx = 80; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    { step = 3; continue; }
  case 2:
    r0 = null;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
inline__P21740.info = {"start":408,"length":581,"line":9,"column":35,"endLine":23,"endColumn":5,"fileName":"tilemap.g.ts","functionName":"inline","argumentNames":["name"]}

function inline__P21740_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P21740, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }

const _hex21747 = pxsim.BufferMethods.createBufferFromHex("0a0008000101010101010101010101020202020202020201010202020202020202010102020202020202020101020202020202020201010202020202020202010102020202020202020101010101010101010101")
const _hex21749 = pxsim.BufferMethods.createBufferFromHex("87040a000800000022222222020000200200002002000020020000200200002002000020020000200200002022222222")




function inline__P60300(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.value___60328 = undefined;
    s.unnamed3420___U1 = undefined;
    s.unnamed3421___U2 = undefined;
    s.tmp_0 = sprites_createProjectileFromSprite__P1977_mk(s);
    r0 = pxsim.image.ofBuffer(_hex60306);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.ducko___60308;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 90; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    globals.projectile___60302 = (r0);
    s.tmp_0 = if_z_2_mk(s);
    s.tmp_0.arg0 = globals.projectile___60302;
    s.tmp_0.arg1 = -1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 91; s.pc = 8; return s.tmp_0; }
    }
  case 8:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex60318);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex60320);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = pxsim.image.ofBuffer(_hex60322);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex60324);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    s.tmp_5 = animation_runImageAnimation__P3504_mk(s);
    s.tmp_5.arg0 = globals.projectile___60302;
    s.tmp_5.arg1 = s.tmp_0;
    s.tmp_5.arg2 = 50;
    s.tmp_5.arg3 = false;
    s.callLocIdx = 92; s.pc = 9; return s.tmp_5;
  case 9:
    r0 = s.retval;
    r0 = (globals.projectile___60302).fields["lifespan"] = (250);
    s.value___60328 = (undefined);
    s.tmp_0 = sprites_allOfKind__P1975_mk(s);
    s.tmp_0.arg0 = globals.StunnedEnemy___60279;
    s.callLocIdx = 93; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.unnamed3420___U1 = (r0);
    s.unnamed3421___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed3421___U2;
    r0 = pxsim_Array__length(s.unnamed3420___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed3420___U1, s.unnamed3421___U2);
    s.value___60328 = (r0);
    s.tmp_4 = distance__P60335_mk(s);
    s.tmp_4.arg0 = globals.ducko___60308;
    s.tmp_4.arg1 = s.value___60328;
    s.callLocIdx = 94; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 < 16);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.tmp_5 = statusbars_getStatusBarAttachedTo__P3636_mk(s);
    s.tmp_5.arg0 = globals.EnemyHealth___3578;
    s.tmp_5.arg1 = s.value___60328;
    s.callLocIdx = 95; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    globals.statusbar___60339 = (r0);
    r0 = pxsim_numops_toBoolDecr(globals.statusbar___60339);
    if (!r0) { step = 2; continue; }
    s.tmp_0 = Sprite_setFlag__P2079_mk(s);
    s.tmp_0.arg0 = globals.statusbar___60339;
    s.tmp_0.arg1 = 128;
    s.tmp_0.arg2 = false;
    s.callLocIdx = 96; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = StatusBarSprite_value__P3582_mk(s);
    s.tmp_1 = r0 = globals.statusbar___60339;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = StatusBarSprite_value__P3581_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 97; s.pc = 15; return s.tmp_3;
  case 15:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + -25);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 98; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 2:
  case 3:
  case 4:
  case 5:
    r0 = (s.unnamed3421___U2 + 1);
    s.unnamed3421___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed3420___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60300.info = {"start":1497,"length":7212,"line":59,"column":52,"endLine":243,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60300_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60300, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  value___60328: undefined,
  unnamed3420___U1: undefined,
  unnamed3421___U2: undefined,
} }

const _hex60306 = pxsim.BufferMethods.createBufferFromHex
const _hex60318 = pxsim.BufferMethods.createBufferFromHex
const _hex60320 = pxsim.BufferMethods.createBufferFromHex
const _hex60322 = pxsim.BufferMethods.createBufferFromHex
const _hex60324 = pxsim.BufferMethods.createBufferFromHex




function inline__P60400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_destroy__P2087_mk(s);
    s.tmp_1 = StatusBarSprite_spriteAttachedTo__P3586_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 113; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.ashes___2809;
    s.tmp_0.arg2 = 500;
    s.callLocIdx = 114; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60400.info = {"start":11157,"length":79,"line":318,"column":45,"endLine":320,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":["status"]}

function inline__P60400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P60461(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = info_changeLifeBy__P2211_mk(s);
    s.tmp_0.arg0 = -1;
    s.callLocIdx = 132; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = enemyChase__P60295_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 133; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60461.info = {"start":12577,"length":88,"line":353,"column":64,"endLine":356,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":["sprite","otherSprite"]}

function inline__P60461_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60461, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P60492(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = sprites_create__P1974_mk(s);
    r0 = pxsim.image.ofBuffer(_hex60496);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.Enemy___2131;
    s.callLocIdx = 141; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    globals.baddie___60470 = (r0);
    s.tmp_0 = tiles_placeOnRandomTile__P2349_mk(s);
    s.tmp_0.arg0 = globals.baddie___60470;
    s.tmp_0.arg1 = globals.tile2___21736;
    s.callLocIdx = 142; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = statusbars_create__P3635_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = 2;
    s.tmp_0.arg2 = globals.EnemyHealth___3578;
    s.callLocIdx = 143; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.statusbar___60339 = (r0);
    s.tmp_0 = StatusBarSprite_attachToSprite__P3585_mk(s);
    s.tmp_0.arg0 = globals.statusbar___60339;
    s.tmp_0.arg1 = globals.baddie___60470;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = undefined;
    s.callLocIdx = 144; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = Sprite_setFlag__P2079_mk(s);
    s.tmp_0.arg0 = globals.statusbar___60339;
    s.tmp_0.arg1 = 128;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 145; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = enemyChase__P60295_mk(s);
    s.tmp_0.arg0 = globals.baddie___60470;
    s.callLocIdx = 146; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60492.info = {"start":14033,"length":962,"line":392,"column":28,"endLine":416,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60492_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60492, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }

const _hex60496 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000f00000000000000f00f000000000000f0ff000000000000f0ffff0000000000f0ffff0f00000000f0ffff4f00000000ffffff0f00000000ffffff4f04000000ffffff0f00000000ffffff00000000f0ffff0f00000000ffffff00000000001fff0f0000000000ff0f000000000000ff00000000000000f00000000000")




function inline__P60515(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = info_changeScoreBy__P2207_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 148; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60515.info = {"start":15025,"length":41,"line":417,"column":28,"endLine":419,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60515_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60515, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P60518(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.value___60520 = undefined;
    s.unnamed3422___U1 = undefined;
    s.unnamed3423___U2 = undefined;
    s.value___60520 = (undefined);
    s.tmp_0 = sprites_allOfKind__P1975_mk(s);
    s.tmp_0.arg0 = globals.Enemy___2131;
    s.callLocIdx = 150; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.unnamed3422___U1 = (r0);
    s.unnamed3423___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed3423___U2;
    r0 = pxsim_Array__length(s.unnamed3422___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed3422___U1, s.unnamed3423___U2);
    s.value___60520 = (r0);
    s.tmp_4 = distance__P60335_mk(s);
    s.tmp_4.arg0 = globals.ducko___60308;
    s.tmp_4.arg1 = s.value___60520;
    s.callLocIdx = 151; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 < 24);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.tmp_5 = enemyCharge__P60406_mk(s);
    s.tmp_5.arg0 = s.value___60520;
    s.callLocIdx = 152; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
  case 2:
  case 3:
    r0 = (s.unnamed3423___U2 + 1);
    s.unnamed3423___U2 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed3422___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60518.info = {"start":15095,"length":166,"line":420,"column":27,"endLine":426,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60518_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60518, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  value___60520: undefined,
  unnamed3422___U1: undefined,
  unnamed3423___U2: undefined,
} }





function enemyCharge__P60406(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = animation_stopAnimation__P3510_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 116; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_follow__P2089_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = null;
    s.tmp_0.arg2 = 100;
    s.tmp_0.arg3 = 400;
    s.callLocIdx = 117; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.image.ofBuffer(_hex60417);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 118; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.ChargingEnemy___60273;
    s.callLocIdx = 119; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = sprites_setDataNumber__P3550_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "chargeX";
    s.tmp_2 = Sprite_x__P2025_mk(s);
    s.tmp_2.arg0 = globals.ducko___60308;
    s.callLocIdx = 120; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Sprite_x__P2025_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 121; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 122; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = sprites_setDataNumber__P3550_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "chargeY";
    s.tmp_2 = Sprite_y__P2027_mk(s);
    s.tmp_2.arg0 = globals.ducko___60308;
    s.callLocIdx = 123; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Sprite_y__P2027_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 124; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 125; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P60436);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = timer_after__P3453_mk(s);
    s.tmp_1.arg0 = 500;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 127; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
enemyCharge__P60406.info = {"start":11238,"length":1068,"line":321,"column":0,"endLine":348,"endColumn":1,"fileName":"main.ts","functionName":"enemyCharge","argumentNames":["baddie"]}

function enemyCharge__P60406_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: enemyCharge__P60406, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }

const _hex60417 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000005000000000000505f05000000000000f55f000000000000f5ff550000000000f5ffff0500000000f5ffff5f05000000f5ffff4f54000050ffffff5f05000055ffffff4f540050ffffffff5f0500f5ffffffff050000f5f1ffff5f000000f5ffffff05000000f55f555500000000505f00000000000000050000000000")




function inline__P60436(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = enemyAttack__P60370_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 126; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60436.info = {"start":12256,"length":47,"line":345,"column":21,"endLine":347,"endColumn":5,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60436_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60436, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function enemyAttack__P60370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.AttackingEnemy___60276;
    s.callLocIdx = 104; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.image.ofBuffer(_hex60378);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 105; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = sprites_readDataNumber__P3552_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = "chargeX";
    s.callLocIdx = 106; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 10);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 107; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = sprites_readDataNumber__P3552_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = "chargeY";
    s.callLocIdx = 108; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 10);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 109; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P60392);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = timer_after__P3453_mk(s);
    s.tmp_1.arg0 = 250;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 111; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0 = Sprite_startEffect__P2075_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.trail___2799;
    s.tmp_0.arg2 = 250;
    s.callLocIdx = 112; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
enemyAttack__P60370.info = {"start":10265,"length":846,"line":289,"column":0,"endLine":317,"endColumn":1,"fileName":"main.ts","functionName":"enemyAttack","argumentNames":["baddie"]}

function enemyAttack__P60370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: enemyAttack__P60370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }

const _hex60378 = pxsim.BufferMethods.createBufferFromHex("8704120012000000000000000000000000000000f00f00000000f00000000000f0fff0000000f0000000000000fff0000000ff000000000000ffff000000ff0f0000000000ffffff00f0ff0f0000000000ffffffffffff000000000000ffffffffffff000000000000ffffffffffff000000000000ffffffffffff040000000000f0ffffffffff000000000000f0ffffffff0f040000000000f0fff0ffff004000000000000000f0f10f000000000000000000f0ff0000000000000000000000ff0000000000000000000000f000000000000000000000000000000000000000")




function inline__P60392(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = enemyStun__P60281_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 110; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60392.info = {"start":11020,"length":45,"line":313,"column":21,"endLine":315,"endColumn":5,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60392_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60392, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P15034(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___15037 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_TrailFactory__C2732_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_TrailFactory_constructor__P2737_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = 250;
    s.tmp_1.arg3 = 1000;
    s.callLocIdx = 34; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.factory___15037 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C2678_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P2683_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___15037;
    s.callLocIdx = 35; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
inline__P15034.info = {"start":6153,"length":232,"line":157,"column":54,"endLine":160,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function inline__P15034_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15034, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  factory___15037: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_constructor__P2683(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___9324 = undefined;
    s.removedSource___9333 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 2980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2980]) return breakpoint(s, 5, 2980, r0);
  case 5:
    s.tmp_0 = sprites_BaseSprite_constructor__P1860_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1312; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2981]) return breakpoint(s, 7, 2981, r0);
  case 7:
    s.tmp_0 = particles_init__P4414_mk(s);
    s.callLocIdx = 1313; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2982]) return breakpoint(s, 9, 2982, r0);
  case 9:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1314; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.sources___9324 = (r0);
    s.lastBrkId = 2983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2983]) return breakpoint(s, 11, 2983, r0);
  case 11:
    r0 = pxsim_Array__length(s.sources___9324);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= globals.MAX_SOURCES___4391);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2984]) return breakpoint(s, 12, 2984, r0);
  case 12:
    s.tmp_2 = particles_sortSources__P4417_mk(s);
    s.tmp_2.arg0 = s.sources___9324;
    s.callLocIdx = 1315; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2985]) return breakpoint(s, 14, 2985, r0);
  case 14:
    s.tmp_0 = helpers_arrayShift__P100_mk(s);
    s.tmp_0.arg0 = s.sources___9324;
    s.callLocIdx = 1316; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.removedSource___9333 = (r0);
    s.lastBrkId = 2986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2986]) return breakpoint(s, 16, 2986, r0);
  case 16:
    s.tmp_0 = particles_ParticleSource_clear__P2693_mk(s);
    s.tmp_0.arg0 = s.removedSource___9333;
    s.callLocIdx = 1317; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2987]) return breakpoint(s, 18, 2987, r0);
  case 18:
    s.tmp_0 = particles_ParticleSource_destroy__P2692_mk(s);
    s.tmp_0.arg0 = s.removedSource___9333;
    s.callLocIdx = 1318; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2988]) return breakpoint(s, 20, 2988, r0);
  case 20:
    r0 = (s.arg0).fields["pFlags"] = (0);
    s.lastBrkId = 2989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2989]) return breakpoint(s, 21, 2989, r0);
  case 21:
    s.tmp_0 = particles_ParticleSource_setRate__P2695_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1319; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 2990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2990]) return breakpoint(s, 23, 2990, r0);
  case 23:
    s.tmp_0 = particles_ParticleSource_setAcceleration__P2687_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 1320; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2991]) return breakpoint(s, 25, 2991, r0);
  case 25:
    s.tmp_0 = particles_ParticleSource_setAnchor__P2694_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1321; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2992]) return breakpoint(s, 27, 2992, r0);
  case 27:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2993]) return breakpoint(s, 28, 2993, r0);
  case 28:
    r0 = (s.arg0).fields["_dt"] = (0);
    s.lastBrkId = 2994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2994]) return breakpoint(s, 29, 2994, r0);
  case 29:
    r0 = (s.arg0).fields["priority"] = (0);
    s.lastBrkId = 2995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2995]) return breakpoint(s, 30, 2995, r0);
  case 30:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = globals.defaultFactory___2698;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = particles_ParticleSource_setFactory__P2697_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1322; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2996]) return breakpoint(s, 32, 2996, r0);
  case 32:
    r0 = pxsim_Array__push(s.sources___9324, s.arg0);
    s.lastBrkId = 2997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2997]) return breakpoint(s, 33, 2997, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_enabled__P2691_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1323; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_constructor__P2683.info = {"start":2290,"length":899,"line":86,"column":8,"endLine":109,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["this","anchor","particlesPerSecond","factory"]}

function particles_ParticleSource_constructor__P2683_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_constructor__P2683, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  sources___9324: undefined,
  removedSource___9333: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_particleSources__P4420(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___8341 = undefined;
    s.lastBrkId = 3114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3114]) return breakpoint(s, 1, 3114, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1374; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["particleSources"];
    s.sources___8341 = (r0);
    s.lastBrkId = 3115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3115]) return breakpoint(s, 3, 3115, r0);
  case 3:
    r0 = s.sources___8341;
    return leave(s, r0)
  default: oops()
} } }
particles_particleSources__P4420.info = {"start":12831,"length":119,"line":420,"column":4,"endLine":423,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"particleSources","argumentNames":[]}

function particles_particleSources__P4420_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_particleSources__P4420, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___8341: undefined,
} }





function particles_sortSources__P4417(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3101]) return breakpoint(s, 1, 3101, r0);
  case 1:
    s.tmp_0 = helpers_arraySort__P103_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = inline__P9531;
    s.callLocIdx = 1361; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources__P4417.info = {"start":10009,"length":129,"line":331,"column":4,"endLine":333,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"sortSources","argumentNames":["sources"]}

function particles_sortSources__P4417_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources__P4417, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P9531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["priority"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["priority"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
inline__P9531.info = {"start":10080,"length":50,"line":332,"column":21,"endLine":332,"endColumn":71,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["a","b"]}

function inline__P9531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P9531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort__P103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 74;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[74]) return breakpoint(s, 5, 74, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 75;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[75]) return breakpoint(s, 6, 75, r0);
  case 6:
    s.arg1 = (inline__P9554);
  case 3:
  case 4:
    s.lastBrkId = 93;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[93]) return breakpoint(s, 7, 93, r0);
  case 7:
    s.tmp_0 = helpers_sortHelper__P3666_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 3; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort__P103.info = {"start":5663,"length":859,"line":207,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySort","argumentNames":["arr","callbackfn"]}

function helpers_arraySort__P103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort__P103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P9554(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.aIsUndef___9557 = undefined;
    s.bIsUndef___9561 = undefined;
    s.aIsNull___9572 = undefined;
    s.bIsNull___9576 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 76;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[76]) return breakpoint(s, 18, 76, r0);
  case 18:
    r0 = (s.arg0 === undefined);
    s.aIsUndef___9557 = (r0);
    s.lastBrkId = 77;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[77]) return breakpoint(s, 19, 77, r0);
  case 19:
    r0 = (s.arg1 === undefined);
    s.bIsUndef___9561 = (r0);
    s.lastBrkId = 78;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[78]) return breakpoint(s, 20, 78, r0);
  case 20:
    s.tmp_0 = r0 = s.aIsUndef___9557;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.bIsUndef___9561;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 79;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[79]) return breakpoint(s, 21, 79, r0);
  case 21:
    r0 = 0;
    { step = 17; continue; }
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 80;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[80]) return breakpoint(s, 22, 80, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.aIsUndef___9557);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 81;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[81]) return breakpoint(s, 23, 81, r0);
  case 23:
    r0 = 1;
    { step = 17; continue; }
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 82;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[82]) return breakpoint(s, 24, 82, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.bIsUndef___9561);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 83;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[83]) return breakpoint(s, 25, 83, r0);
  case 25:
    r0 = -1;
    { step = 17; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 84;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[84]) return breakpoint(s, 26, 84, r0);
  case 26:
    r0 = (s.arg0 === null);
    s.aIsNull___9572 = (r0);
    s.lastBrkId = 85;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[85]) return breakpoint(s, 27, 85, r0);
  case 27:
    r0 = (s.arg1 === null);
    s.bIsNull___9576 = (r0);
    s.lastBrkId = 86;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[86]) return breakpoint(s, 28, 86, r0);
  case 28:
    s.tmp_0 = r0 = s.aIsNull___9572;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.bIsNull___9576;
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 87;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[87]) return breakpoint(s, 29, 87, r0);
  case 29:
    r0 = 0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 11:
    s.lastBrkId = 88;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[88]) return breakpoint(s, 30, 88, r0);
  case 30:
    r0 = pxsim_numops_toBoolDecr(s.aIsNull___9572);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 89;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[89]) return breakpoint(s, 31, 89, r0);
  case 31:
    r0 = 1;
    { step = 17; continue; }
    { step = 15; continue; }
  case 12:
    s.lastBrkId = 90;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[90]) return breakpoint(s, 32, 90, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.bIsNull___9576);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 91;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[91]) return breakpoint(s, 33, 91, r0);
  case 33:
    r0 = -1;
    { step = 17; continue; }
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 92;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[92]) return breakpoint(s, 34, 92, r0);
  case 34:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    r0 = pxsim_String_.compare(s.tmp_2, s.tmp_5);
  case 17:
    return leave(s, r0)
  default: oops()
} } }
inline__P9554.info = {"start":5826,"length":636,"line":209,"column":25,"endLine":224,"endColumn":13,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"inline","argumentNames":["a","b"]}

function inline__P9554_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P9554, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  aIsUndef___9557: undefined,
  bIsUndef___9561: undefined,
  aIsNull___9572: undefined,
  bIsNull___9576: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_sortHelper__P3666(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___9611 = undefined;
    s.i___9614 = undefined;
    s.j___9620 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 60;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[60]) return breakpoint(s, 12, 60, r0);
  case 12:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 61;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[61]) return breakpoint(s, 13, 61, r0);
  case 13:
    r0 = s.arg0;
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 62;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[62]) return breakpoint(s, 14, 62, r0);
  case 14:
    r0 = pxsim_Array__length(s.arg0);
    s.len___9611 = (r0);
    s.lastBrkId = 63;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[63]) return breakpoint(s, 15, 63, r0);
  case 15:
    s.i___9614 = (0);
    s.lastBrkId = 64;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[64]) return breakpoint(s, 16, 64, r0);
  case 16:
  case 5:
    s.lastBrkId = 65;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[65]) return breakpoint(s, 17, 65, r0);
  case 17:
    s.tmp_1 = r0 = s.i___9614;
    r0 = (s.len___9611 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 66;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[66]) return breakpoint(s, 18, 66, r0);
  case 18:
    r0 = (s.i___9614 + 1);
    s.j___9620 = (r0);
    s.lastBrkId = 67;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[67]) return breakpoint(s, 19, 67, r0);
  case 19:
  case 6:
    s.lastBrkId = 68;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[68]) return breakpoint(s, 20, 68, r0);
  case 20:
    r0 = (s.j___9620 < s.len___9611);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 69;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[69]) return breakpoint(s, 21, 69, r0);
  case 21:
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___9614);
    s.tmp_3.arg0 = r0;
    r0 = pxsim_Array__getAt(s.arg0, s.j___9620);
    s.tmp_3.arg1 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 70;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[70]) return breakpoint(s, 23, 70, r0);
  case 23:
    s.tmp_4 = helpers_swap__P3665_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.i___9614;
    s.tmp_4.arg2 = s.j___9620;
    s.callLocIdx = 2; s.pc = 24; return s.tmp_4;
  case 24:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 71;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[71]) return breakpoint(s, 25, 71, r0);
  case 25:
    r0 = (s.j___9620 + 1);
    s.j___9620 = (r0);
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 72;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[72]) return breakpoint(s, 26, 72, r0);
  case 26:
    r0 = (s.i___9614 + 1);
    s.i___9614 = (r0);
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 73;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[73]) return breakpoint(s, 27, 73, r0);
  case 27:
    r0 = s.arg0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
helpers_sortHelper__P3666.info = {"start":5176,"length":481,"line":191,"column":4,"endLine":205,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sortHelper","argumentNames":["arr","callbackfn"]}

function helpers_sortHelper__P3666_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_sortHelper__P3666, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  len___9611: undefined,
  i___9614: undefined,
  j___9620: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_swap__P3665(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.temp___9649 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 57;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[57]) return breakpoint(s, 1, 57, r0);
  case 1:
    r0 = pxsim_Array__getAt(s.arg0, s.arg1);
    s.temp___9649 = (r0);
    s.lastBrkId = 58;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[58]) return breakpoint(s, 2, 58, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_2);
    s.lastBrkId = 59;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[59]) return breakpoint(s, 3, 59, r0);
  case 3:
    r0 = pxsim_Array_.setAt(s.arg0, s.arg2, s.temp___9649);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_swap__P3665.info = {"start":5030,"length":140,"line":185,"column":4,"endLine":189,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"swap","argumentNames":["arr","i","j"]}

function helpers_swap__P3665_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_swap__P3665, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  temp___9649: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_init__P4414(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___9661 = undefined;
    s.lastBrkId = 3079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3079]) return breakpoint(s, 4, 3079, r0);
  case 4:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1351; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.scene___9661 = (r0);
    s.lastBrkId = 3080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3080]) return breakpoint(s, 6, 3080, r0);
  case 6:
    r0 = s.scene___9661.fields["particleSources"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3081]) return breakpoint(s, 7, 3081, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3082]) return breakpoint(s, 8, 3082, r0);
  case 8:
    s.tmp_1 = r0 = s.scene___9661;
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["particleSources"] = (s.tmp_2);
    s.lastBrkId = 3083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3083]) return breakpoint(s, 9, 3083, r0);
  case 9:
    r0 = pxsim.control.millis();
    globals.lastUpdate___4409 = (r0);
    s.lastBrkId = 3084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3084]) return breakpoint(s, 10, 3084, r0);
  case 10:
    s.tmp_0 = game_onUpdate__P2543_mk(s);
    s.tmp_0.arg0 = particles_updateParticles__P4415;
    s.callLocIdx = 1352; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3085]) return breakpoint(s, 12, 3085, r0);
  case 12:
    s.tmp_0 = game_onUpdateInterval__P2544_mk(s);
    s.tmp_0.arg0 = 250;
    s.tmp_0.arg1 = particles_pruneParticles__P4416;
    s.callLocIdx = 1353; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_init__P4414.info = {"start":9219,"length":276,"line":303,"column":4,"endLine":310,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"init","argumentNames":[]}

function particles_init__P4414_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_init__P4414, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scene___9661: undefined,
} }





function particles_pruneParticles__P4416(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___8178 = undefined;
    s.lastBrkId = 3098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3098]) return breakpoint(s, 3, 3098, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1357; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___8178 = (r0);
    s.lastBrkId = 3099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3099]) return breakpoint(s, 5, 3099, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___8178);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3100]) return breakpoint(s, 6, 3100, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_1 = helpers_arraySlice__P112_mk(s);
    s.tmp_1.arg0 = s.sources___8178;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_Array__length(s.sources___8178);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 1358; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = inline__P8187;
    s.callLocIdx = 1360; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles__P4416.info = {"start":9847,"length":156,"line":326,"column":4,"endLine":329,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"pruneParticles","argumentNames":[]}

function particles_pruneParticles__P4416_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles__P4416, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sources___8178: undefined,
} }





function inline__P8187(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource__prune__P2686_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1359; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P8187.info = {"start":9980,"length":15,"line":328,"column":62,"endLine":328,"endColumn":77,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function inline__P8187_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8187, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource__prune__P2686(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___8217 = undefined;
    s.sources___8225 = undefined;
    s.current___8239 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3037]) return breakpoint(s, 21, 3037, r0);
  case 21:
  case 1:
    s.lastBrkId = 3038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3038]) return breakpoint(s, 22, 3038, r0);
  case 22:
    r0 = s.arg0.fields["head"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3039]) return breakpoint(s, 23, 3039, r0);
  case 23:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["next"];
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["head"] = (s.tmp_3);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 3040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3040]) return breakpoint(s, 24, 3040, r0);
  case 24:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["head"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3041]) return breakpoint(s, 25, 3041, r0);
  case 25:
    s.tmp_5 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1332; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.scene___8217 = (r0);
    s.lastBrkId = 3042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3042]) return breakpoint(s, 27, 3042, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.scene___8217);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3043]) return breakpoint(s, 28, 3043, r0);
  case 28:
    r0 = s.scene___8217.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
  case 7:
  case 8:
    s.lastBrkId = 3044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3044]) return breakpoint(s, 29, 3044, r0);
  case 29:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1333; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.sources___8225 = (r0);
    s.lastBrkId = 3045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3045]) return breakpoint(s, 31, 3045, r0);
  case 31:
    s.tmp_0 = r0 = s.sources___8225;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_Array__length(s.sources___8225);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3046]) return breakpoint(s, 32, 3046, r0);
  case 32:
    r0 = pxsim_Array_.removeElement(s.sources___8225, s.arg0);
  case 11:
  case 12:
    s.lastBrkId = 3047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3047]) return breakpoint(s, 33, 3047, r0);
  case 33:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == undefined);
  case 13:
  case 14:
    s.lastBrkId = 3048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3048]) return breakpoint(s, 34, 3048, r0);
  case 34:
    r0 = s.arg0.fields["head"];
    s.current___8239 = (r0);
    s.lastBrkId = 3049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3049]) return breakpoint(s, 35, 3049, r0);
  case 35:
  case 15:
    s.lastBrkId = 3050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3050]) return breakpoint(s, 36, 3050, r0);
  case 36:
    s.tmp_0 = r0 = s.current___8239;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    r0 = s.current___8239.fields["next"];
  case 17:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 3051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3051]) return breakpoint(s, 37, 3051, r0);
  case 37:
    r0 = s.current___8239.fields["next"];
    r0 = r0.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 <= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 3052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3052]) return breakpoint(s, 38, 3052, r0);
  case 38:
    r0 = s.current___8239.fields["next"];
    r0 = r0.fields["next"];
    s.tmp_4 = r0;
    r0 = (s.current___8239).fields["next"] = (s.tmp_4);
    { step = 19; continue; }
  case 18:
    s.lastBrkId = 3053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3053]) return breakpoint(s, 39, 3053, r0);
  case 39:
    r0 = s.current___8239.fields["next"];
    s.current___8239 = (r0);
  case 19:
    { step = 15; continue; }
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__prune__P2686.info = {"start":5087,"length":830,"line":165,"column":8,"endLine":188,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_prune","argumentNames":["this"]}

function particles_ParticleSource__prune__P2686_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__prune__P2686, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___8217: undefined,
  sources___8225: undefined,
  current___8239: undefined,
  arg0: undefined,
} }





function helpers_arraySlice__P112(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___8262 = undefined;
    s.len___8264 = undefined;
    s.i___8298 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[150]) return breakpoint(s, 16, 150, r0);
  case 16:
    r0 = pxsim_Array__mk();
    s.res___8262 = (r0);
    s.lastBrkId = 151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[151]) return breakpoint(s, 17, 151, r0);
  case 17:
    r0 = pxsim_Array__length(s.arg0);
    s.len___8264 = (r0);
    s.lastBrkId = 152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[152]) return breakpoint(s, 18, 152, r0);
  case 18:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[153]) return breakpoint(s, 19, 153, r0);
  case 19:
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[154]) return breakpoint(s, 20, 154, r0);
  case 20:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[155]) return breakpoint(s, 21, 155, r0);
  case 21:
    s.tmp_1 = Math_max__P125_mk(s);
    r0 = (s.len___8264 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 10; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[156]) return breakpoint(s, 23, 156, r0);
  case 23:
    r0 = (s.arg1 > s.len___8264);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[157]) return breakpoint(s, 24, 157, r0);
  case 24:
    r0 = s.res___8262;
    { step = 15; continue; }
  case 5:
  case 6:
    s.lastBrkId = 158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[158]) return breakpoint(s, 25, 158, r0);
  case 25:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[159]) return breakpoint(s, 26, 159, r0);
  case 26:
    s.arg2 = (s.len___8264);
    { step = 10; continue; }
  case 7:
    s.lastBrkId = 160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[160]) return breakpoint(s, 27, 160, r0);
  case 27:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[161]) return breakpoint(s, 28, 161, r0);
  case 28:
    r0 = (s.len___8264 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[162]) return breakpoint(s, 29, 162, r0);
  case 29:
    r0 = (s.arg2 > s.len___8264);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[163]) return breakpoint(s, 30, 163, r0);
  case 30:
    s.arg2 = (s.len___8264);
  case 11:
  case 12:
    s.lastBrkId = 164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[164]) return breakpoint(s, 31, 164, r0);
  case 31:
    s.i___8298 = (s.arg1);
    s.lastBrkId = 165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[165]) return breakpoint(s, 32, 165, r0);
  case 32:
  case 13:
    s.lastBrkId = 166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[166]) return breakpoint(s, 33, 166, r0);
  case 33:
    r0 = (s.i___8298 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[167]) return breakpoint(s, 34, 167, r0);
  case 34:
    s.tmp_1 = r0 = s.res___8262;
    r0 = pxsim_Array__getAt(s.arg0, s.i___8298);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[168]) return breakpoint(s, 35, 168, r0);
  case 35:
    r0 = (s.i___8298 + 1);
    s.i___8298 = (r0);
    { step = 13; continue; }
  case 14:
    s.lastBrkId = 169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[169]) return breakpoint(s, 36, 169, r0);
  case 36:
    r0 = s.res___8262;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P112.info = {"start":8909,"length":690,"line":299,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P112_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P112, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___8262: undefined,
  len___8264: undefined,
  i___8298: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_max__P125(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[246]) return breakpoint(s, 4, 246, r0);
  case 4:
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[247]) return breakpoint(s, 5, 247, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[248]) return breakpoint(s, 6, 248, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P125.info = {"start":15575,"length":105,"line":529,"column":4,"endLine":532,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P125_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P125, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayForEach__P107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___12409 = undefined;
    s.i___12412 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[110]) return breakpoint(s, 3, 110, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___12409 = (r0);
    s.lastBrkId = 111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[111]) return breakpoint(s, 4, 111, r0);
  case 4:
    s.i___12412 = (0);
    s.lastBrkId = 112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[112]) return breakpoint(s, 5, 112, r0);
  case 5:
  case 1:
    s.lastBrkId = 113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[113]) return breakpoint(s, 6, 113, r0);
  case 6:
    r0 = (s.i___12412 < s.len___12409);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[114]) return breakpoint(s, 7, 114, r0);
  case 7:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___12412);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___12412;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 6; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[115]) return breakpoint(s, 9, 115, r0);
  case 9:
    r0 = (s.i___12412 + 1);
    s.i___12412 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P107.info = {"start":7439,"length":250,"line":254,"column":4,"endLine":259,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___12409: undefined,
  i___12412: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_updateParticles__P4415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___9676 = undefined;
    s.time___9683 = undefined;
    s.dt___9686 = undefined;
    s.i___9692 = undefined;
    s.lastBrkId = 3086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3086]) return breakpoint(s, 6, 3086, r0);
  case 6:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1354; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.sources___9676 = (r0);
    s.lastBrkId = 3087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3087]) return breakpoint(s, 8, 3087, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.sources___9676);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3088]) return breakpoint(s, 9, 3088, r0);
  case 9:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3089]) return breakpoint(s, 10, 3089, r0);
  case 10:
    s.tmp_2 = particles_sortSources__P4417_mk(s);
    s.tmp_2.arg0 = s.sources___9676;
    s.callLocIdx = 1355; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3090]) return breakpoint(s, 12, 3090, r0);
  case 12:
    r0 = pxsim.control.millis();
    s.time___9683 = (r0);
    s.lastBrkId = 3091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3091]) return breakpoint(s, 13, 3091, r0);
  case 13:
    r0 = (s.time___9683 - globals.lastUpdate___4409);
    s.dt___9686 = (r0);
    s.lastBrkId = 3092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3092]) return breakpoint(s, 14, 3092, r0);
  case 14:
    globals.lastUpdate___4409 = (s.time___9683);
    s.lastBrkId = 3093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3093]) return breakpoint(s, 15, 3093, r0);
  case 15:
    s.i___9692 = (0);
    s.lastBrkId = 3094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3094]) return breakpoint(s, 16, 3094, r0);
  case 16:
  case 3:
    s.lastBrkId = 3095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3095]) return breakpoint(s, 17, 3095, r0);
  case 17:
    s.tmp_1 = r0 = s.i___9692;
    r0 = pxsim_Array__length(s.sources___9676);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3096]) return breakpoint(s, 18, 3096, r0);
  case 18:
    s.tmp_3 = particles_ParticleSource__update__P2685_mk(s);
    r0 = pxsim_Array__getAt(s.sources___9676, s.i___9692);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.dt___9686;
    s.callLocIdx = 1356; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 3097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3097]) return breakpoint(s, 20, 3097, r0);
  case 20:
    r0 = (s.i___9692 + 1);
    s.i___9692 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_updateParticles__P4415.info = {"start":9501,"length":340,"line":312,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticles","argumentNames":[]}

function particles_updateParticles__P4415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_updateParticles__P4415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  sources___9676: undefined,
  time___9683: undefined,
  dt___9686: undefined,
  i___9692: undefined,
} }





function particles_ParticleSource__update__P2685(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___9755 = undefined;
    s.current___9774 = undefined;
    s.fixedDt___9782 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3006]) return breakpoint(s, 28, 3006, r0);
  case 28:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timer"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timer"] = (s.tmp_1);
    s.lastBrkId = 3007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3007]) return breakpoint(s, 29, 3007, r0);
  case 29:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3008]) return breakpoint(s, 30, 3008, r0);
  case 30:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 3009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3009]) return breakpoint(s, 31, 3009, r0);
  case 31:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3010]) return breakpoint(s, 32, 3010, r0);
  case 32:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 3011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3011]) return breakpoint(s, 33, 3011, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_destroy__P2692_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1327; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
  case 1:
  case 2:
    { step = 10; continue; }
  case 3:
    s.lastBrkId = 3012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3012]) return breakpoint(s, 35, 3012, r0);
  case 35:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    s.tmp_2 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "flags");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["flags"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["flags"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1328; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_3;
    { step = 7; continue; }
  case 6:
    s.tmp_5 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "flags");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["flags"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["flags"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1329; s.pc = 37; return s.tmp_5; }
    }
  case 37:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 2);
  case 7:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 3013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3013]) return breakpoint(s, 38, 3013, r0);
  case 38:
    r0 = (s.arg0).fields["lifespan"] = (750);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 3014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3014]) return breakpoint(s, 39, 3014, r0);
  case 39:
  case 11:
    s.lastBrkId = 3015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3015]) return breakpoint(s, 40, 3015, r0);
  case 40:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    s.tmp_2 = particles_ParticleSource_enabled__P2690_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1330; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
  case 13:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 3016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3016]) return breakpoint(s, 42, 3016, r0);
  case 42:
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["timer"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["period"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["timer"] = (s.tmp_5);
    s.lastBrkId = 3017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3017]) return breakpoint(s, 43, 3017, r0);
  case 43:
    s.tmp_0 = particles_ParticleFactory__C2714_v0_2_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["anchor"];
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C2714_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.createParticle;
    s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.p___9755 = (r0);
    s.lastBrkId = 3018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3018]) return breakpoint(s, 45, 3018, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.p___9755);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 3019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3019]) return breakpoint(s, 46, 3019, r0);
  case 46:
    { step = 11; continue; }
  case 14:
  case 15:
    s.lastBrkId = 3020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3020]) return breakpoint(s, 47, 3020, r0);
  case 47:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = (s.p___9755).fields["next"] = (s.tmp_2);
    s.lastBrkId = 3021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3021]) return breakpoint(s, 48, 3021, r0);
  case 48:
    r0 = (s.arg0).fields["head"] = (s.p___9755);
    { step = 11; continue; }
  case 16:
    s.lastBrkId = 3022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3022]) return breakpoint(s, 49, 3022, r0);
  case 49:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 3023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3023]) return breakpoint(s, 50, 3023, r0);
  case 50:
    { step = 27; continue; }
  case 17:
  case 18:
    s.lastBrkId = 3024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3024]) return breakpoint(s, 51, 3024, r0);
  case 51:
    r0 = s.arg0.fields["head"];
    s.current___9774 = (r0);
    s.lastBrkId = 3025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3025]) return breakpoint(s, 52, 3025, r0);
  case 52:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["_dt"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_dt"] = (s.tmp_1);
    s.lastBrkId = 3026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3026]) return breakpoint(s, 53, 3026, r0);
  case 53:
    s.tmp_0 = Fx8__P144_mk(s);
    r0 = s.arg0.fields["_dt"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1331; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.fixedDt___9782 = (r0);
    s.lastBrkId = 3027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3027]) return breakpoint(s, 55, 3027, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.fixedDt___9782);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 3028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3028]) return breakpoint(s, 56, 3028, r0);
  case 56:
  case 19:
    s.lastBrkId = 3029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3029]) return breakpoint(s, 57, 3029, r0);
  case 57:
    r0 = s.current___9774.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 3030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3030]) return breakpoint(s, 58, 3030, r0);
  case 58:
    s.tmp_2 = r0 = s.current___9774;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 3031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3031]) return breakpoint(s, 59, 3031, r0);
  case 59:
    s.tmp_0 = particles_ParticleSource__C2678_v4_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.current___9774;
    s.tmp_0.arg2 = s.fixedDt___9782;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleSource__C2678_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.updateParticle;
    s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
  case 20:
  case 21:
    s.lastBrkId = 3032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3032]) return breakpoint(s, 61, 3032, r0);
  case 61:
    r0 = s.current___9774.fields["next"];
    s.tmp_0 = r0;
    s.current___9774 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    { step = 19; continue; }
  case 22:
    s.lastBrkId = 3033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3033]) return breakpoint(s, 62, 3033, r0);
  case 62:
    r0 = (s.arg0).fields["_dt"] = (0);
    { step = 26; continue; }
  case 23:
    s.lastBrkId = 3034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3034]) return breakpoint(s, 63, 3034, r0);
  case 63:
  case 24:
    s.lastBrkId = 3035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3035]) return breakpoint(s, 64, 3035, r0);
  case 64:
    s.tmp_0 = r0 = s.current___9774;
    r0 = s.tmp_0.fields["lifespan"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 3036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3036]) return breakpoint(s, 65, 3036, r0);
  case 65:
    r0 = s.current___9774.fields["next"];
    s.tmp_0 = r0;
    s.current___9774 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    { step = 24; continue; }
  case 25:
  case 26:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__update__P2685.info = {"start":3677,"length":1400,"line":123,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_update","argumentNames":["this","dt"]}

function particles_ParticleSource__update__P2685_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__update__P2685, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  p___9755: undefined,
  current___9774: undefined,
  fixedDt___9782: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_updateParticle__P4411(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3072]) return breakpoint(s, 1, 3072, r0);
  case 1:
    s.tmp_0 = Fx_rightShift__P164_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.tmp_0.arg1 = 10;
    s.callLocIdx = 1339; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 3073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3073]) return breakpoint(s, 3, 3073, r0);
  case 3:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P155_mk(s);
    r0 = s.arg0.fields["ax"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1340; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1341; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 3074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3074]) return breakpoint(s, 6, 3074, r0);
  case 6:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P155_mk(s);
    r0 = s.arg0.fields["ay"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1342; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1343; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 3075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3075]) return breakpoint(s, 9, 3075, r0);
  case 9:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P155_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1344; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1345; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 3076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3076]) return breakpoint(s, 12, 3076, r0);
  case 12:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P155_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1346; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1347; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_updateParticle__P4411.info = {"start":8231,"length":357,"line":276,"column":8,"endLine":284,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticle","argumentNames":["this","p","fixedDt"]}

function particles_ParticleSource_updateParticle__P4411_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_updateParticle__P4411, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Fx_rightShift__P164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[272]) return breakpoint(s, 1, 272, r0);
  case 1:
    r0 = (s.arg0 >> s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_rightShift__P164.info = {"start":2031,"length":108,"line":65,"column":4,"endLine":67,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"rightShift","argumentNames":["a","n"]}

function Fx_rightShift__P164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_rightShift__P164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_mul__P155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[258]) return breakpoint(s, 1, 258, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_mul__P155.info = {"start":872,"length":133,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"mul","argumentNames":["a","b"]}

function Fx_mul__P155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_mul__P155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_add__P152(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[255]) return breakpoint(s, 1, 255, r0);
  case 1:
    r0 = (s.arg0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_add__P152.info = {"start":511,"length":118,"line":20,"column":4,"endLine":22,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"add","argumentNames":["a","b"]}

function Fx_add__P152_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_add__P152, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleFactory_createParticle__P2716(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___9879 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C2714_VT)) failedCast(r0);
    s.lastBrkId = 3141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3141]) return breakpoint(s, 1, 3141, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(particles_Particle__C2659_VT);
    s.p___9879 = (r0);
    s.lastBrkId = 3142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3142]) return breakpoint(s, 2, 3142, r0);
  case 2:
    s.tmp_0 = r0 = s.p___9879;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_3 = if_x_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "x");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["x"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["x"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1381; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1382; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 3143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3143]) return breakpoint(s, 5, 3143, r0);
  case 5:
    s.tmp_0 = r0 = s.p___9879;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_3 = if_y_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "y");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["y"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["y"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1383; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1384; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 3144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3144]) return breakpoint(s, 8, 3144, r0);
  case 8:
    r0 = (s.p___9879).fields["vx"] = (0);
    s.lastBrkId = 3145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3145]) return breakpoint(s, 9, 3145, r0);
  case 9:
    r0 = (s.p___9879).fields["vy"] = (0);
    s.lastBrkId = 3146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3146]) return breakpoint(s, 10, 3146, r0);
  case 10:
    r0 = (s.p___9879).fields["lifespan"] = (500);
    s.lastBrkId = 3147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3147]) return breakpoint(s, 11, 3147, r0);
  case 11:
    r0 = s.p___9879;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_createParticle__P2716.info = {"start":1822,"length":282,"line":67,"column":8,"endLine":77,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ParticleFactory_createParticle__P2716_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_createParticle__P2716, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___9879: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdate__P2543(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2710]) return breakpoint(s, 4, 2710, r0);
  case 4:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1129; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2711]) return breakpoint(s, 6, 2711, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2712]) return breakpoint(s, 7, 2712, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2713]) return breakpoint(s, 8, 2713, r0);
  case 8:
    s.tmp_2 = control_EventContext_registerFrameHandler__P392_mk(s);
    s.tmp_3 = game_eventContext__P2535_mk(s);
    s.callLocIdx = 1130; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 20;
    s.tmp_2.arg2 = s.arg0;
    s.callLocIdx = 1131; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdate__P2543.info = {"start":7427,"length":169,"line":242,"column":4,"endLine":246,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onUpdate","argumentNames":["a"]}

function game_onUpdate__P2543_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdate__P2543, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_init__P4064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2648]) return breakpoint(s, 13, 2648, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(globals._scene___4056);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2649]) return breakpoint(s, 14, 2649, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Scene__C2419_VT);
    s.tmp_3 = r0;
    s.tmp_4 = scene_Scene_constructor__P2440_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_5 = control_pushEventContext__P398_mk(s);
    s.callLocIdx = 1096; s.pc = 16; return s.tmp_5;
  case 16:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.tmp_4.arg2 = globals._scene___4056;
    s.callLocIdx = 1097; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    globals._scene___4056 = (s.tmp_3);
  case 3:
  case 4:
    s.lastBrkId = 2650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2650]) return breakpoint(s, 17, 2650, r0);
  case 17:
    s.tmp_0 = scene_Scene_init__P2441_mk(s);
    s.tmp_0.arg0 = globals._scene___4056;
    s.callLocIdx = 1098; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2651]) return breakpoint(s, 19, 2651, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(globals.winEffect___2530);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2652]) return breakpoint(s, 20, 2652, r0);
  case 20:
    globals.winEffect___2530 = (globals.confetti___2801);
  case 5:
  case 6:
    s.lastBrkId = 2653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2653]) return breakpoint(s, 21, 2653, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(globals.loseEffect___2531);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2654]) return breakpoint(s, 22, 2654, r0);
  case 22:
    globals.loseEffect___2531 = (globals.melt___2822);
  case 7:
  case 8:
    s.lastBrkId = 2655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2655]) return breakpoint(s, 23, 2655, r0);
  case 23:
    r0 = pxsim_numops_toBoolDecr(globals.winSound___4055);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2656]) return breakpoint(s, 24, 2656, r0);
  case 24:
    globals.winSound___4055 = (globals.powerUp___1618);
  case 9:
  case 10:
    s.lastBrkId = 2657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2657]) return breakpoint(s, 25, 2657, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(globals.loseSound___4053);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 2658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2658]) return breakpoint(s, 26, 2658, r0);
  case 26:
    globals.loseSound___4053 = (globals.wawawawaa___1615);
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_init__P4064.info = {"start":1202,"length":452,"line":45,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["forceNewScene"]}

function game_init__P4064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_init__P4064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function inline__P9192(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rounds___9195 = undefined;
    s.j___9203 = undefined;
    s.x___9208 = undefined;
    s.y___9214 = undefined;
    s.c___9220 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.rounds___9195 = (r0);
    s.j___9203 = (0);
  case 1:
    r0 = (s.j___9203 < s.rounds___9195);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 53; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___9208 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 54; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___9214 = (r0);
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___9208, s.y___9214);
    s.c___9220 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___9208;
    r0 = (s.y___9214 + 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___9220);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___9208;
    r0 = (s.y___9214 + 2);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___9220);
    r0 = (s.j___9203 + 1);
    s.j___9203 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P9192.info = {"start":2652,"length":386,"line":72,"column":45,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function inline__P9192_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P9192, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  rounds___9195: undefined,
  j___9203: undefined,
  x___9208: undefined,
  y___9214: undefined,
  c___9220: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_FastRandom_randomRange__P2590(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2586_VT)) failedCast(r0);
    s.lastBrkId = 2741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2741]) return breakpoint(s, 3, 2741, r0);
  case 3:
    r0 = (s.arg2 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = Math_FastRandom_next__P2589_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1142; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.arg2 - s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 % s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.arg1 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_randomRange__P2590.info = {"start":2079,"length":131,"line":62,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"randomRange","argumentNames":["this","min","max"]}

function Math_FastRandom_randomRange__P2590_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_randomRange__P2590, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_FastRandom_next__P2589(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2586_VT)) failedCast(r0);
    s.lastBrkId = 2740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2740]) return breakpoint(s, 1, 2740, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 & 1);
    s.tmp_6 = r0;
    r0 = (0 - s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 46080);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 ^ s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lfsr"] = (s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_next__P2589.info = {"start":1713,"length":107,"line":53,"column":8,"endLine":55,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"next","argumentNames":["this"]}

function Math_FastRandom_next__P2589_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_next__P2589, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_constructor__P2817(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2816_VT)) failedCast(r0);
    s.lastBrkId = 3295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3295]) return breakpoint(s, 1, 3295, r0);
  case 1:
    r0 = (s.arg0).fields["effect"] = (s.arg2);
    s.lastBrkId = 3296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3296]) return breakpoint(s, 2, 3296, r0);
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2586_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2588_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1491; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["fastRandom"] = (s.tmp_0);
    s.lastBrkId = 3297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3297]) return breakpoint(s, 4, 3297, r0);
  case 4:
    r0 = (s.arg0).fields["preferredDelay"] = (s.arg1);
    s.lastBrkId = 3298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3298]) return breakpoint(s, 5, 3298, r0);
  case 5:
    r0 = (s.arg0).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_constructor__P2817.info = {"start":410,"length":290,"line":10,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["this","defaultRate","effectFactory"]}

function effects_ImageEffect_constructor__P2817_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_constructor__P2817, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P9300(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___9303 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_ConfettiFactory__C2745_VT);
    s.tmp_0 = r0;
    s.tmp_2 = if_width_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "width");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["width"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["width"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 37; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_width_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "width");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["width"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["width"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 38; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = 16;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = particles_ConfettiFactory_constructor__P2746_mk(s);
    s.tmp_5.arg0 = s.tmp_0;
    s.tmp_5.arg1 = s.tmp_4;
    s.tmp_5.arg2 = 16;
    s.callLocIdx = 39; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.factory___9303 = (s.tmp_0);
    s.tmp_0 = particles_SprayFactory_setSpeed__P2722_mk(s);
    s.tmp_0.arg0 = s.factory___9303;
    s.tmp_0.arg1 = 30;
    s.callLocIdx = 40; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C2678_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P2683_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___9303;
    s.callLocIdx = 41; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
inline__P9300.info = {"start":7534,"length":284,"line":191,"column":59,"endLine":195,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function inline__P9300_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P9300, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  factory___9303: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_SprayFactory_setSpeed__P2722(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2718_VT)) failedCast(r0);
    s.lastBrkId = 3159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3159]) return breakpoint(s, 1, 3159, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1397; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["speed"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setSpeed__P2722.info = {"start":3322,"length":92,"line":119,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setSpeed","argumentNames":["this","pixelsPerSecond"]}

function particles_SprayFactory_setSpeed__P2722_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setSpeed__P2722, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ConfettiFactory_constructor__P2746(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.confetti___10006 = undefined;
    s.i___10022 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ConfettiFactory__C2745_VT)) failedCast(r0);
    s.lastBrkId = 3200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3200]) return breakpoint(s, 3, 3200, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex10009);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex10011);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = pxsim.image.ofBuffer(_hex10013);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex10015);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    r0 = pxsim.image.ofBuffer(_hex10017);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    s.confetti___10006 = (s.tmp_0);
    s.lastBrkId = 3201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3201]) return breakpoint(s, 4, 3201, r0);
  case 4:
    s.tmp_0 = particles_ShapeFactory_constructor__P2741_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = pxsim_Array__getAt(s.confetti___10006, 0);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1437; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 3202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3202]) return breakpoint(s, 6, 3202, r0);
  case 6:
    s.i___10022 = (1);
    s.lastBrkId = 3203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3203]) return breakpoint(s, 7, 3203, r0);
  case 7:
  case 1:
    s.lastBrkId = 3204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3204]) return breakpoint(s, 8, 3204, r0);
  case 8:
    s.tmp_1 = r0 = s.i___10022;
    r0 = pxsim_Array__length(s.confetti___10006);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3205]) return breakpoint(s, 9, 3205, r0);
  case 9:
    s.tmp_3 = particles_ShapeFactory_addShape__P2742_mk(s);
    s.tmp_3.arg0 = s.arg0;
    r0 = pxsim_Array__getAt(s.confetti___10006, s.i___10022);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1438; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 3206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3206]) return breakpoint(s, 11, 3206, r0);
  case 11:
    r0 = (s.i___10022 + 1);
    s.i___10022 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 3207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3207]) return breakpoint(s, 12, 3207, r0);
  case 12:
    r0 = (s.arg0).fields["minLifespan"] = (1000);
    s.lastBrkId = 3208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3208]) return breakpoint(s, 13, 3208, r0);
  case 13:
    r0 = (s.arg0).fields["maxLifespan"] = (4500);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ConfettiFactory_constructor__P2746.info = {"start":7755,"length":706,"line":247,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange"]}

function particles_ConfettiFactory_constructor__P2746_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ConfettiFactory_constructor__P2746, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  confetti___10006: undefined,
  i___10022: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }

const _hex10009 = pxsim.BufferMethods.createBufferFromHex("87040100010000000f000000")
const _hex10011 = pxsim.BufferMethods.createBufferFromHex("8704010002000000ff000000")
const _hex10013 = pxsim.BufferMethods.createBufferFromHex("87040200010000000f0000000f000000")
const _hex10015 = pxsim.BufferMethods.createBufferFromHex("8704020002000000ff0000000f000000")
const _hex10017 = pxsim.BufferMethods.createBufferFromHex("87040200020000000f000000ff000000")




function particles_ShapeFactory_addShape__P2742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2740_VT)) failedCast(r0);
    s.lastBrkId = 3192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3192]) return breakpoint(s, 3, 3192, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3193]) return breakpoint(s, 4, 3193, r0);
  case 4:
    r0 = s.arg0.fields["sources"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_addShape__P2742.info = {"start":7079,"length":83,"line":225,"column":8,"endLine":227,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"addShape","argumentNames":["this","shape"]}

function particles_ShapeFactory_addShape__P2742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_addShape__P2742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ShapeFactory_constructor__P2741(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2740_VT)) failedCast(r0);
    s.lastBrkId = 3188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3188]) return breakpoint(s, 1, 3188, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_constructor__P2729_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = undefined;
    s.callLocIdx = 1427; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3189]) return breakpoint(s, 3, 3189, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    r0 = (s.arg0).fields["sources"] = (s.tmp_0);
    s.lastBrkId = 3190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3190]) return breakpoint(s, 4, 3190, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = pxsim_ImageMethods.width(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1428; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ox"] = (s.tmp_1);
    s.lastBrkId = 3191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3191]) return breakpoint(s, 6, 3191, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = pxsim_ImageMethods.height(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1429; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["oy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_constructor__P2741.info = {"start":6668,"length":285,"line":212,"column":8,"endLine":219,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","source"]}

function particles_ShapeFactory_constructor__P2741_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_constructor__P2741, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_AreaFactory_constructor__P2729(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C2724_VT)) failedCast(r0);
    s.lastBrkId = 3162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3162]) return breakpoint(s, 5, 3162, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_constructor__P2719_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 90;
    s.callLocIdx = 1400; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3163]) return breakpoint(s, 7, 3163, r0);
  case 7:
    r0 = (s.arg0).fields["xRange"] = (s.arg1);
    s.lastBrkId = 3164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3164]) return breakpoint(s, 8, 3164, r0);
  case 8:
    r0 = (s.arg0).fields["yRange"] = (s.arg2);
    s.lastBrkId = 3165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3165]) return breakpoint(s, 9, 3165, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 1; continue; }
    r0 = s.arg3;
    { step = 2; continue; }
  case 1:
    r0 = 150;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["minLifespan"] = (s.tmp_0);
    s.lastBrkId = 3166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3166]) return breakpoint(s, 10, 3166, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 3; continue; }
    r0 = s.arg4;
    { step = 4; continue; }
  case 3:
    r0 = 850;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["maxLifespan"] = (s.tmp_0);
    s.lastBrkId = 3167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3167]) return breakpoint(s, 11, 3167, r0);
  case 11:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2586_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2588_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1401; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    r0 = (s.arg0).fields["galois"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_constructor__P2729.info = {"start":3950,"length":374,"line":139,"column":8,"endLine":146,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","minLifespan","maxLifespan"]}

function particles_AreaFactory_constructor__P2729_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_constructor__P2729, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function particles_SprayFactory_constructor__P2719(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2718_VT)) failedCast(r0);
    s.lastBrkId = 3149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3149]) return breakpoint(s, 1, 3149, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_constructor__P2715_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1387; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3150]) return breakpoint(s, 3, 3150, r0);
  case 3:
    s.tmp_0 = particles_initTrig__P4435_mk(s);
    s.callLocIdx = 1388; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3151]) return breakpoint(s, 5, 3151, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_setSpeed__P2722_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1389; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3152]) return breakpoint(s, 7, 3152, r0);
  case 7:
    s.tmp_0 = particles_SprayFactory_setDirection__P2723_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1390; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_constructor__P2719.info = {"start":2623,"length":218,"line":98,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","speed","centerDegrees","arcDegrees"]}

function particles_SprayFactory_constructor__P2719_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_constructor__P2719, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_initTrig__P4435(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3118]) return breakpoint(s, 3, 3118, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.cachedSin___4421);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3119]) return breakpoint(s, 4, 3119, r0);
  case 4:
    s.tmp_2 = particles_cacheSin__P2712_mk(s);
    s.tmp_2.arg0 = 100;
    s.callLocIdx = 1376; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    globals.cachedSin___4421 = (r0);
    s.lastBrkId = 3120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3120]) return breakpoint(s, 6, 3120, r0);
  case 6:
    s.tmp_0 = particles_cacheCos__P2713_mk(s);
    s.tmp_0.arg0 = 100;
    s.callLocIdx = 1377; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    globals.cachedCos___4422 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_initTrig__P4435.info = {"start":291,"length":155,"line":11,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"initTrig","argumentNames":[]}

function particles_initTrig__P4435_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_initTrig__P4435, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function particles_cacheCos__P2713(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cos___9427 = undefined;
    s.anglePerSlice___9429 = undefined;
    s.i___9435 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3129]) return breakpoint(s, 3, 3129, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.cos___9427 = (r0);
    s.lastBrkId = 3130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3130]) return breakpoint(s, 4, 3130, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___9429 = (r0);
    s.lastBrkId = 3131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3131]) return breakpoint(s, 5, 3131, r0);
  case 5:
    s.i___9435 = (0);
    s.lastBrkId = 3132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3132]) return breakpoint(s, 6, 3132, r0);
  case 6:
  case 1:
    s.lastBrkId = 3133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3133]) return breakpoint(s, 7, 3133, r0);
  case 7:
    r0 = (s.i___9435 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3134]) return breakpoint(s, 8, 3134, r0);
  case 8:
    s.tmp_1 = r0 = s.cos___9427;
    s.tmp_3 = Fx8__P144_mk(s);
    r0 = (s.i___9435 * s.anglePerSlice___9429);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.cos(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1379; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 3135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3135]) return breakpoint(s, 10, 3135, r0);
  case 10:
    r0 = (s.i___9435 + 1);
    s.i___9435 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 3136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3136]) return breakpoint(s, 11, 3136, r0);
  case 11:
    r0 = s.cos___9427;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheCos__P2713.info = {"start":1005,"length":263,"line":35,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheCos","argumentNames":["slices"]}

function particles_cacheCos__P2713_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheCos__P2713, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  cos___9427: undefined,
  anglePerSlice___9429: undefined,
  i___9435: undefined,
  arg0: undefined,
} }





function particles_cacheSin__P2712(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sin___9453 = undefined;
    s.anglePerSlice___9455 = undefined;
    s.i___9461 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3121]) return breakpoint(s, 3, 3121, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.sin___9453 = (r0);
    s.lastBrkId = 3122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3122]) return breakpoint(s, 4, 3122, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___9455 = (r0);
    s.lastBrkId = 3123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3123]) return breakpoint(s, 5, 3123, r0);
  case 5:
    s.i___9461 = (0);
    s.lastBrkId = 3124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3124]) return breakpoint(s, 6, 3124, r0);
  case 6:
  case 1:
    s.lastBrkId = 3125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3125]) return breakpoint(s, 7, 3125, r0);
  case 7:
    r0 = (s.i___9461 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3126]) return breakpoint(s, 8, 3126, r0);
  case 8:
    s.tmp_1 = r0 = s.sin___9453;
    s.tmp_3 = Fx8__P144_mk(s);
    r0 = (s.i___9461 * s.anglePerSlice___9455);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.sin(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1378; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 3127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3127]) return breakpoint(s, 10, 3127, r0);
  case 10:
    r0 = (s.i___9461 + 1);
    s.i___9461 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 3128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3128]) return breakpoint(s, 11, 3128, r0);
  case 11:
    r0 = s.sin___9453;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheSin__P2712.info = {"start":594,"length":263,"line":22,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheSin","argumentNames":["slices"]}

function particles_cacheSin__P2712_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheSin__P2712, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sin___9453: undefined,
  anglePerSlice___9455: undefined,
  i___9461: undefined,
  arg0: undefined,
} }





function particles_SprayFactory_setDirection__P2723(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2718_VT)) failedCast(r0);
    s.lastBrkId = 3160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3160]) return breakpoint(s, 1, 3160, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P4440_mk(s);
    s.tmp_5 = r0 = s.arg1;
    r0 = (s.arg2 >> 1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1398; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___4434);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minAngle"] = (s.tmp_1);
    s.lastBrkId = 3161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3161]) return breakpoint(s, 3, 3161, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P4440_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1399; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___4434);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spread"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setDirection__P2723.info = {"start":3424,"length":228,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setDirection","argumentNames":["this","centerDegrees","arcDegrees"]}

function particles_SprayFactory_setDirection__P2723_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setDirection__P2723, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_toRadians__P4440(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3137]) return breakpoint(s, 3, 3137, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3138]) return breakpoint(s, 4, 3138, r0);
  case 4:
    s.tmp_3 = Math_abs__P123_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1380; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 360);
    s.tmp_1 = r0;
    r0 = (360 - s.tmp_1);
    s.arg0 = (r0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3139]) return breakpoint(s, 6, 3139, r0);
  case 6:
    r0 = (s.arg0 % 360);
    s.arg0 = (r0);
  case 2:
    s.lastBrkId = 3140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3140]) return breakpoint(s, 7, 3140, r0);
  case 7:
    r0 = (s.arg0 * 0.017453292519943295);
    return leave(s, r0)
  default: oops()
} } }
particles_toRadians__P4440.info = {"start":1307,"length":206,"line":45,"column":4,"endLine":52,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"toRadians","argumentNames":["degrees"]}

function particles_toRadians__P4440_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_toRadians__P4440, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function particles_ParticleFactory_constructor__P2715(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C2714_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_constructor__P2715.info = {"start":1617,"length":78,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this"]}

function particles_ParticleFactory_constructor__P2715_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_constructor__P2715, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_ScreenEffect_constructor__P2794(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C2793_VT)) failedCast(r0);
    s.lastBrkId = 3267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3267]) return breakpoint(s, 1, 3267, r0);
  case 1:
    s.tmp_0 = effects_ParticleEffect_constructor__P2790_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.callLocIdx = 1472; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3268]) return breakpoint(s, 3, 3268, r0);
  case 3:
    r0 = (s.arg0).fields["sceneDefaultRate"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_constructor__P2794.info = {"start":2911,"length":332,"line":81,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","anchorDefault","sceneDefault","defaultLifespan","sourceFactory"]}

function effects_ScreenEffect_constructor__P2794_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_constructor__P2794, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function scene_Scene_init__P2441(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    s.lastBrkId = 2456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2456]) return breakpoint(s, 4, 2456, r0);
  case 4:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2457]) return breakpoint(s, 5, 2457, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2458]) return breakpoint(s, 6, 2458, r0);
  case 6:
    s.tmp_1 = power_poke__P1705_mk(s);
    s.callLocIdx = 1017; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2459]) return breakpoint(s, 8, 2459, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["allSprites"] = (s.tmp_1);
    s.lastBrkId = 2460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2460]) return breakpoint(s, 9, 2460, r0);
  case 9:
    r0 = (s.arg0).fields["spriteNextId"] = (0);
    s.lastBrkId = 2461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2461]) return breakpoint(s, 10, 2461, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10141);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 8;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1020; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2465]) return breakpoint(s, 12, 2465, r0);
  case 12:
    s.tmp_0 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 13;
    s.tmp_0.arg2 = controller__moveSprites__P1922;
    s.callLocIdx = 1021; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2466]) return breakpoint(s, 14, 2466, r0);
  case 14:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10165);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1023; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2469]) return breakpoint(s, 16, 2469, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10178);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 55;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1027; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2475]) return breakpoint(s, 18, 2475, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10199);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 90;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1029; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2478]) return breakpoint(s, 20, 2478, r0);
  case 20:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10207);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 150;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1033; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 2485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2485]) return breakpoint(s, 22, 2485, r0);
  case 22:
    s.tmp_0 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 200;
    s.tmp_0.arg2 = control___screen_update__P1763;
    s.callLocIdx = 1034; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 2486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2486]) return breakpoint(s, 24, 2486, r0);
  case 24:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10236);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_1.arg0 = globals.scene_Scene_initializers___2439;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1036; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init__P2441.info = {"start":4168,"length":2477,"line":122,"column":8,"endLine":180,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"init","argumentNames":["this"]}

function scene_Scene_init__P2441_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init__P2441, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P10141(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2462]) return breakpoint(s, 1, 2462, r0);
  case 1:
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["_millis"];
    s.tmp_2 = r0;
    r0 = s.caps[0].fields["eventContext"];
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_millis"] = (s.tmp_1);
    s.lastBrkId = 2463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2463]) return breakpoint(s, 2, 2463, r0);
  case 2:
    s.lastBrkId = 2464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2464]) return breakpoint(s, 3, 2464, r0);
  case 3:
    s.tmp_0 = controller___update__P1950_mk(s);
    s.tmp_1 = control_EventContext_deltaTime__P389_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1018; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1019; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10141.info = {"start":4458,"length":217,"line":129,"column":72,"endLine":133,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function inline__P10141_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10141, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P10165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2467]) return breakpoint(s, 1, 2467, r0);
  case 1:
    s.lastBrkId = 2468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2468]) return breakpoint(s, 2, 2468, r0);
  case 2:
    s.tmp_0 = PhysicsEngine__C2159_v4_2_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = control_EventContext_deltaTime__P389_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1022; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.move;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10165.info = {"start":4970,"length":159,"line":138,"column":69,"endLine":141,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function inline__P10165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function inline__P10178(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dt___10179 = undefined;
    s.s___10187 = undefined;
    s.unnamed2892___U2 = undefined;
    s.unnamed2893___U3 = undefined;
    s.lastBrkId = 2470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2470]) return breakpoint(s, 3, 2470, r0);
  case 3:
    s.tmp_0 = control_EventContext_deltaTime__P389_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1024; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.dt___10179 = (r0);
    s.lastBrkId = 2471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2471]) return breakpoint(s, 5, 2471, r0);
  case 5:
    s.tmp_0 = scene_Camera_update__P2376_mk(s);
    r0 = s.caps[0].fields["camera"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1025; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2472]) return breakpoint(s, 7, 2472, r0);
  case 7:
    s.s___10187 = (undefined);
    r0 = s.caps[0].fields["allSprites"];
    s.unnamed2892___U2 = (r0);
    s.unnamed2893___U3 = (0);
    s.lastBrkId = 2473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2473]) return breakpoint(s, 8, 2473, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed2893___U3;
    r0 = pxsim_Array__length(s.unnamed2892___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2892___U2, s.unnamed2893___U3);
    s.s___10187 = (r0);
    s.lastBrkId = 2474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2474]) return breakpoint(s, 9, 2474, r0);
  case 9:
    s.tmp_2 = if___update_3_mk(s);
    s.tmp_2.arg0 = s.s___10187;
    r0 = s.caps[0].fields["camera"];
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.dt___10179;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__update"), 3);
      s.callLocIdx = 1026; s.pc = 10; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__update"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__update"], 3); s.callLocIdx = 1026; s.pc = 10; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1026; s.pc = 10; return s.tmp_2;; }
     else { s.callLocIdx = 1026; s.pc = 10; return s.tmp_2; }
    }
  case 10:
    r0 = s.retval;
    r0 = (s.unnamed2893___U3 + 1);
    s.unnamed2893___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed2892___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10178.info = {"start":5318,"length":214,"line":147,"column":79,"endLine":153,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function inline__P10178_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10178, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dt___10179: undefined,
  s___10187: undefined,
  unnamed2892___U2: undefined,
  unnamed2893___U3: undefined,
} }





function inline__P10199(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2476]) return breakpoint(s, 1, 2476, r0);
  case 1:
    s.lastBrkId = 2477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2477]) return breakpoint(s, 2, 2477, r0);
  case 2:
    s.tmp_0 = scene_Scene_render__P2446_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1028; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10199.info = {"start":5673,"length":109,"line":158,"column":76,"endLine":161,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function inline__P10199_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10199, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P10207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2479]) return breakpoint(s, 7, 2479, r0);
  case 7:
    s.tmp_0 = r0 = globals.stats___2529;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___387;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2480]) return breakpoint(s, 8, 2480, r0);
  case 8:
    s.tmp_2 = lambda_2_mk(s);
    s.tmp_2.argL = globals.control_EventContext_onStats___387;
    if ((globals.control_EventContext_lastStats___386) && (globals.control_EventContext_lastStats___386).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___386);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___386) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.caps[0].fields["allSprites"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(" sprites:", s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 1030; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 2481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2481]) return breakpoint(s, 13, 2481, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2528);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2482]) return breakpoint(s, 14, 2482, r0);
  case 14:
    s.tmp_0 = PhysicsEngine__C2159_v3_1_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 2483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2483]) return breakpoint(s, 16, 2483, r0);
  case 16:
    s.tmp_0 = game_consoleOverlay_draw__P2654_mk(s);
    s.callLocIdx = 1031; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2484]) return breakpoint(s, 18, 2484, r0);
  case 18:
    s.tmp_0 = power_checkDeepSleep__P1706_mk(s);
    s.callLocIdx = 1032; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10207.info = {"start":5899,"length":504,"line":163,"column":80,"endLine":175,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function inline__P10207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
} }





function inline__P10236(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1035; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10236.info = {"start":6621,"length":12,"line":179,"column":39,"endLine":179,"endColumn":51,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["f"]}

function inline__P10236_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10236, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_draw__P2654(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.height___10285 = undefined;
    s.top___10290 = undefined;
    s.i___10296 = undefined;
    s.t___10309 = undefined;
    s.tOff___10316 = undefined;
    s.tab___10318 = undefined;
    s.unnamed2896___U6 = undefined;
    s.unnamed2897___U7 = undefined;
    s.padding___10320 = undefined;
    s.lastBrkId = 2956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2956]) return breakpoint(s, 14, 2956, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4354);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = scene_systemMenu_isVisible__P2635_mk(s);
    s.callLocIdx = 1304; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2957]) return breakpoint(s, 16, 2957, r0);
  case 16:
    { step = 13; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2958]) return breakpoint(s, 17, 2958, r0);
  case 17:
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___4362;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1305; s.pc = 18; return s.tmp_5; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.height___10285 = (r0);
    s.lastBrkId = 2959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2959]) return breakpoint(s, 19, 2959, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2529);
    if (!r0) { step = 5; continue; }
    r0 = s.height___10285;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (2 + s.tmp_0);
    s.top___10290 = (r0);
    s.lastBrkId = 2960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2960]) return breakpoint(s, 20, 2960, r0);
  case 20:
    s.i___10296 = (0);
    s.lastBrkId = 2961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2961]) return breakpoint(s, 21, 2961, r0);
  case 21:
  case 7:
    s.lastBrkId = 2962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2962]) return breakpoint(s, 22, 2962, r0);
  case 22:
    s.tmp_1 = r0 = s.i___10296;
    r0 = pxsim_Array__length(globals.consoleStrings___4354);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 2963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2963]) return breakpoint(s, 23, 2963, r0);
  case 23:
    r0 = pxsim_Array__getAt(globals.consoleStrings___4354, s.i___10296);
    s.tmp_5 = r0;
    r0 = pxsim_String_.indexOf(s.tmp_5, "\t", undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >= 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2964]) return breakpoint(s, 24, 2964, r0);
  case 24:
    s.tmp_6 = helpers_stringSplit__P117_mk(s);
    r0 = pxsim_Array__getAt(globals.consoleStrings___4354, s.i___10296);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = "\t";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1306; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
    s.t___10309 = (r0);
    s.lastBrkId = 2965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2965]) return breakpoint(s, 26, 2965, r0);
  case 26:
    s.tOff___10316 = (0);
    s.lastBrkId = 2966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2966]) return breakpoint(s, 27, 2966, r0);
  case 27:
    s.tab___10318 = (undefined);
    s.unnamed2896___U6 = (s.t___10309);
    s.unnamed2897___U7 = (0);
    s.lastBrkId = 2967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2967]) return breakpoint(s, 28, 2967, r0);
  case 28:
  case 8:
    s.tmp_0 = r0 = s.unnamed2897___U7;
    r0 = pxsim_Array__length(s.unnamed2896___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2896___U6, s.unnamed2897___U7);
    s.tab___10318 = (r0);
    s.lastBrkId = 2968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2968]) return breakpoint(s, 29, 2968, r0);
  case 29:
    s.tmp_2 = r0 = globals.tabSize___4356;
    s.tmp_5 = r0 = s.tOff___10316;
    r0 = pxsim_String_.length(s.tab___10318);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 % globals.tabSize___4356);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.padding___10320 = (r0);
    s.lastBrkId = 2969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2969]) return breakpoint(s, 30, 2969, r0);
  case 30:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.tab___10318;
    s.tmp_2 = r0 = s.tOff___10316;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___4362;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1307; s.pc = 32; return s.tmp_4; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.tmp_5 = r0 = s.top___10290;
    r0 = (s.i___10296 * s.height___10285);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___4353;
    s.tmp_0.arg5 = globals.consoleFont___4362;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1308; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2970]) return breakpoint(s, 33, 2970, r0);
  case 33:
    s.tmp_0 = r0 = s.tOff___10316;
    r0 = pxsim_String_.length(s.tab___10318);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___10320);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.tOff___10316 = (r0);
    r0 = (s.unnamed2897___U7 + 1);
    s.unnamed2897___U7 = (r0);
    { step = 8; continue; }
  case 9:
    s.unnamed2896___U6 = (undefined);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 2971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2971]) return breakpoint(s, 34, 2971, r0);
  case 34:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = pxsim_Array__getAt(globals.consoleStrings___4354, s.i___10296);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 4;
    s.tmp_1 = r0 = s.top___10290;
    r0 = (s.i___10296 * s.height___10285);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___4353;
    s.tmp_0.arg5 = globals.consoleFont___4362;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1309; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
  case 11:
    s.lastBrkId = 2972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2972]) return breakpoint(s, 36, 2972, r0);
  case 36:
    r0 = (s.i___10296 + 1);
    s.i___10296 = (r0);
    { step = 7; continue; }
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_draw__P2654.info = {"start":1364,"length":859,"line":44,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"draw","argumentNames":[]}

function game_consoleOverlay_draw__P2654_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_draw__P2654, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  height___10285: undefined,
  top___10290: undefined,
  i___10296: undefined,
  t___10309: undefined,
  tOff___10316: undefined,
  tab___10318: undefined,
  unnamed2896___U6: undefined,
  unnamed2897___U7: undefined,
  padding___10320: undefined,
} }





function scene_systemMenu_isVisible__P2635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2914]) return breakpoint(s, 1, 2914, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.instance___4308);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_isVisible__P2635.info = {"start":13170,"length":62,"line":395,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"isVisible","argumentNames":[]}

function scene_systemMenu_isVisible__P2635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_isVisible__P2635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function helpers_imagePrint__P1760(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___6645 = undefined;
    s.cp___6647 = undefined;
    s.mult___6648 = undefined;
    s.dataW___6653 = undefined;
    s.dataH___6659 = undefined;
    s.byteHeight___6665 = undefined;
    s.charSize___6671 = undefined;
    s.dataSize___6675 = undefined;
    s.fontdata___6679 = undefined;
    s.lastchar___6682 = undefined;
    s.imgBuf___6689 = undefined;
    s.xOffset___6713 = undefined;
    s.yOffset___6714 = undefined;
    s.ch___6729 = undefined;
    s.l___6748 = undefined;
    s.r___6749 = undefined;
    s.off___6751 = undefined;
    s.guess___6752 = undefined;
    s.m___6771 = undefined;
    s.v___6780 = undefined;
    s.i___6836 = undefined;
    s.j___6841 = undefined;
    s.mask___6842 = undefined;
    s.c___6843 = undefined;
    s.n___6860 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[857]) return breakpoint(s, 39, 857, r0);
  case 39:
    r0 = (s.arg2 | 0);
    s.arg2 = (r0);
    s.lastBrkId = 858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[858]) return breakpoint(s, 40, 858, r0);
  case 40:
    r0 = (s.arg3 | 0);
    s.arg3 = (r0);
    s.lastBrkId = 859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[859]) return breakpoint(s, 41, 859, r0);
  case 41:
    r0 = pxsim_numops_toBoolDecr(s.arg5);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[860]) return breakpoint(s, 42, 860, r0);
  case 42:
    s.tmp_2 = image_getFontForText__P1747_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 142; s.pc = 43; return s.tmp_2;
  case 43:
    r0 = s.retval;
    s.arg5 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[861]) return breakpoint(s, 44, 861, r0);
  case 44:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[862]) return breakpoint(s, 45, 862, r0);
  case 45:
    s.arg4 = (1);
  case 3:
  case 4:
    s.lastBrkId = 863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[863]) return breakpoint(s, 46, 863, r0);
  case 46:
    s.x0___6645 = (s.arg2);
    s.lastBrkId = 864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[864]) return breakpoint(s, 47, 864, r0);
  case 47:
    s.cp___6647 = (0);
    s.lastBrkId = 865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[865]) return breakpoint(s, 48, 865, r0);
  case 48:
    s.tmp_1 = if_multiplier_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "multiplier");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["multiplier"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["multiplier"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 143; s.pc = 49; return s.tmp_1; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_multiplier_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "multiplier");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["multiplier"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["multiplier"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 144; s.pc = 50; return s.tmp_2; }
    }
  case 50:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    r0 = 1;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.mult___6648 = (s.tmp_3);
    s.lastBrkId = 866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[866]) return breakpoint(s, 51, 866, r0);
  case 51:
    s.tmp_1 = if_charWidth_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charWidth");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charWidth"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charWidth"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 145; s.pc = 52; return s.tmp_1; }
    }
  case 52:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___6648);
    s.dataW___6653 = (r0);
    s.lastBrkId = 867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[867]) return breakpoint(s, 53, 867, r0);
  case 53:
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 146; s.pc = 54; return s.tmp_1; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___6648);
    s.dataH___6659 = (r0);
    s.lastBrkId = 868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[868]) return breakpoint(s, 55, 868, r0);
  case 55:
    r0 = (s.dataH___6659 + 7);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 3);
    s.byteHeight___6665 = (r0);
    s.lastBrkId = 869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[869]) return breakpoint(s, 56, 869, r0);
  case 56:
    r0 = (s.byteHeight___6665 * s.dataW___6653);
    s.charSize___6671 = (r0);
    s.lastBrkId = 870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[870]) return breakpoint(s, 57, 870, r0);
  case 57:
    r0 = (2 + s.charSize___6671);
    s.dataSize___6675 = (r0);
    s.lastBrkId = 871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[871]) return breakpoint(s, 58, 871, r0);
  case 58:
    s.tmp_0 = if_data_1_mk(s);
    s.tmp_0.arg0 = s.arg5;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "data");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["data"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["data"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 147; s.pc = 59; return s.tmp_0; }
    }
  case 59:
    r0 = s.retval;
    s.fontdata___6679 = (r0);
    s.lastBrkId = 872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[872]) return breakpoint(s, 60, 872, r0);
  case 60:
    r0 = pxsim.BufferMethods.length(s.fontdata___6679);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, s.dataSize___6675);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.lastchar___6682 = (r0);
    s.lastBrkId = 873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[873]) return breakpoint(s, 61, 873, r0);
  case 61:
    r0 = (s.mult___6648 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[874]) return breakpoint(s, 62, 874, r0);
  case 62:
    r0 = (8 + s.charSize___6671);
    s.tmp_1 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_1);
    s.imgBuf___6689 = (r0);
    s.lastBrkId = 875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[875]) return breakpoint(s, 63, 875, r0);
  case 63:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___6689, 0, 135);
    s.lastBrkId = 876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[876]) return breakpoint(s, 64, 876, r0);
  case 64:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___6689, 1, 1);
    s.lastBrkId = 877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[877]) return breakpoint(s, 65, 877, r0);
  case 65:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___6689, 2, s.dataW___6653);
    s.lastBrkId = 878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[878]) return breakpoint(s, 66, 878, r0);
  case 66:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___6689, 4, s.dataH___6659);
  case 7:
  case 8:
    s.lastBrkId = 879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[879]) return breakpoint(s, 67, 879, r0);
  case 67:
  case 9:
    s.lastBrkId = 880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[880]) return breakpoint(s, 68, 880, r0);
  case 68:
    s.tmp_1 = r0 = s.cp___6647;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    s.lastBrkId = 881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[881]) return breakpoint(s, 69, 881, r0);
  case 69:
    s.xOffset___6713 = (0);
    s.lastBrkId = 882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[882]) return breakpoint(s, 70, 882, r0);
  case 70:
    s.yOffset___6714 = (0);
    s.lastBrkId = 883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[883]) return breakpoint(s, 71, 883, r0);
  case 71:
    s.tmp_0 = r0 = s.arg6;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.cp___6647;
    r0 = pxsim_Array__length(s.arg6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[884]) return breakpoint(s, 72, 884, r0);
  case 72:
    s.tmp_4 = if_xOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___6647);
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "xOffset");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["xOffset"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["xOffset"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 148; s.pc = 73; return s.tmp_4; }
    }
  case 73:
    r0 = s.retval;
    s.xOffset___6713 = (r0);
    s.lastBrkId = 885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[885]) return breakpoint(s, 74, 885, r0);
  case 74:
    s.tmp_0 = if_yOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___6647);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "yOffset");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["yOffset"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["yOffset"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 149; s.pc = 75; return s.tmp_0; }
    }
  case 75:
    r0 = s.retval;
    s.yOffset___6714 = (r0);
  case 12:
  case 13:
    s.lastBrkId = 886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[886]) return breakpoint(s, 76, 886, r0);
  case 76:
    s.tmp_0 = r0 = s.cp___6647;
    r0 = (s.tmp_0 + 1);
    s.cp___6647 = (r0);
    r0 = pxsim_String_.charCodeAt(s.arg1, s.tmp_0);
    s.ch___6729 = (r0);
    s.lastBrkId = 887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[887]) return breakpoint(s, 77, 887, r0);
  case 77:
    r0 = (s.ch___6729 == 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[888]) return breakpoint(s, 78, 888, r0);
  case 78:
    s.tmp_1 = r0 = s.arg3;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = s.arg5;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 150; s.pc = 79; return s.tmp_4; }
    }
  case 79:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.arg3 = (r0);
    s.lastBrkId = 889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[889]) return breakpoint(s, 80, 889, r0);
  case 80:
    s.arg2 = (s.x0___6645);
  case 14:
  case 15:
    s.lastBrkId = 890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[890]) return breakpoint(s, 81, 890, r0);
  case 81:
    r0 = (s.ch___6729 < 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[891]) return breakpoint(s, 82, 891, r0);
  case 82:
    { step = 9; continue; }
  case 16:
  case 17:
    s.lastBrkId = 892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[892]) return breakpoint(s, 83, 892, r0);
  case 83:
    s.l___6748 = (0);
    s.lastBrkId = 893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[893]) return breakpoint(s, 84, 893, r0);
  case 84:
    s.r___6749 = (s.lastchar___6682);
    s.lastBrkId = 894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[894]) return breakpoint(s, 85, 894, r0);
  case 85:
    s.off___6751 = (0);
    s.lastBrkId = 895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[895]) return breakpoint(s, 86, 895, r0);
  case 86:
    r0 = (s.ch___6729 - 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.dataSize___6675);
    s.guess___6752 = (r0);
    s.lastBrkId = 896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[896]) return breakpoint(s, 87, 896, r0);
  case 87:
    r0 = pxsim.BufferMethods.getNumber(s.fontdata___6679, 4, s.guess___6752);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.ch___6729);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[897]) return breakpoint(s, 88, 897, r0);
  case 88:
    s.off___6751 = (s.guess___6752);
    { step = 25; continue; }
  case 18:
    s.lastBrkId = 898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[898]) return breakpoint(s, 89, 898, r0);
  case 89:
  case 19:
    s.lastBrkId = 899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[899]) return breakpoint(s, 90, 899, r0);
  case 90:
    r0 = (s.l___6748 <= s.r___6749);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[900]) return breakpoint(s, 91, 900, r0);
  case 91:
    s.tmp_1 = r0 = s.l___6748;
    r0 = (s.r___6749 - s.l___6748);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.m___6771 = (r0);
    s.lastBrkId = 901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[901]) return breakpoint(s, 92, 901, r0);
  case 92:
    s.tmp_0 = r0 = s.fontdata___6679;
    r0 = (s.m___6771 * s.dataSize___6675);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, s.tmp_1);
    s.v___6780 = (r0);
    s.lastBrkId = 902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[902]) return breakpoint(s, 93, 902, r0);
  case 93:
    r0 = (s.v___6780 == s.ch___6729);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[903]) return breakpoint(s, 94, 903, r0);
  case 94:
    r0 = (s.m___6771 * s.dataSize___6675);
    s.off___6751 = (r0);
    s.lastBrkId = 904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[904]) return breakpoint(s, 95, 904, r0);
  case 95:
    { step = 24; continue; }
  case 20:
  case 21:
    s.lastBrkId = 905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[905]) return breakpoint(s, 96, 905, r0);
  case 96:
    r0 = (s.v___6780 < s.ch___6729);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[906]) return breakpoint(s, 97, 906, r0);
  case 97:
    r0 = (s.m___6771 + 1);
    s.l___6748 = (r0);
    { step = 23; continue; }
  case 22:
    s.lastBrkId = 907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[907]) return breakpoint(s, 98, 907, r0);
  case 98:
    r0 = (s.m___6771 - 1);
    s.r___6749 = (r0);
  case 23:
    { step = 19; continue; }
  case 24:
  case 25:
    s.lastBrkId = 908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[908]) return breakpoint(s, 99, 908, r0);
  case 99:
    r0 = (s.mult___6648 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[909]) return breakpoint(s, 100, 909, r0);
  case 100:
    s.tmp_1 = r0 = s.imgBuf___6689;
    s.tmp_3 = r0 = s.fontdata___6679;
    r0 = (s.off___6751 + 2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_3, s.tmp_4, s.charSize___6671);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_1, 8, s.tmp_2);
    s.lastBrkId = 910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[910]) return breakpoint(s, 101, 910, r0);
  case 101:
    s.tmp_0 = helpers_imageDrawIcon__P1727_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.imgBuf___6689;
    r0 = (s.arg2 + s.xOffset___6713);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg3 + s.yOffset___6714);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg4;
    s.callLocIdx = 151; s.pc = 102; return s.tmp_0;
  case 102:
    r0 = s.retval;
    s.lastBrkId = 911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[911]) return breakpoint(s, 103, 911, r0);
  case 103:
    s.tmp_0 = r0 = s.arg2;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 152; s.pc = 104; return s.tmp_2; }
    }
  case 104:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg2 = (r0);
    { step = 37; continue; }
  case 26:
    s.lastBrkId = 912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[912]) return breakpoint(s, 105, 912, r0);
  case 105:
    r0 = (s.off___6751 + 2);
    s.off___6751 = (r0);
    s.lastBrkId = 913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[913]) return breakpoint(s, 106, 913, r0);
  case 106:
    s.i___6836 = (0);
    s.lastBrkId = 914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[914]) return breakpoint(s, 107, 914, r0);
  case 107:
  case 27:
    s.lastBrkId = 915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[915]) return breakpoint(s, 108, 915, r0);
  case 108:
    r0 = (s.i___6836 < s.dataW___6653);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[916]) return breakpoint(s, 109, 916, r0);
  case 109:
    s.j___6841 = (0);
    s.lastBrkId = 917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[917]) return breakpoint(s, 110, 917, r0);
  case 110:
    s.mask___6842 = (1);
    s.lastBrkId = 918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[918]) return breakpoint(s, 111, 918, r0);
  case 111:
    s.tmp_0 = r0 = s.off___6751;
    r0 = (s.tmp_0 + 1);
    s.off___6751 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___6679, s.tmp_0);
    s.c___6843 = (r0);
    s.lastBrkId = 919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[919]) return breakpoint(s, 112, 919, r0);
  case 112:
  case 28:
    s.lastBrkId = 920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[920]) return breakpoint(s, 113, 920, r0);
  case 113:
    r0 = (s.j___6841 < s.dataH___6659);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    s.lastBrkId = 921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[921]) return breakpoint(s, 114, 921, r0);
  case 114:
    r0 = (s.mask___6842 == 256);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[922]) return breakpoint(s, 115, 922, r0);
  case 115:
    s.tmp_2 = r0 = s.off___6751;
    r0 = (s.tmp_2 + 1);
    s.off___6751 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___6679, s.tmp_2);
    s.c___6843 = (r0);
    s.lastBrkId = 923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[923]) return breakpoint(s, 116, 923, r0);
  case 116:
    s.mask___6842 = (1);
  case 29:
  case 30:
    s.lastBrkId = 924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[924]) return breakpoint(s, 117, 924, r0);
  case 117:
    s.n___6860 = (0);
    s.lastBrkId = 925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[925]) return breakpoint(s, 118, 925, r0);
  case 118:
  case 31:
    s.lastBrkId = 926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[926]) return breakpoint(s, 119, 926, r0);
  case 119:
    r0 = (s.c___6843 & s.mask___6842);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[927]) return breakpoint(s, 120, 927, r0);
  case 120:
    r0 = (s.n___6860 + 1);
    s.n___6860 = (r0);
    s.lastBrkId = 928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[928]) return breakpoint(s, 121, 928, r0);
  case 121:
    r0 = (s.mask___6842 << 1);
    s.mask___6842 = (r0);
    { step = 31; continue; }
  case 32:
    s.lastBrkId = 929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[929]) return breakpoint(s, 122, 929, r0);
  case 122:
    r0 = pxsim_numops_toBoolDecr(s.n___6860);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[930]) return breakpoint(s, 123, 930, r0);
  case 123:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.xOffset___6713 * s.mult___6648);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.tmp_3 = r0 = s.arg3;
    r0 = (s.j___6841 + s.yOffset___6714);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * s.mult___6648);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.mult___6648;
    r0 = (s.mult___6648 * s.n___6860);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg4;
    s.callLocIdx = 153; s.pc = 124; return s.tmp_0;
  case 124:
    r0 = s.retval;
    s.lastBrkId = 931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[931]) return breakpoint(s, 125, 931, r0);
  case 125:
    r0 = (s.j___6841 + s.n___6860);
    s.j___6841 = (r0);
    { step = 34; continue; }
  case 33:
    s.lastBrkId = 932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[932]) return breakpoint(s, 126, 932, r0);
  case 126:
    r0 = (s.mask___6842 << 1);
    s.mask___6842 = (r0);
    s.lastBrkId = 933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[933]) return breakpoint(s, 127, 933, r0);
  case 127:
    r0 = (s.j___6841 + 1);
    s.j___6841 = (r0);
  case 34:
    { step = 28; continue; }
  case 35:
    s.lastBrkId = 934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[934]) return breakpoint(s, 128, 934, r0);
  case 128:
    r0 = (s.arg2 + s.mult___6648);
    s.arg2 = (r0);
    s.lastBrkId = 935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[935]) return breakpoint(s, 129, 935, r0);
  case 129:
    r0 = (s.i___6836 + 1);
    s.i___6836 = (r0);
    { step = 27; continue; }
  case 36:
  case 37:
    { step = 9; continue; }
  case 38:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrint__P1760.info = {"start":15326,"length":3300,"line":213,"column":4,"endLine":306,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrint","argumentNames":["img","text","x","y","color","font","offsets"]}

function helpers_imagePrint__P1760_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrint__P1760, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x0___6645: undefined,
  cp___6647: undefined,
  mult___6648: undefined,
  dataW___6653: undefined,
  dataH___6659: undefined,
  byteHeight___6665: undefined,
  charSize___6671: undefined,
  dataSize___6675: undefined,
  fontdata___6679: undefined,
  lastchar___6682: undefined,
  imgBuf___6689: undefined,
  xOffset___6713: undefined,
  yOffset___6714: undefined,
  ch___6729: undefined,
  l___6748: undefined,
  r___6749: undefined,
  off___6751: undefined,
  guess___6752: undefined,
  m___6771: undefined,
  v___6780: undefined,
  i___6836: undefined,
  j___6841: undefined,
  mask___6842: undefined,
  c___6843: undefined,
  n___6860: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function image_getFontForText__P1747(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___6977 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[839]) return breakpoint(s, 6, 839, r0);
  case 6:
    s.i___6977 = (0);
    s.lastBrkId = 840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[840]) return breakpoint(s, 7, 840, r0);
  case 7:
  case 1:
    s.lastBrkId = 841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[841]) return breakpoint(s, 8, 841, r0);
  case 8:
    s.tmp_1 = r0 = s.i___6977;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[842]) return breakpoint(s, 9, 842, r0);
  case 9:
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___6977);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > 8192);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[843]) return breakpoint(s, 10, 843, r0);
  case 10:
    r0 = globals.font12___1746;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[844]) return breakpoint(s, 11, 844, r0);
  case 11:
    r0 = (s.i___6977 + 1);
    s.i___6977 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[845]) return breakpoint(s, 12, 845, r0);
  case 12:
    r0 = globals.font8___1745;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_getFontForText__P1747.info = {"start":11713,"length":259,"line":136,"column":4,"endLine":143,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"getFontForText","argumentNames":["text"]}

function image_getFontForText__P1747_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_getFontForText__P1747, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___6977: undefined,
  arg0: undefined,
} }





function helpers_imageFillRect__P1728(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[823]) return breakpoint(s, 1, 823, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P3808_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 124; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P3808_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 125; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._fillRect(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageFillRect__P1728.info = {"start":3650,"length":159,"line":131,"column":4,"endLine":133,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageFillRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageFillRect__P1728_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageFillRect__P1728, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_pack__P3808(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[821]) return breakpoint(s, 1, 821, r0);
  case 1:
    s.tmp_2 = Math_clamp__P122_mk(s);
    s.tmp_2.arg0 = -30000;
    s.tmp_2.arg1 = 30000;
    r0 = (s.arg0 | 0);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 121; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 65535);
    s.tmp_0 = r0;
    s.tmp_5 = Math_clamp__P122_mk(s);
    s.tmp_5.arg0 = -30000;
    s.tmp_5.arg1 = 30000;
    r0 = (s.arg1 | 0);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 122; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 | s.tmp_3);
    return leave(s, r0)
  default: oops()
} } }
helpers_pack__P3808.info = {"start":3152,"length":145,"line":120,"column":4,"endLine":122,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"pack","argumentNames":["x","y"]}

function helpers_pack__P3808_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_pack__P3808, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_clamp__P122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[239]) return breakpoint(s, 1, 239, r0);
  case 1:
    s.tmp_0 = Math_min__P126_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_1 = Math_max__P125_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 19; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 20; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Math_clamp__P122.info = {"start":14654,"length":130,"line":501,"column":4,"endLine":503,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"clamp","argumentNames":["min","max","value"]}

function Math_clamp__P122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_clamp__P122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_min__P126(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[249]) return breakpoint(s, 4, 249, r0);
  case 4:
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[250]) return breakpoint(s, 5, 250, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[251]) return breakpoint(s, 6, 251, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P126.info = {"start":15790,"length":105,"line":538,"column":4,"endLine":541,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P126_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P126, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawIcon__P1727(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[822]) return breakpoint(s, 1, 822, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = helpers_pack__P3808_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg3;
    s.callLocIdx = 123; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods._drawIcon(s.tmp_0, s.tmp_1, s.tmp_2, s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawIcon__P1727.info = {"start":3500,"length":145,"line":128,"column":4,"endLine":130,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawIcon","argumentNames":["img","icon","x","y","c"]}

function helpers_imageDrawIcon__P1727_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawIcon__P1727, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_stringSplit__P117(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___10374 = undefined;
    s.lim___10376 = undefined;
    s.s___10392 = undefined;
    s.p___10395 = undefined;
    s.R___10396 = undefined;
    s.z___10410 = undefined;
    s.T___10423 = undefined;
    s.q___10424 = undefined;
    s.e___10430 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[178]) return breakpoint(s, 22, 178, r0);
  case 22:
    r0 = pxsim_Array__mk();
    s.A___10374 = (r0);
    s.lastBrkId = 179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[179]) return breakpoint(s, 23, 179, r0);
  case 23:
    s.lim___10376 = (0);
    s.lastBrkId = 180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[180]) return breakpoint(s, 24, 180, r0);
  case 24:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[181]) return breakpoint(s, 25, 181, r0);
  case 25:
    r0 = (536870912 - 1);
    s.lim___10376 = (r0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[182]) return breakpoint(s, 26, 182, r0);
  case 26:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[183]) return breakpoint(s, 27, 183, r0);
  case 27:
    s.lim___10376 = (0);
    { step = 3; continue; }
  case 2:
    s.lastBrkId = 184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[184]) return breakpoint(s, 28, 184, r0);
  case 28:
    r0 = (s.arg2 | 0);
    s.lim___10376 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[185]) return breakpoint(s, 29, 185, r0);
  case 29:
    r0 = pxsim_String_.length(s.arg0);
    s.s___10392 = (r0);
    s.lastBrkId = 186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[186]) return breakpoint(s, 30, 186, r0);
  case 30:
    s.p___10395 = (0);
    s.lastBrkId = 187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[187]) return breakpoint(s, 31, 187, r0);
  case 31:
    s.R___10396 = (s.arg1);
    s.lastBrkId = 188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[188]) return breakpoint(s, 32, 188, r0);
  case 32:
    r0 = (s.lim___10376 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[189]) return breakpoint(s, 33, 189, r0);
  case 33:
    r0 = s.A___10374;
    { step = 21; continue; }
  case 5:
  case 6:
    s.lastBrkId = 190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[190]) return breakpoint(s, 34, 190, r0);
  case 34:
    r0 = (s.arg1 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[191]) return breakpoint(s, 35, 191, r0);
  case 35:
    r0 = pxsim_Array_.setAt(s.A___10374, 0, s.arg0);
    s.lastBrkId = 192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[192]) return breakpoint(s, 36, 192, r0);
  case 36:
    r0 = s.A___10374;
    { step = 21; continue; }
  case 7:
  case 8:
    s.lastBrkId = 193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[193]) return breakpoint(s, 37, 193, r0);
  case 37:
    r0 = (s.s___10392 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[194]) return breakpoint(s, 38, 194, r0);
  case 38:
    s.tmp_1 = helpers_splitMatch__P3667_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = s.R___10396;
    s.callLocIdx = 12; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.z___10410 = (r0);
    s.lastBrkId = 195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[195]) return breakpoint(s, 40, 195, r0);
  case 40:
    r0 = (s.z___10410 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[196]) return breakpoint(s, 41, 196, r0);
  case 41:
    r0 = s.A___10374;
    { step = 21; continue; }
  case 9:
  case 10:
    s.lastBrkId = 197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[197]) return breakpoint(s, 42, 197, r0);
  case 42:
    r0 = pxsim_Array_.setAt(s.A___10374, 0, s.arg0);
    s.lastBrkId = 198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[198]) return breakpoint(s, 43, 198, r0);
  case 43:
    r0 = s.A___10374;
    { step = 21; continue; }
  case 11:
  case 12:
    s.lastBrkId = 199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[199]) return breakpoint(s, 44, 199, r0);
  case 44:
    s.q___10424 = (s.p___10395);
    s.lastBrkId = 200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[200]) return breakpoint(s, 45, 200, r0);
  case 45:
  case 13:
    s.lastBrkId = 201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[201]) return breakpoint(s, 46, 201, r0);
  case 46:
    r0 = (s.q___10424 != s.s___10392);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[202]) return breakpoint(s, 47, 202, r0);
  case 47:
    s.tmp_1 = helpers_splitMatch__P3667_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.q___10424;
    s.tmp_1.arg2 = s.R___10396;
    s.callLocIdx = 13; s.pc = 48; return s.tmp_1;
  case 48:
    r0 = s.retval;
    s.e___10430 = (r0);
    s.lastBrkId = 203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[203]) return breakpoint(s, 49, 203, r0);
  case 49:
    r0 = (s.e___10430 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[204]) return breakpoint(s, 50, 204, r0);
  case 50:
    r0 = (s.q___10424 + 1);
    s.q___10424 = (r0);
    { step = 19; continue; }
  case 14:
    s.lastBrkId = 205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[205]) return breakpoint(s, 51, 205, r0);
  case 51:
    r0 = (s.e___10430 == s.p___10395);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[206]) return breakpoint(s, 52, 206, r0);
  case 52:
    r0 = (s.q___10424 + 1);
    s.q___10424 = (r0);
    { step = 18; continue; }
  case 15:
    s.lastBrkId = 207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[207]) return breakpoint(s, 53, 207, r0);
  case 53:
    s.tmp_0 = helpers_stringSlice__P115_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___10395;
    s.tmp_0.arg2 = s.q___10424;
    s.callLocIdx = 14; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.T___10423 = (r0);
    s.lastBrkId = 208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[208]) return breakpoint(s, 55, 208, r0);
  case 55:
    r0 = pxsim_Array__push(s.A___10374, s.T___10423);
    s.lastBrkId = 209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[209]) return breakpoint(s, 56, 209, r0);
  case 56:
    r0 = pxsim_Array__length(s.A___10374);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.lim___10376);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[210]) return breakpoint(s, 57, 210, r0);
  case 57:
    r0 = s.A___10374;
    { step = 21; continue; }
  case 16:
  case 17:
    s.lastBrkId = 211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[211]) return breakpoint(s, 58, 211, r0);
  case 58:
    s.p___10395 = (s.e___10430);
    s.lastBrkId = 212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[212]) return breakpoint(s, 59, 212, r0);
  case 59:
    s.q___10424 = (s.p___10395);
  case 18:
  case 19:
    { step = 13; continue; }
  case 20:
    s.lastBrkId = 213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[213]) return breakpoint(s, 60, 213, r0);
  case 60:
    s.tmp_0 = helpers_stringSlice__P115_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___10395;
    s.tmp_0.arg2 = s.q___10424;
    s.callLocIdx = 15; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.T___10423 = (r0);
    s.lastBrkId = 214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[214]) return breakpoint(s, 62, 214, r0);
  case 62:
    r0 = pxsim_Array__push(s.A___10374, s.T___10423);
    s.lastBrkId = 215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[215]) return breakpoint(s, 63, 215, r0);
  case 63:
    r0 = s.A___10374;
  case 21:
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSplit__P117.info = {"start":11930,"length":1319,"line":407,"column":4,"endLine":451,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSplit","argumentNames":["S","separator","limit"]}

function helpers_stringSplit__P117_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSplit__P117, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  A___10374: undefined,
  lim___10376: undefined,
  s___10392: undefined,
  p___10395: undefined,
  R___10396: undefined,
  z___10410: undefined,
  T___10423: undefined,
  q___10424: undefined,
  e___10430: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_splitMatch__P3667(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___10506 = undefined;
    s.s___10509 = undefined;
    s.i___10519 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[216]) return breakpoint(s, 8, 216, r0);
  case 8:
    r0 = pxsim_String_.length(s.arg2);
    s.r___10506 = (r0);
    s.lastBrkId = 217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[217]) return breakpoint(s, 9, 217, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.s___10509 = (r0);
    s.lastBrkId = 218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[218]) return breakpoint(s, 10, 218, r0);
  case 10:
    r0 = (s.arg1 + s.r___10506);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.s___10509);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[219]) return breakpoint(s, 11, 219, r0);
  case 11:
    r0 = -1;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[220]) return breakpoint(s, 12, 220, r0);
  case 12:
    s.i___10519 = (0);
    s.lastBrkId = 221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[221]) return breakpoint(s, 13, 221, r0);
  case 13:
  case 3:
    s.lastBrkId = 222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[222]) return breakpoint(s, 14, 222, r0);
  case 14:
    r0 = (s.i___10519 < s.r___10506);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[223]) return breakpoint(s, 15, 223, r0);
  case 15:
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.arg1 + s.i___10519);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(s.arg2, s.i___10519);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 != s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[224]) return breakpoint(s, 16, 224, r0);
  case 16:
    r0 = -1;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[225]) return breakpoint(s, 17, 225, r0);
  case 17:
    r0 = (s.i___10519 + 1);
    s.i___10519 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[226]) return breakpoint(s, 18, 226, r0);
  case 18:
    r0 = (s.arg1 + s.r___10506);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
helpers_splitMatch__P3667.info = {"start":13255,"length":289,"line":453,"column":4,"endLine":462,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"splitMatch","argumentNames":["S","q","R"]}

function helpers_splitMatch__P3667_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_splitMatch__P3667, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___10506: undefined,
  s___10509: undefined,
  i___10519: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_stringSlice__P115(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___10475 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[170]) return breakpoint(s, 7, 170, r0);
  case 7:
    r0 = pxsim_String_.length(s.arg0);
    s.len___10475 = (r0);
    s.lastBrkId = 171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[171]) return breakpoint(s, 8, 171, r0);
  case 8:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[172]) return breakpoint(s, 9, 172, r0);
  case 9:
    s.tmp_1 = Math_max__P125_mk(s);
    r0 = (s.len___10475 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 11; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[173]) return breakpoint(s, 11, 173, r0);
  case 11:
    r0 = (s.arg2 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[174]) return breakpoint(s, 12, 174, r0);
  case 12:
    s.arg2 = (s.len___10475);
  case 3:
  case 4:
    s.lastBrkId = 175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[175]) return breakpoint(s, 13, 175, r0);
  case 13:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[176]) return breakpoint(s, 14, 176, r0);
  case 14:
    r0 = (s.len___10475 + s.arg2);
    s.arg2 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[177]) return breakpoint(s, 15, 177, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P115.info = {"start":11047,"length":365,"line":373,"column":4,"endLine":389,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P115_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P115, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___10475: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Scene_render__P2446(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___10603 = undefined;
    s.unnamed2894___U1 = undefined;
    s.unnamed2895___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    s.lastBrkId = 2508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2508]) return breakpoint(s, 12, 2508, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2509]) return breakpoint(s, 13, 2509, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2510]) return breakpoint(s, 14, 2510, r0);
  case 14:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 2511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2511]) return breakpoint(s, 15, 2511, r0);
  case 15:
    s.lastBrkId = 2512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2512]) return breakpoint(s, 16, 2512, r0);
  case 16:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["previousScene"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2513]) return breakpoint(s, 17, 2513, r0);
  case 17:
    s.tmp_3 = scene_Scene_render__P2446_mk(s);
    r0 = s.arg0.fields["previousScene"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1038; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2514]) return breakpoint(s, 19, 2514, r0);
  case 19:
    s.tmp_0 = scene_Background_draw__P2274_mk(s);
    r0 = s.arg0.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1039; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 2515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2515]) return breakpoint(s, 21, 2515, r0);
  case 21:
    s.lastBrkId = 2516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2516]) return breakpoint(s, 22, 2516, r0);
  case 22:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2517]) return breakpoint(s, 23, 2517, r0);
  case 23:
    s.tmp_2 = helpers_arraySort__P103_mk(s);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = inline__P10580;
    s.callLocIdx = 1044; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2519]) return breakpoint(s, 25, 2519, r0);
  case 25:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 7:
  case 8:
    s.lastBrkId = 2520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2520]) return breakpoint(s, 26, 2520, r0);
  case 26:
    s.lastBrkId = 2521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2521]) return breakpoint(s, 27, 2521, r0);
  case 27:
    s.s___10603 = (undefined);
    r0 = s.arg0.fields["allSprites"];
    s.unnamed2894___U1 = (r0);
    s.unnamed2895___U2 = (0);
    s.lastBrkId = 2522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2522]) return breakpoint(s, 28, 2522, r0);
  case 28:
  case 9:
    s.tmp_0 = r0 = s.unnamed2895___U2;
    r0 = pxsim_Array__length(s.unnamed2894___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2894___U1, s.unnamed2895___U2);
    s.s___10603 = (r0);
    s.lastBrkId = 2523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2523]) return breakpoint(s, 29, 2523, r0);
  case 29:
    s.tmp_2 = if___draw_2_mk(s);
    s.tmp_2.arg0 = s.s___10603;
    r0 = s.arg0.fields["camera"];
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__draw"), 2);
      s.callLocIdx = 1045; s.pc = 30; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__draw"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__draw"], 2); s.callLocIdx = 1045; s.pc = 30; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1045; s.pc = 30; return s.tmp_2;; }
     else { s.callLocIdx = 1045; s.pc = 30; return s.tmp_2; }
    }
  case 30:
    r0 = s.retval;
    r0 = (s.unnamed2895___U2 + 1);
    s.unnamed2895___U2 = (r0);
    { step = 9; continue; }
  case 10:
    s.unnamed2894___U1 = (undefined);
    s.lastBrkId = 2524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2524]) return breakpoint(s, 31, 2524, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render__P2446.info = {"start":7844,"length":917,"line":221,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"render","argumentNames":["this"]}

function scene_Scene_render__P2446_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render__P2446, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___10603: undefined,
  unnamed2894___U1: undefined,
  unnamed2895___U2: undefined,
  arg0: undefined,
} }





function inline__P10580(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2518]) return breakpoint(s, 3, 2518, r0);
  case 3:
    s.tmp_2 = if_z_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "z");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["z"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["z"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1040; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_z_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "z");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["z"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["z"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1041; s.pc = 5; return s.tmp_4; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = if_id_1_mk(s);
    s.tmp_6.arg0 = s.arg0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "id");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["id"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["id"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1042; s.pc = 6; return s.tmp_6; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_id_1_mk(s);
    s.tmp_8.arg0 = s.arg1;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "id");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["id"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["id"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1043; s.pc = 7; return s.tmp_8; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 - s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
inline__P10580.info = {"start":8422,"length":52,"line":235,"column":37,"endLine":235,"endColumn":89,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["a","b"]}

function inline__P10580_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10580, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_draw__P2274(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2265_VT)) failedCast(r0);
    s.lastBrkId = 2145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2145]) return breakpoint(s, 5, 2145, r0);
  case 5:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(globals.screen___1802, s.tmp_0);
    s.lastBrkId = 2146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2146]) return breakpoint(s, 6, 2146, r0);
  case 6:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2147]) return breakpoint(s, 7, 2147, r0);
  case 7:
    r0 = s.arg0.fields["_image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___1802, s.tmp_1, 0, 0);
  case 1:
  case 2:
    s.lastBrkId = 2148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2148]) return breakpoint(s, 8, 2148, r0);
  case 8:
    r0 = s.arg0.fields["_layers"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2149]) return breakpoint(s, 9, 2149, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, inline__P10635);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P107_mk(s);
    r0 = s.arg0.fields["_layers"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 894; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw__P2274.info = {"start":1166,"length":545,"line":48,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this"]}

function scene_Background_draw__P2274_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw__P2274, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P10635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___10637 = undefined;
    s.oy___10648 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2150]) return breakpoint(s, 1, 2150, r0);
  case 1:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetX"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.ox___10637 = (r0);
    s.lastBrkId = 2151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2151]) return breakpoint(s, 2, 2151, r0);
  case 2:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetY"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.oy___10648 = (r0);
    s.lastBrkId = 2152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2152]) return breakpoint(s, 3, 2152, r0);
  case 3:
    s.tmp_0 = scene_BackgroundLayer_draw__P2283_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ox___10637;
    s.tmp_0.arg2 = s.oy___10648;
    s.callLocIdx = 893; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P10635.info = {"start":1373,"length":312,"line":53,"column":37,"endLine":58,"endColumn":17,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["layer"]}

function inline__P10635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P10635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ox___10637: undefined,
  oy___10648: undefined,
  arg0: undefined,
} }





function scene_BackgroundLayer_draw__P2283(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___10666 = undefined;
    s.h___10669 = undefined;
    s.pw___10672 = undefined;
    s.ph___10676 = undefined;
    s.rx___10685 = undefined;
    s.ry___10688 = undefined;
    s.y___10757 = undefined;
    s.py___10758 = undefined;
    s.dh___10767 = undefined;
    s.x___10775 = undefined;
    s.rxl___10776 = undefined;
    s.px___10782 = undefined;
    s.dw___10786 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2275_VT)) failedCast(r0);
    s.lastBrkId = 2171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2171]) return breakpoint(s, 24, 2171, r0);
  case 24:
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.w___10666 = (r0);
    s.lastBrkId = 2172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2172]) return breakpoint(s, 25, 2172, r0);
  case 25:
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.h___10669 = (r0);
    s.lastBrkId = 2173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2173]) return breakpoint(s, 26, 2173, r0);
  case 26:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    s.pw___10672 = (r0);
    s.lastBrkId = 2174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2174]) return breakpoint(s, 27, 2174, r0);
  case 27:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    s.ph___10676 = (r0);
    s.lastBrkId = 2175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2175]) return breakpoint(s, 28, 2175, r0);
  case 28:
    r0 = pxsim_numops_toBoolDecr(s.pw___10672);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.ph___10676);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2176]) return breakpoint(s, 29, 2176, r0);
  case 29:
    { step = 23; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2177]) return breakpoint(s, 30, 2177, r0);
  case 30:
    r0 = (0 - s.arg1);
    s.rx___10685 = (r0);
    s.lastBrkId = 2178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2178]) return breakpoint(s, 31, 2178, r0);
  case 31:
    r0 = (0 - s.arg2);
    s.ry___10688 = (r0);
    s.lastBrkId = 2179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2179]) return breakpoint(s, 32, 2179, r0);
  case 32:
    r0 = s.arg0.fields["alignX"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.lastBrkId = 2180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2180]) return breakpoint(s, 33, 2180, r0);
  case 33:
    s.tmp_1 = r0 = s.rx___10685;
    r0 = (s.w___10666 + s.pw___10672);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.rx___10685 = (r0);
    s.lastBrkId = 2181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2181]) return breakpoint(s, 34, 2181, r0);
  case 34:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 2182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2182]) return breakpoint(s, 35, 2182, r0);
  case 35:
    s.tmp_0 = r0 = s.rx___10685;
    r0 = (s.w___10666 + s.pw___10672);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.rx___10685 = (r0);
    s.lastBrkId = 2183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2183]) return breakpoint(s, 36, 2183, r0);
  case 36:
  case 7:
    s.lastBrkId = 2184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2184]) return breakpoint(s, 37, 2184, r0);
  case 37:
    r0 = s.arg0.fields["alignY"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 8:
    s.lastBrkId = 2185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2185]) return breakpoint(s, 38, 2185, r0);
  case 38:
    s.tmp_1 = r0 = s.ry___10688;
    r0 = (s.h___10669 + s.ph___10676);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.ry___10688 = (r0);
    s.lastBrkId = 2186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2186]) return breakpoint(s, 39, 2186, r0);
  case 39:
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 2187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2187]) return breakpoint(s, 40, 2187, r0);
  case 40:
    s.tmp_0 = r0 = s.ry___10688;
    r0 = (s.h___10669 + s.ph___10676);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.ry___10688 = (r0);
    s.lastBrkId = 2188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2188]) return breakpoint(s, 41, 2188, r0);
  case 41:
  case 10:
    s.lastBrkId = 2189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2189]) return breakpoint(s, 42, 2189, r0);
  case 42:
    r0 = (s.rx___10685 % s.w___10666);
    s.rx___10685 = (r0);
    s.lastBrkId = 2190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2190]) return breakpoint(s, 43, 2190, r0);
  case 43:
    r0 = (s.rx___10685 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 2191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2191]) return breakpoint(s, 44, 2191, r0);
  case 44:
    r0 = (s.rx___10685 + s.w___10666);
    s.rx___10685 = (r0);
  case 11:
  case 12:
    s.lastBrkId = 2192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2192]) return breakpoint(s, 45, 2192, r0);
  case 45:
    r0 = (s.ry___10688 % s.h___10669);
    s.ry___10688 = (r0);
    s.lastBrkId = 2193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2193]) return breakpoint(s, 46, 2193, r0);
  case 46:
    r0 = (s.ry___10688 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2194]) return breakpoint(s, 47, 2194, r0);
  case 47:
    r0 = (s.ry___10688 + s.h___10669);
    s.ry___10688 = (r0);
  case 13:
  case 14:
    s.lastBrkId = 2195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2195]) return breakpoint(s, 48, 2195, r0);
  case 48:
    r0 = pxsim.Math_.floor(s.rx___10685);
    s.rx___10685 = (r0);
    s.lastBrkId = 2196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2196]) return breakpoint(s, 49, 2196, r0);
  case 49:
    r0 = pxsim.Math_.floor(s.ry___10688);
    s.ry___10688 = (r0);
    s.lastBrkId = 2197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2197]) return breakpoint(s, 50, 2197, r0);
  case 50:
    s.y___10757 = (0);
    s.lastBrkId = 2198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2198]) return breakpoint(s, 51, 2198, r0);
  case 51:
    s.py___10758 = (0);
    s.lastBrkId = 2199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2199]) return breakpoint(s, 52, 2199, r0);
  case 52:
  case 15:
    s.lastBrkId = 2200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2200]) return breakpoint(s, 53, 2200, r0);
  case 53:
    r0 = (s.y___10757 < s.h___10669);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 2201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2201]) return breakpoint(s, 54, 2201, r0);
  case 54:
    r0 = (s.y___10757 % s.ph___10676);
    s.py___10758 = (r0);
    s.lastBrkId = 2202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2202]) return breakpoint(s, 55, 2202, r0);
  case 55:
    s.tmp_0 = Math_min__P126_mk(s);
    r0 = (s.ph___10676 - s.py___10758);
    s.tmp_0.arg0 = r0;
    r0 = (s.h___10669 - s.ry___10688);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 896; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.dh___10767 = (r0);
    s.lastBrkId = 2203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2203]) return breakpoint(s, 57, 2203, r0);
  case 57:
    s.x___10775 = (0);
    s.lastBrkId = 2204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2204]) return breakpoint(s, 58, 2204, r0);
  case 58:
    s.rxl___10776 = (s.rx___10685);
    s.lastBrkId = 2205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2205]) return breakpoint(s, 59, 2205, r0);
  case 59:
  case 16:
    s.lastBrkId = 2206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2206]) return breakpoint(s, 60, 2206, r0);
  case 60:
    r0 = (s.x___10775 < s.w___10666);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 2207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2207]) return breakpoint(s, 61, 2207, r0);
  case 61:
    r0 = (s.x___10775 % s.pw___10672);
    s.px___10782 = (r0);
    s.lastBrkId = 2208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2208]) return breakpoint(s, 62, 2208, r0);
  case 62:
    s.tmp_0 = Math_min__P126_mk(s);
    r0 = (s.pw___10672 - s.px___10782);
    s.tmp_0.arg0 = r0;
    r0 = (s.w___10666 - s.rxl___10776);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 897; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.dw___10786 = (r0);
    s.lastBrkId = 2209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2209]) return breakpoint(s, 64, 2209, r0);
  case 64:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawImage(globals.screen___1802, s.tmp_0, s.rxl___10776, s.ry___10688);
    s.lastBrkId = 2210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2210]) return breakpoint(s, 65, 2210, r0);
  case 65:
    r0 = (s.rxl___10776 + s.dw___10786);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.w___10666);
    s.rxl___10776 = (r0);
    s.lastBrkId = 2211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2211]) return breakpoint(s, 66, 2211, r0);
  case 66:
    r0 = s.arg0.fields["repeatX"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.dw___10786;
    { step = 18; continue; }
  case 17:
    r0 = s.w___10666;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___10775 + s.tmp_1);
    s.x___10775 = (r0);
    { step = 16; continue; }
  case 19:
    s.lastBrkId = 2212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2212]) return breakpoint(s, 67, 2212, r0);
  case 67:
    r0 = (s.ry___10688 + s.dh___10767);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.h___10669);
    s.ry___10688 = (r0);
    s.lastBrkId = 2213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2213]) return breakpoint(s, 68, 2213, r0);
  case 68:
    r0 = s.arg0.fields["repeatY"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = s.dh___10767;
    { step = 21; continue; }
  case 20:
    r0 = s.h___10669;
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.y___10757 + s.tmp_1);
    s.y___10757 = (r0);
    { step = 15; continue; }
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_draw__P2283.info = {"start":3063,"length":1537,"line":99,"column":8,"endLine":144,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this","offsetX","offsetY"]}

function scene_BackgroundLayer_draw__P2283_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_draw__P2283, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  w___10666: undefined,
  h___10669: undefined,
  pw___10672: undefined,
  ph___10676: undefined,
  rx___10685: undefined,
  ry___10688: undefined,
  y___10757: undefined,
  py___10758: undefined,
  dh___10767: undefined,
  x___10775: undefined,
  rxl___10776: undefined,
  px___10782: undefined,
  dw___10786: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_update__P2376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.elapsed___10867 = undefined;
    s.percentComplete___10881 = undefined;
    s.damp___10888 = undefined;
    s.f___10897 = undefined;
    s.x___10903 = undefined;
    s.y___10910 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2413]) return breakpoint(s, 9, 2413, r0);
  case 9:
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2414]) return breakpoint(s, 10, 2414, r0);
  case 10:
    s.tmp_1 = scene_Camera_offsetX__P2366_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_3 = Sprite_x__P2025_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 999; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1000; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2415]) return breakpoint(s, 13, 2415, r0);
  case 13:
    s.tmp_0 = scene_Camera_offsetY__P2368_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_y__P2027_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1001; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1002; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2416]) return breakpoint(s, 16, 2416, r0);
  case 16:
    s.tmp_0 = scene_Camera_offsetX__P2366_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 1003; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1004; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2417]) return breakpoint(s, 19, 2417, r0);
  case 19:
    s.tmp_0 = scene_Camera_offsetY__P2368_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 1005; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1006; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2418]) return breakpoint(s, 22, 2418, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1007; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 2419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2419]) return breakpoint(s, 24, 2419, r0);
  case 24:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1008; s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
    s.lastBrkId = 2420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2420]) return breakpoint(s, 26, 2420, r0);
  case 26:
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2421]) return breakpoint(s, 27, 2421, r0);
  case 27:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.elapsed___10867 = (r0);
    s.lastBrkId = 2422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2422]) return breakpoint(s, 28, 2422, r0);
  case 28:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_1 = r0;
    r0 = (s.elapsed___10867 >= s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2423]) return breakpoint(s, 29, 2423, r0);
  case 29:
    r0 = (s.arg0).fields["shakeStartTime"] = (undefined);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2424]) return breakpoint(s, 30, 2424, r0);
  case 30:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_0 = r0;
    r0 = (s.elapsed___10867 / s.tmp_0);
    s.percentComplete___10881 = (r0);
    s.lastBrkId = 2425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2425]) return breakpoint(s, 31, 2425, r0);
  case 31:
    s.damp___10888 = (1);
    s.lastBrkId = 2426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2426]) return breakpoint(s, 32, 2426, r0);
  case 32:
    r0 = (s.percentComplete___10881 >= 0.75);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2427]) return breakpoint(s, 33, 2427, r0);
  case 33:
    s.tmp_1 = Math_max__P125_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = (1 - s.percentComplete___10881);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1009; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    s.damp___10888 = (r0);
  case 4:
  case 5:
    s.lastBrkId = 2428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2428]) return breakpoint(s, 35, 2428, r0);
  case 35:
    r0 = s.arg0.fields["shakeAmplitude"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.damp___10888);
    s.f___10897 = (r0);
    s.lastBrkId = 2429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2429]) return breakpoint(s, 36, 2429, r0);
  case 36:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___10897);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.x___10903 = (r0);
    s.lastBrkId = 2430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2430]) return breakpoint(s, 37, 2430, r0);
  case 37:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___10897);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.y___10910 = (r0);
    s.lastBrkId = 2431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2431]) return breakpoint(s, 38, 2431, r0);
  case 38:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.x___10903);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 2432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2432]) return breakpoint(s, 39, 2432, r0);
  case 39:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.y___10910);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_update__P2376.info = {"start":2297,"length":1397,"line":77,"column":8,"endLine":112,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"update","argumentNames":["this"]}

function scene_Camera_update__P2376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_update__P2376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  elapsed___10867: undefined,
  percentComplete___10881: undefined,
  damp___10888: undefined,
  f___10897: undefined,
  x___10903: undefined,
  y___10910: undefined,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___10929 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2405]) return breakpoint(s, 5, 2405, r0);
  case 5:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 996; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___10929 = (r0);
    s.lastBrkId = 2406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2406]) return breakpoint(s, 7, 2406, r0);
  case 7:
    r0 = s.scene___10929.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2327_mk(s);
    r0 = s.scene___10929.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 997; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2407]) return breakpoint(s, 9, 2407, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = tiles_TileMap_offsetY__P2322_mk(s);
    r0 = s.scene___10929.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.callLocIdx = 998; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetY"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 2408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2408]) return breakpoint(s, 11, 2408, r0);
  case 11:
    r0 = (s.arg0).fields["_offsetY"] = (s.arg1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2368.info = {"start":1034,"length":267,"line":37,"column":8,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this","v"]}

function scene_Camera_offsetY__P2368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___10929: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_enabled__P2327(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2268]) return breakpoint(s, 1, 2268, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_enabled__P2327.info = {"start":7107,"length":66,"line":261,"column":8,"endLine":263,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"enabled","argumentNames":["this"]}
tiles_TileMap_enabled__P2327.isGetter = true;

function tiles_TileMap_enabled__P2327_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_enabled__P2327, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_TileMap_offsetY__P2322(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2264]) return breakpoint(s, 1, 2264, r0);
  case 1:
    s.tmp_0 = Math_clamp__P122_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P125_mk(s);
    s.tmp_3 = tiles_TileMap_areaHeight__P2324_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 917; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 918; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 919; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetY__P2322.info = {"start":6560,"length":123,"line":239,"column":8,"endLine":241,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetY","argumentNames":["this","value"]}

function tiles_TileMap_offsetY__P2322_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetY__P2322, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaHeight__P2324(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2266]) return breakpoint(s, 3, 2266, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_height__P2307_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 922; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 923; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaHeight__P2324.info = {"start":6794,"length":93,"line":247,"column":8,"endLine":249,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaHeight","argumentNames":["this"]}

function tiles_TileMap_areaHeight__P2324_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaHeight__P2324, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMap_scale__P2319(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2258]) return breakpoint(s, 1, 2258, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2319.info = {"start":6125,"length":55,"line":220,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMap_scale__P2319.isGetter = true;

function tiles_TileMap_scale__P2319_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2319, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMapData_height__P2307(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2234]) return breakpoint(s, 1, 2234, r0);
  case 1:
    r0 = s.arg0.fields["_height"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_height__P2307.info = {"start":3734,"length":65,"line":139,"column":8,"endLine":141,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"height","argumentNames":["this"]}
tiles_TileMapData_height__P2307.isGetter = true;

function tiles_TileMapData_height__P2307_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_height__P2307, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2404]) return breakpoint(s, 1, 2404, r0);
  case 1:
    r0 = s.arg0.fields["_offsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2367.info = {"start":966,"length":59,"line":34,"column":8,"endLine":36,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this"]}
scene_Camera_offsetY__P2367.isGetter = true;

function scene_Camera_offsetY__P2367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___10985 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2400]) return breakpoint(s, 5, 2400, r0);
  case 5:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 993; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___10985 = (r0);
    s.lastBrkId = 2401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2401]) return breakpoint(s, 7, 2401, r0);
  case 7:
    r0 = s.scene___10985.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2327_mk(s);
    r0 = s.scene___10985.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 994; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2402]) return breakpoint(s, 9, 2402, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = tiles_TileMap_offsetX__P2321_mk(s);
    r0 = s.scene___10985.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.callLocIdx = 995; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetX"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 2403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2403]) return breakpoint(s, 11, 2403, r0);
  case 11:
    r0 = (s.arg0).fields["_offsetX"] = (s.arg1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2366.info = {"start":690,"length":267,"line":26,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this","v"]}

function scene_Camera_offsetX__P2366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___10985: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_offsetX__P2321(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2263]) return breakpoint(s, 1, 2263, r0);
  case 1:
    s.tmp_0 = Math_clamp__P122_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P125_mk(s);
    s.tmp_3 = tiles_TileMap_areaWidth__P2323_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 914; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 915; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 916; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetX__P2321.info = {"start":6429,"length":121,"line":235,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetX","argumentNames":["this","value"]}

function tiles_TileMap_offsetX__P2321_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetX__P2321, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaWidth__P2323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2265]) return breakpoint(s, 3, 2265, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_width__P2306_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 920; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 921; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaWidth__P2323.info = {"start":6693,"length":91,"line":243,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaWidth","argumentNames":["this"]}

function tiles_TileMap_areaWidth__P2323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaWidth__P2323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMapData_width__P2306(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2233]) return breakpoint(s, 1, 2233, r0);
  case 1:
    r0 = s.arg0.fields["_width"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_width__P2306.info = {"start":3661,"length":63,"line":135,"column":8,"endLine":137,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"width","argumentNames":["this"]}
tiles_TileMapData_width__P2306.isGetter = true;

function tiles_TileMapData_width__P2306_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_width__P2306, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2399]) return breakpoint(s, 1, 2399, r0);
  case 1:
    r0 = s.arg0.fields["_offsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2365.info = {"start":622,"length":59,"line":23,"column":8,"endLine":25,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this"]}
scene_Camera_offsetX__P2365.isGetter = true;

function scene_Camera_offsetX__P2365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function PhysicsEngine_move__P2165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2159_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_move__P2165.info = {"start":351,"length":20,"line":18,"column":4,"endLine":18,"endColumn":24,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function PhysicsEngine_move__P2165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_move__P2165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_draw__P2164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2159_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_draw__P2164.info = {"start":279,"length":10,"line":15,"column":4,"endLine":15,"endColumn":14,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function PhysicsEngine_draw__P2164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_draw__P2164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller___update__P1950(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtms___11360 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1158]) return breakpoint(s, 1, 1158, r0);
  case 1:
    r0 = (s.arg0 * 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.dtms___11360 = (r0);
    s.lastBrkId = 1159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1159]) return breakpoint(s, 2, 1159, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, inline__P11367);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dtms___11360);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_2 = controller_players__P1918_mk(s);
    s.callLocIdx = 243; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 245; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update__P1950.info = {"start":17961,"length":137,"line":550,"column":4,"endLine":553,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["dt"]}

function controller___update__P1950_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update__P1950, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dtms___11360: undefined,
  arg0: undefined,
} }





function inline__P11367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___update__P1948_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.callLocIdx = 244; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P11367.info = {"start":18063,"length":27,"line":552,"column":26,"endLine":552,"endColumn":53,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function inline__P11367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P11367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___update__P1948(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 1156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1156]) return breakpoint(s, 1, 1156, r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 1157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1157]) return breakpoint(s, 2, 1157, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, inline__P11380);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    r0 = s.arg0.fields["buttons"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 242; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update__P1948.info = {"start":17439,"length":124,"line":532,"column":8,"endLine":535,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Controller___update__P1948_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update__P1948, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P11380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Button___update__P1915_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 241; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P11380.info = {"start":17526,"length":25,"line":534,"column":33,"endLine":534,"endColumn":58,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["btn"]}

function inline__P11380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P11380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button___update__P1915(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___11396 = undefined;
    s.interval___11405 = undefined;
    s.count___11418 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1043]) return breakpoint(s, 12, 1043, r0);
  case 12:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1044]) return breakpoint(s, 13, 1044, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1045]) return breakpoint(s, 14, 1045, r0);
  case 14:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_pressedElasped"] = (s.tmp_4);
    s.lastBrkId = 1046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1046]) return breakpoint(s, 15, 1046, r0);
  case 15:
    r0 = s.arg0.fields["repeatDelay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = globals.defaultRepeatDelay___3887;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["repeatDelay"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.delay___11396 = (s.tmp_2);
    s.lastBrkId = 1047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1047]) return breakpoint(s, 16, 1047, r0);
  case 16:
    r0 = s.arg0.fields["repeatInterval"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = globals.defaultRepeatInterval___3889;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["repeatInterval"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.interval___11405 = (s.tmp_2);
    s.lastBrkId = 1048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1048]) return breakpoint(s, 17, 1048, r0);
  case 17:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.delay___11396);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1049]) return breakpoint(s, 18, 1049, r0);
  case 18:
    { step = 11; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1050]) return breakpoint(s, 19, 1050, r0);
  case 19:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.delay___11396);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.interval___11405);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / s.interval___11405);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.count___11418 = (r0);
    s.lastBrkId = 1051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1051]) return breakpoint(s, 20, 1051, r0);
  case 20:
    r0 = s.arg0.fields["_repeatCount"];
    s.tmp_1 = r0;
    r0 = (s.count___11418 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1052]) return breakpoint(s, 21, 1052, r0);
  case 21:
    s.tmp_2 = controller_Button_raiseButtonRepeat__P3894_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 191; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 1053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1053]) return breakpoint(s, 23, 1053, r0);
  case 23:
    r0 = (s.arg0).fields["_repeatCount"] = (s.count___11418);
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button___update__P1915.info = {"start":5117,"length":704,"line":164,"column":8,"endLine":181,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Button___update__P1915_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button___update__P1915, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  delay___11396: undefined,
  interval___11405: undefined,
  count___11418: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonRepeat__P3894(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1025]) return breakpoint(s, 3, 1025, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___3885);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1026]) return breakpoint(s, 4, 1026, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2054, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1027]) return breakpoint(s, 5, 1027, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2055, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonRepeat__P3894.info = {"start":2887,"length":211,"line":99,"column":8,"endLine":104,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"raiseButtonRepeat","argumentNames":["this"]}

function controller_Button_raiseButtonRepeat__P3894_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonRepeat__P3894, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_players__P1918(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1066]) return breakpoint(s, 1, 1066, r0);
  case 1:
    s.tmp_0 = controller__player1__P1917_mk(s);
    s.callLocIdx = 194; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1067]) return breakpoint(s, 3, 1067, r0);
  case 3:
    s.tmp_0 = helpers_arrayFilter__P108_mk(s);
    s.tmp_0.arg0 = globals._players___3898;
    s.tmp_0.arg1 = inline__P11240;
    s.callLocIdx = 195; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
controller_players__P1918.info = {"start":7040,"length":144,"line":220,"column":4,"endLine":223,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"players","argumentNames":[]}

function controller_players__P1918_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players__P1918, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P11240(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P11240.info = {"start":7162,"length":14,"line":222,"column":31,"endLine":222,"endColumn":45,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function inline__P11240_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P11240, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller__player1__P1917(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1063]) return breakpoint(s, 5, 1063, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._players___3898);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__getAt(globals._players___3898, 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1064]) return breakpoint(s, 6, 1064, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C1923_VT);
    s.tmp_5 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, globals.left___1879);
    r0 = pxsim_Array__push(s.tmp_6, globals.up___1880);
    r0 = pxsim_Array__push(s.tmp_6, globals.right___1881);
    r0 = pxsim_Array__push(s.tmp_6, globals.down___1882);
    r0 = pxsim_Array__push(s.tmp_6, globals.A___1877);
    r0 = pxsim_Array__push(s.tmp_6, globals.B___1878);
    r0 = pxsim_Array__push(s.tmp_6, globals.menu___1883);
    s.tmp_7 = controller_Controller_constructor__P1927_mk(s);
    s.tmp_7.arg0 = s.tmp_5;
    s.tmp_7.arg1 = 1;
    s.tmp_7.arg2 = s.tmp_6;
    s.callLocIdx = 193; s.pc = 7; return s.tmp_7;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1065]) return breakpoint(s, 8, 1065, r0);
  case 8:
    r0 = pxsim_Array__getAt(globals._players___3898, 0);
    return leave(s, r0)
  default: oops()
} } }
controller__player1__P1917.info = {"start":6776,"length":258,"line":214,"column":4,"endLine":218,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_player1","argumentNames":[]}

function controller__player1__P1917_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__player1__P1917, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
} }





function controller_Controller_constructor__P1927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.leftId___11302 = undefined;
    s.i___11310 = undefined;
    s.i___11328 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1070]) return breakpoint(s, 7, 1070, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_id"] = (s.tmp_1);
    s.lastBrkId = 1071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1071]) return breakpoint(s, 8, 1071, r0);
  case 8:
    r0 = (s.arg0).fields["_connected"] = (false);
    s.lastBrkId = 1072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1072]) return breakpoint(s, 9, 1072, r0);
  case 9:
    r0 = (s.arg0).fields["playerIndex"] = (s.arg1);
    s.lastBrkId = 1073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1073]) return breakpoint(s, 10, 1073, r0);
  case 10:
    r0 = (s.arg0).fields["analog"] = (false);
    s.lastBrkId = 1074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1074]) return breakpoint(s, 11, 1074, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1075]) return breakpoint(s, 12, 1075, r0);
  case 12:
    r0 = (s.arg0).fields["buttons"] = (s.arg2);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 1076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1076]) return breakpoint(s, 13, 1076, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttons"] = (s.tmp_1);
    s.lastBrkId = 1077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1077]) return breakpoint(s, 14, 1077, r0);
  case 14:
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 7);
    s.tmp_0 = r0;
    r0 = (1 + s.tmp_0);
    s.leftId___11302 = (r0);
    s.lastBrkId = 1078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1078]) return breakpoint(s, 15, 1078, r0);
  case 15:
    s.i___11310 = (0);
    s.lastBrkId = 1079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1079]) return breakpoint(s, 16, 1079, r0);
  case 16:
  case 2:
    s.lastBrkId = 1080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1080]) return breakpoint(s, 17, 1080, r0);
  case 17:
    r0 = (s.i___11310 < 7);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1081]) return breakpoint(s, 18, 1081, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1903_VT);
    s.tmp_1 = r0;
    s.tmp_2 = controller_Button_constructor__P1909_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = (s.leftId___11302 + s.i___11310);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = -1;
    s.callLocIdx = 199; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_1);
    s.lastBrkId = 1082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1082]) return breakpoint(s, 20, 1082, r0);
  case 20:
    r0 = (s.i___11310 + 1);
    s.i___11310 = (r0);
    { step = 2; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1083]) return breakpoint(s, 21, 1083, r0);
  case 21:
    s.i___11328 = (0);
    s.lastBrkId = 1084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1084]) return breakpoint(s, 22, 1084, r0);
  case 22:
  case 5:
    s.lastBrkId = 1085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1085]) return breakpoint(s, 23, 1085, r0);
  case 23:
    s.tmp_1 = r0 = s.i___11328;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1086]) return breakpoint(s, 24, 1086, r0);
  case 24:
    r0 = s.arg0.fields["buttons"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___11328);
    s.tmp_4 = r0;
    r0 = (s.tmp_4).fields["_owner"] = (s.arg0);
    s.lastBrkId = 1087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1087]) return breakpoint(s, 25, 1087, r0);
  case 25:
    r0 = (s.i___11328 + 1);
    s.i___11328 = (r0);
    { step = 5; continue; }
  case 6:
    s.lastBrkId = 1088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1088]) return breakpoint(s, 26, 1088, r0);
  case 26:
    s.tmp_0 = controller_addController__P3899_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 200; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_constructor__P1927.info = {"start":7849,"length":696,"line":249,"column":8,"endLine":266,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","playerIndex","buttons"]}

function controller_Controller_constructor__P1927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_constructor__P1927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  leftId___11302: undefined,
  i___11310: undefined,
  i___11328: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_addController__P3899(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1060]) return breakpoint(s, 3, 1060, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._players___3898);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1061]) return breakpoint(s, 4, 1061, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals._players___3898 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 1062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1062]) return breakpoint(s, 5, 1062, r0);
  case 5:
    s.tmp_0 = r0 = globals._players___3898;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_addController__P3899.info = {"start":6613,"length":157,"line":207,"column":4,"endLine":212,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"addController","argumentNames":["ctrl"]}

function controller_addController__P3899_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_addController__P3899, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function helpers_arrayFilter__P108(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___12426 = undefined;
    s.len___12428 = undefined;
    s.i___12431 = undefined;
    s.v___12436 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[116]) return breakpoint(s, 5, 116, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.res___12426 = (r0);
    s.lastBrkId = 117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[117]) return breakpoint(s, 6, 117, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___12428 = (r0);
    s.lastBrkId = 118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[118]) return breakpoint(s, 7, 118, r0);
  case 7:
    s.i___12431 = (0);
    s.lastBrkId = 119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[119]) return breakpoint(s, 8, 119, r0);
  case 8:
  case 1:
    s.lastBrkId = 120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[120]) return breakpoint(s, 9, 120, r0);
  case 9:
    r0 = (s.i___12431 < s.len___12428);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[121]) return breakpoint(s, 10, 121, r0);
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___12431);
    s.v___12436 = (r0);
    s.lastBrkId = 122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[122]) return breakpoint(s, 11, 122, r0);
  case 11:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___12436;
    s.tmp_1.arg1 = s.i___12431;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 7; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[123]) return breakpoint(s, 13, 123, r0);
  case 13:
    r0 = pxsim_Array__push(s.res___12426, s.v___12436);
  case 2:
  case 3:
    s.lastBrkId = 124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[124]) return breakpoint(s, 14, 124, r0);
  case 14:
    r0 = (s.i___12431 + 1);
    s.i___12431 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[125]) return breakpoint(s, 15, 125, r0);
  case 15:
    r0 = s.res___12426;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P108.info = {"start":7695,"length":317,"line":261,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P108_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P108, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___12426: undefined,
  len___12428: undefined,
  i___12431: undefined,
  v___12436: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller__moveSprites__P1922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1068]) return breakpoint(s, 1, 1068, r0);
  case 1:
    s.lastBrkId = 1069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1069]) return breakpoint(s, 2, 1069, r0);
  case 2:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_1 = controller_players__P1918_mk(s);
    s.callLocIdx = 196; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = inline__P11035;
    s.callLocIdx = 198; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites__P1922.info = {"start":7400,"length":182,"line":234,"column":4,"endLine":238,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_moveSprites","argumentNames":[]}

function controller__moveSprites__P1922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites__P1922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function inline__P11035(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___preUpdate__P1947_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 197; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P11035.info = {"start":7548,"length":26,"line":237,"column":26,"endLine":237,"endColumn":52,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function inline__P11035_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P11035, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate__P1947(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.deadSprites___11042 = undefined;
    s.svx___11043 = undefined;
    s.svy___11044 = undefined;
    s.svxInCricle___11079 = undefined;
    s.svyInCircle___11081 = undefined;
    s.sq___11083 = undefined;
    s.scale___11098 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1115]) return breakpoint(s, 18, 1115, r0);
  case 18:
    s.tmp_3 = controller_Controller__controlledSprites__P1928_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 216; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1116]) return breakpoint(s, 20, 1116, r0);
  case 20:
    { step = 17; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mklocRef();
    s.deadSprites___11042 = (r0);
    s.lastBrkId = 1117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1117]) return breakpoint(s, 21, 1117, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.deadSprites___11042, false);
    r0 = pxsim_pxtrt.mklocRef();
    s.svx___11043 = (r0);
    s.lastBrkId = 1118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1118]) return breakpoint(s, 22, 1118, r0);
  case 22:
    r0 = pxsim_pxtrt_stlocRef(s.svx___11043, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.svy___11044 = (r0);
    s.lastBrkId = 1119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1119]) return breakpoint(s, 23, 1119, r0);
  case 23:
    r0 = pxsim_pxtrt_stlocRef(s.svy___11044, 0);
    s.lastBrkId = 1120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1120]) return breakpoint(s, 24, 1120, r0);
  case 24:
    r0 = s.arg0.fields["analog"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1121]) return breakpoint(s, 25, 1121, r0);
  case 25:
    s.tmp_1 = r0 = s.svx___11043;
    s.tmp_5 = controller_Button_pressureLevel__P1913_mk(s);
    s.tmp_6 = controller_Controller_right__P1933_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 217; s.pc = 27; return s.tmp_6;
  case 27:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 218; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_8 = controller_Button_pressureLevel__P1913_mk(s);
    s.tmp_9 = controller_Controller_left__P1932_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 219; s.pc = 29; return s.tmp_9;
  case 29:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 220; s.pc = 28; return s.tmp_8;
  case 28:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_4 - s.tmp_7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 1122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1122]) return breakpoint(s, 30, 1122, r0);
  case 30:
    s.tmp_0 = r0 = s.svy___11044;
    s.tmp_4 = controller_Button_pressureLevel__P1913_mk(s);
    s.tmp_5 = controller_Controller_down__P1935_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 221; s.pc = 32; return s.tmp_5;
  case 32:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 222; s.pc = 31; return s.tmp_4;
  case 31:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_7 = controller_Button_pressureLevel__P1913_mk(s);
    s.tmp_8 = controller_Controller_up__P1934_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 223; s.pc = 34; return s.tmp_8;
  case 34:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 224; s.pc = 33; return s.tmp_7;
  case 33:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 12; continue; }
  case 3:
    s.lastBrkId = 1123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1123]) return breakpoint(s, 35, 1123, r0);
  case 35:
    s.tmp_1 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_2 = controller_Controller_right__P1933_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 225; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = 256;
    { step = 5; continue; }
  case 4:
    r0 = 0;
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_6 = controller_Controller_left__P1932_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 226; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 38; return s.tmp_5;
  case 38:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 6; continue; }
    r0 = 256;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svx___11043;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
    s.lastBrkId = 1124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1124]) return breakpoint(s, 40, 1124, r0);
  case 40:
    s.tmp_1 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_2 = controller_Controller_down__P1935_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 227; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = 256;
    { step = 9; continue; }
  case 8:
    r0 = 0;
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_6 = controller_Controller_up__P1934_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 228; s.pc = 44; return s.tmp_6;
  case 44:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 43; return s.tmp_5;
  case 43:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = 256;
    { step = 11; continue; }
  case 10:
    r0 = 0;
  case 11:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svy___11044;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
  case 12:
    r0 = pxsim_pxtrt.mklocRef();
    s.svxInCricle___11079 = (r0);
    s.lastBrkId = 1125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1125]) return breakpoint(s, 45, 1125, r0);
  case 45:
    s.tmp_0 = r0 = s.svxInCricle___11079;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___11043);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.svyInCircle___11081 = (r0);
    s.lastBrkId = 1126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1126]) return breakpoint(s, 46, 1126, r0);
  case 46:
    s.tmp_0 = r0 = s.svyInCircle___11081;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___11044);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1127]) return breakpoint(s, 47, 1127, r0);
  case 47:
    r0 = pxsim_pxtrt_ldlocRef(s.svx___11043);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___11043);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___11044);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___11044);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.sq___11083 = (r0);
    s.lastBrkId = 1128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1128]) return breakpoint(s, 48, 1128, r0);
  case 48:
    r0 = (s.sq___11083 > 65536);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1129]) return breakpoint(s, 49, 1129, r0);
  case 49:
    r0 = (65536 / s.sq___11083);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_1);
    s.scale___11098 = (r0);
    s.lastBrkId = 1130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1130]) return breakpoint(s, 50, 1130, r0);
  case 50:
    s.tmp_0 = r0 = s.svxInCricle___11079;
    s.tmp_3 = r0 = s.scale___11098;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___11043);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1131]) return breakpoint(s, 51, 1131, r0);
  case 51:
    s.tmp_0 = r0 = s.svyInCircle___11081;
    s.tmp_3 = r0 = s.scale___11098;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___11044);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 13:
  case 14:
    s.lastBrkId = 1132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1132]) return breakpoint(s, 52, 1132, r0);
  case 52:
    r0 = pxsim_pxtcore_mkAction(5, inline__P11116);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.deadSprites___11042);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.svx___11043);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.svy___11044);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.svxInCricle___11079);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.svyInCircle___11081);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_2 = controller_Controller__controlledSprites__P1928_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 229; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 237; s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 1154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1154]) return breakpoint(s, 55, 1154, r0);
  case 55:
    r0 = pxsim_pxtrt_ldlocRef(s.deadSprites___11042);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1155]) return breakpoint(s, 56, 1155, r0);
  case 56:
    s.tmp_1 = controller_Controller__controlledSprites__P1929_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = helpers_arrayFilter__P108_mk(s);
    s.tmp_3 = controller_Controller__controlledSprites__P1928_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 238; s.pc = 59; return s.tmp_3;
  case 59:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = inline__P11173;
    s.callLocIdx = 239; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 240; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate__P1947.info = {"start":14894,"length":2535,"line":466,"column":8,"endLine":530,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__preUpdate","argumentNames":["this"]}

function controller_Controller___preUpdate__P1947_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate__P1947, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  deadSprites___11042: undefined,
  svx___11043: undefined,
  svy___11044: undefined,
  svxInCricle___11079: undefined,
  svyInCircle___11081: undefined,
  sq___11083: undefined,
  scale___11098: undefined,
  arg0: undefined,
} }





function inline__P11116(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___11119 = undefined;
    s.vx___11120 = undefined;
    s.vy___11121 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1133]) return breakpoint(s, 22, 1133, r0);
  case 22:
    s.tmp_0 = if_s_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "s");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["s"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["s"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 230; s.pc = 23; return s.tmp_0; }
    }
  case 23:
    r0 = s.retval;
    s.s___11119 = (r0);
    s.lastBrkId = 1134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1134]) return breakpoint(s, 24, 1134, r0);
  case 24:
    s.tmp_2 = if_vx_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "vx");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["vx"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["vx"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 231; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.vx___11120 = (r0);
    s.lastBrkId = 1135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1135]) return breakpoint(s, 26, 1135, r0);
  case 26:
    s.tmp_3 = if_vy_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "vy");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["vy"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["vy"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 232; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.vy___11121 = (r0);
    s.lastBrkId = 1136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1136]) return breakpoint(s, 28, 1136, r0);
  case 28:
    r0 = s.s___11119.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1137]) return breakpoint(s, 29, 1137, r0);
  case 29:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], true);
    s.lastBrkId = 1138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1138]) return breakpoint(s, 30, 1138, r0);
  case 30:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1139]) return breakpoint(s, 31, 1139, r0);
  case 31:
    r0 = s.arg0.fields["_inputLastFrame"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1140]) return breakpoint(s, 32, 1140, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.vx___11120);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1141]) return breakpoint(s, 33, 1141, r0);
  case 33:
    r0 = (s.s___11119).fields["_vx"] = (0);
  case 3:
  case 4:
    s.lastBrkId = 1142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1142]) return breakpoint(s, 34, 1142, r0);
  case 34:
    r0 = pxsim_numops_toBoolDecr(s.vy___11121);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1143]) return breakpoint(s, 35, 1143, r0);
  case 35:
    r0 = (s.s___11119).fields["_vy"] = (0);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1144]) return breakpoint(s, 36, 1144, r0);
  case 36:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 1145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1145]) return breakpoint(s, 37, 1145, r0);
  case 37:
    s.tmp_2 = r0 = s.vx___11120;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_2;
    { step = 12; continue; }
  case 11:
    r0 = s.vy___11121;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1146]) return breakpoint(s, 38, 1146, r0);
  case 38:
    s.tmp_4 = r0 = s.s___11119;
    s.tmp_6 = Fx_imul__P156_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.vx___11120;
    s.callLocIdx = 233; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["_vx"] = (s.tmp_5);
    s.lastBrkId = 1147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1147]) return breakpoint(s, 40, 1147, r0);
  case 40:
    s.tmp_0 = r0 = s.s___11119;
    s.tmp_2 = Fx_imul__P156_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___11121;
    s.callLocIdx = 234; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    { step = 18; continue; }
  case 13:
    s.lastBrkId = 1148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1148]) return breakpoint(s, 42, 1148, r0);
  case 42:
    r0 = pxsim_numops_toBoolDecr(s.vx___11120);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1149]) return breakpoint(s, 43, 1149, r0);
  case 43:
    s.tmp_0 = r0 = s.s___11119;
    s.tmp_2 = Fx_imul__P156_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vx___11120;
    s.callLocIdx = 235; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    { step = 17; continue; }
  case 14:
    s.lastBrkId = 1150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1150]) return breakpoint(s, 45, 1150, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.vy___11121);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1151]) return breakpoint(s, 46, 1151, r0);
  case 46:
    s.tmp_0 = r0 = s.s___11119;
    s.tmp_2 = Fx_imul__P156_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___11121;
    s.callLocIdx = 236; s.pc = 47; return s.tmp_2;
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
  case 15:
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 1152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1152]) return breakpoint(s, 48, 1152, r0);
  case 48:
    r0 = (s.arg0).fields["_inputLastFrame"] = (true);
    { step = 20; continue; }
  case 19:
    s.lastBrkId = 1153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1153]) return breakpoint(s, 49, 1153, r0);
  case 49:
    r0 = (s.arg0).fields["_inputLastFrame"] = (false);
  case 20:
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P11116.info = {"start":16077,"length":1171,"line":497,"column":44,"endLine":525,"endColumn":13,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["controlledSprite"]}

function inline__P11116_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P11116, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  s___11119: undefined,
  vx___11120: undefined,
  vy___11121: undefined,
  arg0: undefined,
} }





function inline__P11173(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["s"];
    r0 = r0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P11173.info = {"start":17375,"length":42,"line":529,"column":28,"endLine":529,"endColumn":70,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["s"]}

function inline__P11173_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P11173, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller_Controller_down__P1935(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1095]) return breakpoint(s, 1, 1095, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P3900_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 4;
    s.callLocIdx = 206; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_down__P1935.info = {"start":9528,"length":77,"line":312,"column":8,"endLine":314,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"down","argumentNames":["this"]}
controller_Controller_down__P1935.isGetter = true;

function controller_Controller_down__P1935_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_down__P1935, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_button__P3900(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1110]) return breakpoint(s, 1, 1110, r0);
  case 1:
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (s.arg1 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_button__P3900.info = {"start":11484,"length":105,"line":373,"column":8,"endLine":375,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"button","argumentNames":["this","button"]}

function controller_Controller_button__P3900_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_button__P3900, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_up__P1934(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1094]) return breakpoint(s, 1, 1094, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P3900_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 205; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_up__P1934.info = {"start":9376,"length":73,"line":304,"column":8,"endLine":306,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"up","argumentNames":["this"]}
controller_Controller_up__P1934.isGetter = true;

function controller_Controller_up__P1934_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_up__P1934, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_right__P1933(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1093]) return breakpoint(s, 1, 1093, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P3900_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.callLocIdx = 204; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_right__P1933.info = {"start":9220,"length":79,"line":296,"column":8,"endLine":298,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"right","argumentNames":["this"]}
controller_Controller_right__P1933.isGetter = true;

function controller_Controller_right__P1933_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_right__P1933, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_left__P1932(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1092]) return breakpoint(s, 1, 1092, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P3900_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 203; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_left__P1932.info = {"start":9063,"length":77,"line":288,"column":8,"endLine":290,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"left","argumentNames":["this"]}
controller_Controller_left__P1932.isGetter = true;

function controller_Controller_left__P1932_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_left__P1932, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller__controlledSprites__P1929(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1090]) return breakpoint(s, 1, 1090, r0);
  case 1:
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 202; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_2, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P1929.info = {"start":8697,"length":134,"line":272,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this","cps"]}

function controller_Controller__controlledSprites__P1929_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P1929, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller__controlledSprites__P1928(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1089]) return breakpoint(s, 1, 1089, r0);
  case 1:
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 201; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P1928.info = {"start":8555,"length":132,"line":268,"column":8,"endLine":270,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this"]}
controller_Controller__controlledSprites__P1928.isGetter = true;

function controller_Controller__controlledSprites__P1928_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P1928, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller_Button_pressureLevel__P1913(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1030]) return breakpoint(s, 6, 1030, r0);
  case 6:
    r0 = pxsim.control.deviceDalVersion();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "sim");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1031]) return breakpoint(s, 7, 1031, r0);
  case 7:
    s.tmp_3 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 512;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1032]) return breakpoint(s, 9, 1032, r0);
  case 9:
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtcore.pressureLevelByButtonId(s.tmp_5, -1);
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_pressureLevel__P1913.info = {"start":4279,"length":311,"line":139,"column":8,"endLine":146,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"pressureLevel","argumentNames":["this"]}

function controller_Button_pressureLevel__P1913_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_pressureLevel__P1913, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function controller_Button_isPressed__P1912(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1029]) return breakpoint(s, 1, 1029, r0);
  case 1:
    r0 = s.arg0.fields["_pressed"];
    return leave(s, r0)
  default: oops()
} } }
controller_Button_isPressed__P1912.info = {"start":4129,"length":57,"line":132,"column":8,"endLine":134,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_Button_isPressed__P1912_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_isPressed__P1912, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_imul__P156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[259]) return breakpoint(s, 1, 259, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_imul__P156.info = {"start":1010,"length":130,"line":32,"column":4,"endLine":34,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"imul","argumentNames":["a","b"]}

function Fx_imul__P156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_imul__P156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function power_checkDeepSleep__P1706(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___10240 = undefined;
    s.to___10243 = undefined;
    s.lastBrkId = 810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[810]) return breakpoint(s, 11, 810, r0);
  case 11:
    s.tmp_0 = power_init__P3799_mk(s);
    s.callLocIdx = 120; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[811]) return breakpoint(s, 13, 811, r0);
  case 13:
    s.tmp_0 = r0 = globals._poked___3797;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.p___10240 = (s.tmp_1);
    s.lastBrkId = 812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[812]) return breakpoint(s, 14, 812, r0);
  case 14:
    s.tmp_0 = r0 = globals._timeout___3798;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.to___10243 = (s.tmp_1);
    s.lastBrkId = 813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[813]) return breakpoint(s, 15, 813, r0);
  case 15:
    r0 = (s.to___10243 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.p___10240);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.to___10243);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.isUSBInitialized();
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[814]) return breakpoint(s, 16, 814, r0);
  case 16:
    r0 = pxsim_pxtcore.deepSleep();
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_checkDeepSleep__P1706.info = {"start":1087,"length":298,"line":36,"column":4,"endLine":46,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"checkDeepSleep","argumentNames":[]}

function power_checkDeepSleep__P1706_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_checkDeepSleep__P1706, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  p___10240: undefined,
  to___10243: undefined,
} }





function power_init__P3799(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[815]) return breakpoint(s, 8, 815, r0);
  case 8:
    r0 = (globals._timeout___3798 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[816]) return breakpoint(s, 9, 816, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[817]) return breakpoint(s, 10, 817, r0);
  case 10:
    r0 = pxsim_pxtcore.getConfig(212, -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 1000);
    globals._timeout___3798 = (r0);
    s.lastBrkId = 818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[818]) return breakpoint(s, 11, 818, r0);
  case 11:
    r0 = (globals._timeout___3798 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (globals._timeout___3798 < 300000);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[819]) return breakpoint(s, 12, 819, r0);
  case 12:
    globals._timeout___3798 = (300000);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_init__P3799.info = {"start":1610,"length":376,"line":57,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"init","argumentNames":[]}

function power_init__P3799_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_init__P3799, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function power_poke__P1705(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[808]) return breakpoint(s, 1, 808, r0);
  case 1:
    s.tmp_0 = power_init__P3799_mk(s);
    s.callLocIdx = 119; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[809]) return breakpoint(s, 3, 809, r0);
  case 3:
    r0 = pxsim.control.millis();
    globals._poked___3797 = (r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_poke__P1705.info = {"start":795,"length":81,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"poke","argumentNames":[]}

function power_poke__P1705_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_poke__P1705, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_EventContext_deltaTime__P389(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[451]) return breakpoint(s, 1, 451, r0);
  case 1:
    r0 = s.arg0.fields["deltaTimeMillis"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    return leaveAccessor(s, r0)
  default: oops()
} } }
control_EventContext_deltaTime__P389.info = {"start":2097,"length":75,"line":70,"column":8,"endLine":72,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"deltaTime","argumentNames":["this"]}
control_EventContext_deltaTime__P389.isGetter = true;

function control_EventContext_deltaTime__P389_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_deltaTime__P389, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Scene_constructor__P2440(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    r0 = (s.arg0).fields["previousScene"] = (s.arg2);
    s.lastBrkId = 2439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2439]) return breakpoint(s, 1, 2439, r0);
  case 1:
    r0 = (s.arg0).fields["eventContext"] = (s.arg1);
    s.lastBrkId = 2440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2440]) return breakpoint(s, 2, 2440, r0);
  case 2:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 2441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2441]) return breakpoint(s, 3, 2441, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(ArcadePhysicsEngine__C2173_VT);
    s.tmp_0 = r0;
    s.tmp_1 = ArcadePhysicsEngine_constructor__P2174_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 500;
    s.tmp_1.arg2 = 2;
    s.tmp_1.arg3 = 4;
    s.callLocIdx = 1014; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["physicsEngine"] = (s.tmp_0);
    s.lastBrkId = 2442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2442]) return breakpoint(s, 5, 2442, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Camera__C2360_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Camera_constructor__P2364_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1015; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["camera"] = (s.tmp_0);
    s.lastBrkId = 2443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2443]) return breakpoint(s, 7, 2443, r0);
  case 7:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Background__C2265_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Background_constructor__P2269_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1016; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["background"] = (s.tmp_0);
    s.lastBrkId = 2444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2444]) return breakpoint(s, 9, 2444, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["destroyedHandlers"] = (s.tmp_1);
    s.lastBrkId = 2445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2445]) return breakpoint(s, 10, 2445, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["createdHandlers"] = (s.tmp_1);
    s.lastBrkId = 2446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2446]) return breakpoint(s, 11, 2446, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 2447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2447]) return breakpoint(s, 12, 2447, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapMap"] = (s.tmp_1);
    s.lastBrkId = 2448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2448]) return breakpoint(s, 13, 2448, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["tileOverlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 2449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2449]) return breakpoint(s, 14, 2449, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["collisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 2450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2450]) return breakpoint(s, 15, 2450, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["wallCollisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 2451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2451]) return breakpoint(s, 16, 2451, r0);
  case 16:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["gameForeverHandlers"] = (s.tmp_1);
    s.lastBrkId = 2452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2452]) return breakpoint(s, 17, 2452, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spritesByKind"] = (s.tmp_1);
    s.lastBrkId = 2453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2453]) return breakpoint(s, 18, 2453, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controlledSprites"] = (s.tmp_1);
    s.lastBrkId = 2454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2454]) return breakpoint(s, 19, 2454, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_data"] = (s.tmp_1);
    s.lastBrkId = 2455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2455]) return breakpoint(s, 20, 2455, r0);
  case 20:
    r0 = (s.arg0).fields["_millis"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_constructor__P2440.info = {"start":3365,"length":793,"line":102,"column":8,"endLine":120,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["this","eventContext","previousScene"]}

function scene_Scene_constructor__P2440_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_constructor__P2440, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_constructor__P2364(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2395]) return breakpoint(s, 1, 2395, r0);
  case 1:
    r0 = (s.arg0).fields["_offsetX"] = (0);
    s.lastBrkId = 2396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2396]) return breakpoint(s, 2, 2396, r0);
  case 2:
    r0 = (s.arg0).fields["_offsetY"] = (0);
    s.lastBrkId = 2397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2397]) return breakpoint(s, 3, 2397, r0);
  case 3:
    r0 = (s.arg0).fields["drawOffsetX"] = (0);
    s.lastBrkId = 2398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2398]) return breakpoint(s, 4, 2398, r0);
  case 4:
    r0 = (s.arg0).fields["drawOffsetY"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_constructor__P2364.info = {"start":456,"length":156,"line":15,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"inline","argumentNames":["this"]}

function scene_Camera_constructor__P2364_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_constructor__P2364, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Background_constructor__P2269(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2265_VT)) failedCast(r0);
    s.lastBrkId = 2137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2137]) return breakpoint(s, 1, 2137, r0);
  case 1:
    r0 = (s.arg0).fields["color"] = (0);
    s.lastBrkId = 2138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2138]) return breakpoint(s, 2, 2138, r0);
  case 2:
    r0 = (s.arg0).fields["camera"] = (s.arg1);
    s.lastBrkId = 2139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2139]) return breakpoint(s, 3, 2139, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_layers"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_constructor__P2269.info = {"start":367,"length":132,"line":20,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","camera"]}

function scene_Background_constructor__P2269_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_constructor__P2269, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_constructor__P2174(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1584]) return breakpoint(s, 1, 1584, r0);
  case 1:
    s.tmp_0 = PhysicsEngine_constructor__P2160_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 553; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1585]) return breakpoint(s, 3, 1585, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprites"] = (s.tmp_1);
    s.lastBrkId = 1586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1586]) return breakpoint(s, 4, 1586, r0);
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteMap__C2094_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_SpriteMap_constructor__P2095_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 554; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = (s.arg0).fields["map"] = (s.tmp_0);
    s.lastBrkId = 1587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1587]) return breakpoint(s, 6, 1587, r0);
  case 6:
    s.tmp_0 = ArcadePhysicsEngine_maxSpeed__P2176_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 555; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1588]) return breakpoint(s, 8, 1588, r0);
  case 8:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2180_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 556; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1589]) return breakpoint(s, 10, 1589, r0);
  case 10:
    s.tmp_0 = ArcadePhysicsEngine_minStep__P2178_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 557; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constructor__P2174.info = {"start":1330,"length":277,"line":55,"column":4,"endLine":62,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","maxVelocity","minSingleStep","maxSingleStep"]}

function ArcadePhysicsEngine_constructor__P2174_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constructor__P2174, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2180(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1596]) return breakpoint(s, 1, 1596, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 564; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2180.info = {"start":2058,"length":67,"line":85,"column":4,"endLine":87,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxStep__P2180_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2180, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2179(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1595]) return breakpoint(s, 1, 1595, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 563; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2179.info = {"start":1978,"length":74,"line":81,"column":4,"endLine":83,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this"]}
ArcadePhysicsEngine_maxStep__P2179.isGetter = true;

function ArcadePhysicsEngine_maxStep__P2179_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2179, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_toInt__P165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[273]) return breakpoint(s, 1, 273, r0);
  case 1:
    r0 = (s.arg0 + 128);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_toInt__P165.info = {"start":2144,"length":86,"line":68,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toInt","argumentNames":["v"]}

function Fx_toInt__P165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toInt__P165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_minStep__P2178(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1594]) return breakpoint(s, 1, 1594, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 562; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2178.info = {"start":1905,"length":67,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_minStep__P2178_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2178, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_minStep__P2177(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1593]) return breakpoint(s, 1, 1593, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 561; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2177.info = {"start":1825,"length":74,"line":73,"column":4,"endLine":75,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this"]}
ArcadePhysicsEngine_minStep__P2177.isGetter = true;

function ArcadePhysicsEngine_minStep__P2177_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2177, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2176(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1591]) return breakpoint(s, 1, 1591, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 559; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxVelocity"] = (s.tmp_1);
    s.lastBrkId = 1592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1592]) return breakpoint(s, 3, 1592, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 560; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxNegativeVelocity"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2176.info = {"start":1692,"length":127,"line":68,"column":4,"endLine":71,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxSpeed__P2176_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2176, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_neg__P150(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[253]) return breakpoint(s, 1, 253, r0);
  case 1:
    r0 = (0 - s.arg0);
    return leave(s, r0)
  default: oops()
} } }
Fx_neg__P150.info = {"start":311,"length":88,"line":14,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"neg","argumentNames":["a"]}

function Fx_neg__P150_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_neg__P150, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1590]) return breakpoint(s, 1, 1590, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 558; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2175.info = {"start":1613,"length":73,"line":64,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this"]}
ArcadePhysicsEngine_maxSpeed__P2175.isGetter = true;

function ArcadePhysicsEngine_maxSpeed__P2175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_constructor__P2160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2159_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_constructor__P2160.info = {"start":26,"length":21,"line":1,"column":4,"endLine":2,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this"]}

function PhysicsEngine_constructor__P2160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_constructor__P2160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_constructor__P2095(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1468]) return breakpoint(s, 1, 1468, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_constructor__P2095.info = {"start":237,"length":56,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteMap_constructor__P2095_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_constructor__P2095, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_Melody_constructor__P1601(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[577]) return breakpoint(s, 1, 577, r0);
  case 1:
    r0 = (s.arg0).fields["_text"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_constructor__P1601.info = {"start":6328,"length":67,"line":199,"column":8,"endLine":201,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["this","text"]}

function music_Melody_constructor__P1601_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_constructor__P1601, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function control_pushEventContext__P398(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___11459 = undefined;
    s.n___11465 = undefined;
    s.lastBrkId = 524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[524]) return breakpoint(s, 5, 524, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___3740);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[525]) return breakpoint(s, 6, 525, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals.eventContexts___3740 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[526]) return breakpoint(s, 7, 526, r0);
  case 7:
    s.tmp_0 = control_eventContext__P397_mk(s);
    s.callLocIdx = 65; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.ctx___11459 = (r0);
    s.lastBrkId = 527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[527]) return breakpoint(s, 9, 527, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.ctx___11459);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[528]) return breakpoint(s, 10, 528, r0);
  case 10:
    s.tmp_0 = control_EventContext_unregister__P391_mk(s);
    s.tmp_0.arg0 = s.ctx___11459;
    s.callLocIdx = 66; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[529]) return breakpoint(s, 12, 529, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventContext__C384_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventContext_constructor__P388_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 67; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.n___11465 = (s.tmp_0);
    s.lastBrkId = 530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[530]) return breakpoint(s, 14, 530, r0);
  case 14:
    r0 = pxsim_Array__push(globals.eventContexts___3740, s.n___11465);
    s.lastBrkId = 531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[531]) return breakpoint(s, 15, 531, r0);
  case 15:
    r0 = s.n___11465;
    return leave(s, r0)
  default: oops()
} } }
control_pushEventContext__P398.info = {"start":7123,"length":340,"line":216,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"pushEventContext","argumentNames":[]}

function control_pushEventContext__P398_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pushEventContext__P398, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___11459: undefined,
  n___11465: undefined,
} }





function control_eventContext__P397(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[523]) return breakpoint(s, 3, 523, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___3740);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___3740;
    r0 = pxsim_Array__length(globals.eventContexts___3740);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P397.info = {"start":6907,"length":136,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P397_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P397, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_EventContext_unregister__P391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___8820 = undefined;
    s.unnamed2868___U1 = undefined;
    s.unnamed2869___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[495]) return breakpoint(s, 3, 495, r0);
  case 3:
    s.h___8820 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed2868___U1 = (r0);
    s.unnamed2869___U2 = (0);
    s.lastBrkId = 496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[496]) return breakpoint(s, 4, 496, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed2869___U2;
    r0 = pxsim_Array__length(s.unnamed2868___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2868___U1, s.unnamed2869___U2);
    s.h___8820 = (r0);
    s.lastBrkId = 497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[497]) return breakpoint(s, 5, 497, r0);
  case 5:
    s.tmp_2 = control_EventHandler_unregister__P3734_mk(s);
    s.tmp_2.arg0 = s.h___8820;
    s.callLocIdx = 61; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = (s.unnamed2869___U2 + 1);
    s.unnamed2869___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed2868___U1 = (undefined);
    s.lastBrkId = 498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[498]) return breakpoint(s, 7, 498, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["frameWorker"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameWorker"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_unregister__P391.info = {"start":4534,"length":131,"line":137,"column":8,"endLine":141,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventContext_unregister__P391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_unregister__P391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___8820: undefined,
  unnamed2868___U1: undefined,
  unnamed2869___U2: undefined,
  arg0: undefined,
} }





function control_EventHandler_unregister__P3734(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C3732_VT)) failedCast(r0);
    s.lastBrkId = 442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[442]) return breakpoint(s, 1, 442, r0);
  case 1:
    r0 = s.arg0.fields["src"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_0, s.tmp_1, control_doNothing__P3736, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_unregister__P3734.info = {"start":1136,"length":106,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventHandler_unregister__P3734_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_unregister__P3734, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function control_doNothing__P3736(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_doNothing__P3736.info = {"start":1254,"length":24,"line":41,"column":4,"endLine":41,"endColumn":28,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"doNothing","argumentNames":[]}

function control_doNothing__P3736_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_doNothing__P3736, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function control_EventContext_constructor__P388(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[443]) return breakpoint(s, 3, 443, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    s.lastBrkId = 444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[444]) return breakpoint(s, 4, 444, r0);
  case 4:
    r0 = (s.arg0).fields["framesInSample"] = (0);
    s.lastBrkId = 445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[445]) return breakpoint(s, 5, 445, r0);
  case 5:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[446]) return breakpoint(s, 6, 446, r0);
  case 6:
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[447]) return breakpoint(s, 7, 447, r0);
  case 7:
    r0 = (s.arg0).fields["frameWorker"] = (0);
    s.lastBrkId = 448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[448]) return breakpoint(s, 8, 448, r0);
  case 8:
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    s.lastBrkId = 449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[449]) return breakpoint(s, 9, 449, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(globals.control_EventContext_lastStats___386);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[450]) return breakpoint(s, 10, 450, r0);
  case 10:
    r0 = pxsim_String_.mkEmpty();
    globals.control_EventContext_lastStats___386 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P388.info = {"start":1740,"length":347,"line":58,"column":8,"endLine":68,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P388_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P388, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function control_EventContext_registerFrameHandler__P392(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.fn___9920 = undefined;
    s.i___9929 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[499]) return breakpoint(s, 8, 499, r0);
  case 8:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[500]) return breakpoint(s, 9, 500, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["frameCallbacks"] = (s.tmp_4);
    s.lastBrkId = 501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[501]) return breakpoint(s, 10, 501, r0);
  case 10:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P3738_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 62; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[502]) return breakpoint(s, 12, 502, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_FrameCallback__C381_VT);
    s.fn___9920 = (r0);
    s.lastBrkId = 503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[503]) return breakpoint(s, 13, 503, r0);
  case 13:
    r0 = (s.fn___9920).fields["order"] = (s.arg1);
    s.lastBrkId = 504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[504]) return breakpoint(s, 14, 504, r0);
  case 14:
    r0 = (s.fn___9920).fields["handler"] = (s.arg2);
    s.lastBrkId = 505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[505]) return breakpoint(s, 15, 505, r0);
  case 15:
    s.i___9929 = (0);
    s.lastBrkId = 506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[506]) return breakpoint(s, 16, 506, r0);
  case 16:
  case 3:
    s.lastBrkId = 507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[507]) return breakpoint(s, 17, 507, r0);
  case 17:
    s.tmp_1 = r0 = s.i___9929;
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[508]) return breakpoint(s, 18, 508, r0);
  case 18:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___9929);
    r0 = r0.fields["order"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.arg1);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[509]) return breakpoint(s, 19, 509, r0);
  case 19:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_7 = r0;
    r0 = pxsim_Array_.insertAt(s.tmp_7, s.i___9929, s.fn___9920);
    s.lastBrkId = 510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[510]) return breakpoint(s, 20, 510, r0);
  case 20:
    r0 = s.fn___9920;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[511]) return breakpoint(s, 21, 511, r0);
  case 21:
    r0 = (s.i___9929 + 1);
    s.i___9929 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[512]) return breakpoint(s, 22, 512, r0);
  case 22:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.fn___9920);
    s.lastBrkId = 513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[513]) return breakpoint(s, 23, 513, r0);
  case 23:
    r0 = s.fn___9920;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameHandler__P392.info = {"start":4675,"length":643,"line":143,"column":8,"endLine":160,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameHandler","argumentNames":["this","order","handler"]}

function control_EventContext_registerFrameHandler__P392_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameHandler__P392, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  fn___9920: undefined,
  i___9929: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_EventContext_registerFrameCallbacks__P3738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.worker___8432 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[475]) return breakpoint(s, 4, 475, r0);
  case 4:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[476]) return breakpoint(s, 5, 476, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[477]) return breakpoint(s, 6, 477, r0);
  case 6:
    r0 = s.arg0.fields["frameWorker"];
    s.worker___8432 = (r0);
    s.lastBrkId = 478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[478]) return breakpoint(s, 7, 478, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(2, inline__P8438);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.worker___8432);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks__P3738.info = {"start":3481,"length":895,"line":105,"column":8,"endLine":129,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameCallbacks","argumentNames":["this"]}

function control_EventContext_registerFrameCallbacks__P3738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks__P3738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  worker___8432: undefined,
  arg0: undefined,
} }





function inline__P8438(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___8468 = undefined;
    s.lastBrkId = 479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[479]) return breakpoint(s, 5, 479, r0);
  case 5:
    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[480]) return breakpoint(s, 6, 480, r0);
  case 6:
    r0 = pxsim_pxtcore_mkAction(1, inline__P8444);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.caps[0]);
    s.tmp_2 = pauseUntil__P356_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 56; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[481]) return breakpoint(s, 8, 481, r0);
  case 8:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (true);
    s.lastBrkId = 482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[482]) return breakpoint(s, 9, 482, r0);
  case 9:
    r0 = (s.caps[0]).fields["framesInSample"] = (0);
    s.lastBrkId = 483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[483]) return breakpoint(s, 10, 483, r0);
  case 10:
    r0 = (s.caps[0]).fields["timeInSample"] = (0);
    s.lastBrkId = 484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[484]) return breakpoint(s, 11, 484, r0);
  case 11:
    r0 = (s.caps[0]).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[485]) return breakpoint(s, 12, 485, r0);
  case 12:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim.control.millis();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["prevTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[486]) return breakpoint(s, 13, 486, r0);
  case 13:
  case 3:
    s.lastBrkId = 487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[487]) return breakpoint(s, 14, 487, r0);
  case 14:
    r0 = s.caps[0].fields["frameWorker"];
    s.tmp_1 = r0;
    r0 = (s.caps[1] == s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[488]) return breakpoint(s, 15, 488, r0);
  case 15:
    s.tmp_2 = control_EventContext_runCallbacks__P3737_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 57; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.delay___8468 = (r0);
    s.lastBrkId = 489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[489]) return breakpoint(s, 17, 489, r0);
  case 17:
    s.tmp_0 = pause__P402_mk(s);
    s.tmp_0.arg0 = s.delay___8468;
    s.callLocIdx = 58; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 3; continue; }
  case 4:
    s.lastBrkId = 490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[490]) return breakpoint(s, 19, 490, r0);
  case 19:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P8438.info = {"start":3642,"length":723,"line":109,"column":34,"endLine":128,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function inline__P8438_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8438, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  delay___8468: undefined,
} }





function inline__P8444(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P8444.info = {"start":3873,"length":28,"line":113,"column":31,"endLine":113,"endColumn":59,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function inline__P8444_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8444, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventContext_runCallbacks__P3737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.loopStart___8477 = undefined;
    s.f___8490 = undefined;
    s.unnamed2864___U2 = undefined;
    s.unnamed2865___U3 = undefined;
    s.runtime___8495 = undefined;
    s.fps___8515 = undefined;
    s.delay___8577 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[452]) return breakpoint(s, 13, 452, r0);
  case 13:
    s.lastBrkId = 453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[453]) return breakpoint(s, 14, 453, r0);
  case 14:
    r0 = pxsim.control.millis();
    s.loopStart___8477 = (r0);
    s.lastBrkId = 454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[454]) return breakpoint(s, 15, 454, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["prevTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.loopStart___8477 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["deltaTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[455]) return breakpoint(s, 16, 455, r0);
  case 16:
    r0 = (s.arg0).fields["prevTimeMillis"] = (s.loopStart___8477);
    s.lastBrkId = 456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[456]) return breakpoint(s, 17, 456, r0);
  case 17:
    s.f___8490 = (undefined);
    r0 = s.arg0.fields["frameCallbacks"];
    s.unnamed2864___U2 = (r0);
    s.unnamed2865___U3 = (0);
    s.lastBrkId = 457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[457]) return breakpoint(s, 18, 457, r0);
  case 18:
  case 1:
    s.tmp_0 = r0 = s.unnamed2865___U3;
    r0 = pxsim_Array__length(s.unnamed2864___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2864___U2, s.unnamed2865___U3);
    s.f___8490 = (r0);
    s.lastBrkId = 458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[458]) return breakpoint(s, 19, 458, r0);
  case 19:
    s.tmp_2 = if_handler_1_mk(s);
    s.tmp_2.arg0 = s.f___8490;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "handler"), 1);
      s.callLocIdx = 53; s.pc = 20; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["handler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["handler"], 1); s.callLocIdx = 53; s.pc = 20; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 53; s.pc = 20; return s.tmp_2;; }
     else { s.callLocIdx = 53; s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    r0 = (s.unnamed2865___U3 + 1);
    s.unnamed2865___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed2864___U2 = (undefined);
    s.lastBrkId = 459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[459]) return breakpoint(s, 21, 459, r0);
  case 21:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.loopStart___8477);
    s.runtime___8495 = (r0);
    s.lastBrkId = 460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[460]) return breakpoint(s, 22, 460, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.runtime___8495);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timeInSample"] = (s.tmp_1);
    s.lastBrkId = 461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[461]) return breakpoint(s, 23, 461, r0);
  case 23:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["framesInSample"] = (s.tmp_1);
    s.lastBrkId = 462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[462]) return breakpoint(s, 24, 462, r0);
  case 24:
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 30);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[463]) return breakpoint(s, 25, 463, r0);
  case 25:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 / 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 / s.tmp_5);
    s.fps___8515 = (r0);
    s.lastBrkId = 464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[464]) return breakpoint(s, 26, 464, r0);
  case 26:
    r0 = pxsim.Math_.round(s.fps___8515);
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat("fps:", s.tmp_0);
    globals.control_EventContext_lastStats___386 = (r0);
    s.lastBrkId = 465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[465]) return breakpoint(s, 28, 465, r0);
  case 28:
    r0 = (s.fps___8515 < 99);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[466]) return breakpoint(s, 29, 466, r0);
  case 29:
    if ((globals.control_EventContext_lastStats___386) && (globals.control_EventContext_lastStats___386).vtable) {
    setupResume(s, 30);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___386);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___386) + ""; }
  case 30:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.fps___8515 * 10);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.round(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 % 10);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(".", s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 32);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 32:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    globals.control_EventContext_lastStats___386 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[467]) return breakpoint(s, 33, 467, r0);
  case 33:
    s.tmp_2 = control_ramSize__P335_mk(s);
    s.callLocIdx = 54; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 2000000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.profilingEnabled();
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[468]) return breakpoint(s, 35, 468, r0);
  case 35:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_8 = r0;
    r0 = (s.fps___8515 * 100);
    s.tmp_11 = r0;
    r0 = (s.tmp_11 | 0);
    s.tmp_10 = r0;
    if ((s.tmp_10) && (s.tmp_10).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.tmp_10);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_10) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat(s.tmp_8, s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_7, "/100 fps - ");
    s.tmp_6 = r0;
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 37);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 37:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_12);
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_5, " frames");
    s.tmp_4 = r0;
    r0 = pxsim.control.dmesg(s.tmp_4);
    s.lastBrkId = 469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[469]) return breakpoint(s, 38, 469, r0);
  case 38:
    r0 = pxsim.control.gc();
    s.lastBrkId = 470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[470]) return breakpoint(s, 39, 470, r0);
  case 39:
    r0 = pxsim_pxtcore.dumpPerfCounters();
  case 9:
  case 10:
    s.lastBrkId = 471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[471]) return breakpoint(s, 40, 471, r0);
  case 40:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[472]) return breakpoint(s, 41, 472, r0);
  case 41:
    r0 = (s.arg0).fields["framesInSample"] = (0);
  case 11:
  case 12:
    s.lastBrkId = 473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[473]) return breakpoint(s, 42, 473, r0);
  case 42:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = 1;
    r0 = (20 - s.runtime___8495);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 55; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    s.delay___8577 = (r0);
    s.lastBrkId = 474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[474]) return breakpoint(s, 44, 474, r0);
  case 44:
    r0 = s.delay___8577;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_runCallbacks__P3737.info = {"start":2182,"length":1246,"line":74,"column":8,"endLine":102,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"runCallbacks","argumentNames":["this"]}

function control_EventContext_runCallbacks__P3737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_runCallbacks__P3737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  loopStart___8477: undefined,
  f___8490: undefined,
  unnamed2864___U2: undefined,
  unnamed2865___U3: undefined,
  runtime___8495: undefined,
  fps___8515: undefined,
  delay___8577: undefined,
  arg0: undefined,
} }





function pauseUntil__P356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[397]) return breakpoint(s, 8, 397, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 40; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[398]) return breakpoint(s, 10, 398, r0);
  case 10:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[399]) return breakpoint(s, 11, 399, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[400]) return breakpoint(s, 12, 400, r0);
  case 12:
    s.arg1 = (0);
  case 5:
  case 6:
    s.lastBrkId = 401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[401]) return breakpoint(s, 13, 401, r0);
  case 13:
    s.tmp_0 = control___queuePollEvent__P355_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 41; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P356.info = {"start":2205,"length":227,"line":73,"column":0,"endLine":77,"endColumn":1,"fileName":"pxt_modules/base/poll.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P355(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ev___8599 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[389]) return breakpoint(s, 5, 389, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C3711_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P3712_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 1;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.callLocIdx = 38; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.ev___8599 = (s.tmp_0);
    s.lastBrkId = 390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[390]) return breakpoint(s, 7, 390, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___3714);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[391]) return breakpoint(s, 8, 391, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___8599);
    globals._pollEventQueue___3714 = (s.tmp_2);
    s.lastBrkId = 392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[392]) return breakpoint(s, 9, 392, r0);
  case 9:
    r0 = pxsim.control.runInParallel(control_pollEvents__P3715);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[393]) return breakpoint(s, 10, 393, r0);
  case 10:
    r0 = pxsim_Array__push(globals._pollEventQueue___3714, s.ev___8599);
  case 2:
    s.lastBrkId = 394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[394]) return breakpoint(s, 11, 394, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[395]) return breakpoint(s, 12, 395, r0);
  case 12:
    s.tmp_0 = control_onEvent__P380_mk(s);
    r0 = s.ev___8599.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___8599.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.callLocIdx = 39; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[396]) return breakpoint(s, 14, 396, r0);
  case 14:
    r0 = s.ev___8599.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___8599.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 15);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 15:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P355.info = {"start":1262,"length":739,"line":39,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P355_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P355, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___8599: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_pollEvents__P3715(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.now___8711 = undefined;
    s.i___8714 = undefined;
    s.ev___8720 = undefined;
    s.lastBrkId = 374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[374]) return breakpoint(s, 13, 374, r0);
  case 13:
  case 1:
    s.lastBrkId = 375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[375]) return breakpoint(s, 14, 375, r0);
  case 14:
    r0 = pxsim_Array__length(globals._pollEventQueue___3714);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[376]) return breakpoint(s, 15, 376, r0);
  case 15:
    r0 = pxsim.control.millis();
    s.now___8711 = (r0);
    s.lastBrkId = 377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[377]) return breakpoint(s, 16, 377, r0);
  case 16:
    s.i___8714 = (0);
    s.lastBrkId = 378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[378]) return breakpoint(s, 17, 378, r0);
  case 17:
  case 2:
    s.lastBrkId = 379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[379]) return breakpoint(s, 18, 379, r0);
  case 18:
    s.tmp_1 = r0 = s.i___8714;
    r0 = pxsim_Array__length(globals._pollEventQueue___3714);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[380]) return breakpoint(s, 19, 380, r0);
  case 19:
    r0 = pxsim_Array__getAt(globals._pollEventQueue___3714, s.i___8714);
    s.ev___8720 = (r0);
    s.lastBrkId = 381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[381]) return breakpoint(s, 20, 381, r0);
  case 20:
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.ev___8720;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.callLocIdx = 35; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.callLocIdx = 35; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 35; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 35; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___8720.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___8720.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___8711 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___8720.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[382]) return breakpoint(s, 22, 382, r0);
  case 22:
    r0 = s.ev___8720.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___8720.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    s.lastBrkId = 383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[383]) return breakpoint(s, 23, 383, r0);
  case 23:
    r0 = s.ev___8720.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[384]) return breakpoint(s, 24, 384, r0);
  case 24:
    s.tmp_1 = helpers_arraySplice__P98_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___3714;
    s.tmp_1.arg1 = s.i___8714;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 36; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[385]) return breakpoint(s, 26, 385, r0);
  case 26:
    r0 = (s.i___8714 - 1);
    s.i___8714 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[386]) return breakpoint(s, 27, 386, r0);
  case 27:
    r0 = (s.i___8714 + 1);
    s.i___8714 = (r0);
    { step = 2; continue; }
  case 11:
    s.lastBrkId = 387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[387]) return breakpoint(s, 28, 387, r0);
  case 28:
    s.tmp_0 = pause__P402_mk(s);
    s.tmp_0.arg0 = 50;
    s.callLocIdx = 37; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    s.lastBrkId = 388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[388]) return breakpoint(s, 30, 388, r0);
  case 30:
    globals._pollEventQueue___3714 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P3715.info = {"start":618,"length":638,"line":20,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P3715_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P3715, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___8711: undefined,
  i___8714: undefined,
  ev___8720: undefined,
} }





function helpers_arraySplice__P98(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___8768 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 37;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[37]) return breakpoint(s, 6, 37, r0);
  case 6:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 38;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[38]) return breakpoint(s, 7, 38, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 39;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[39]) return breakpoint(s, 8, 39, r0);
  case 8:
    s.i___8768 = (0);
    s.lastBrkId = 40;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[40]) return breakpoint(s, 9, 40, r0);
  case 9:
  case 3:
    s.lastBrkId = 41;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[41]) return breakpoint(s, 10, 41, r0);
  case 10:
    r0 = (s.i___8768 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 42;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[42]) return breakpoint(s, 11, 42, r0);
  case 11:
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    s.lastBrkId = 43;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[43]) return breakpoint(s, 12, 43, r0);
  case 12:
    r0 = (s.i___8768 + 1);
    s.i___8768 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P98.info = {"start":3642,"length":213,"line":137,"column":4,"endLine":144,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P98_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P98, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___8768: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_PollEvent_constructor__P3712(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C3711_VT)) failedCast(r0);
    s.lastBrkId = 367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[367]) return breakpoint(s, 1, 367, r0);
  case 1:
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    s.lastBrkId = 368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[368]) return breakpoint(s, 2, 368, r0);
  case 2:
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    s.lastBrkId = 369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[369]) return breakpoint(s, 3, 369, r0);
  case 3:
    r0 = (s.arg0).fields["start"] = (s.arg3);
    s.lastBrkId = 370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[370]) return breakpoint(s, 4, 370, r0);
  case 4:
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    s.lastBrkId = 371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[371]) return breakpoint(s, 5, 371, r0);
  case 5:
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    s.lastBrkId = 372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[372]) return breakpoint(s, 6, 372, r0);
  case 6:
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P3712.info = {"start":239,"length":316,"line":8,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/base/poll.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P3712_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P3712, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function control_onEvent__P380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___8641 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[435]) return breakpoint(s, 3, 435, r0);
  case 3:
    s.tmp_0 = control_eventContext__P397_mk(s);
    s.callLocIdx = 50; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.ctx___8641 = (r0);
    s.lastBrkId = 436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[436]) return breakpoint(s, 5, 436, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.ctx___8641);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[437]) return breakpoint(s, 6, 437, r0);
  case 6:
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[438]) return breakpoint(s, 7, 438, r0);
  case 7:
    s.tmp_0 = control_EventContext_registerHandler__P394_mk(s);
    s.tmp_0.arg0 = s.ctx___8641;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.callLocIdx = 51; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P380.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___8641: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_EventContext_registerHandler__P394(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___8664 = undefined;
    s.unnamed2870___U1 = undefined;
    s.unnamed2871___U2 = undefined;
    s.hn___8686 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[514]) return breakpoint(s, 8, 514, r0);
  case 8:
    s.h___8664 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed2870___U1 = (r0);
    s.unnamed2871___U2 = (0);
    s.lastBrkId = 515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[515]) return breakpoint(s, 9, 515, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed2871___U2;
    r0 = pxsim_Array__length(s.unnamed2870___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2870___U1, s.unnamed2871___U2);
    s.h___8664 = (r0);
    s.lastBrkId = 516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[516]) return breakpoint(s, 10, 516, r0);
  case 10:
    r0 = s.h___8664.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___8664.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[517]) return breakpoint(s, 11, 517, r0);
  case 11:
    r0 = (s.h___8664).fields["flags"] = (s.arg4);
    s.lastBrkId = 518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[518]) return breakpoint(s, 12, 518, r0);
  case 12:
    r0 = (s.h___8664).fields["handler"] = (s.arg3);
    s.lastBrkId = 519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[519]) return breakpoint(s, 13, 519, r0);
  case 13:
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed2871___U2 + 1);
    s.unnamed2871___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed2870___U1 = (undefined);
    s.lastBrkId = 520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[520]) return breakpoint(s, 14, 520, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C3732_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P3735_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.callLocIdx = 63; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.hn___8686 = (s.tmp_0);
    s.lastBrkId = 521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[521]) return breakpoint(s, 16, 521, r0);
  case 16:
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___8686);
    s.lastBrkId = 522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[522]) return breakpoint(s, 17, 522, r0);
  case 17:
    s.tmp_0 = control_EventHandler_register__P3733_mk(s);
    s.tmp_0.arg0 = s.hn___8686;
    s.callLocIdx = 64; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P394.info = {"start":5573,"length":525,"line":169,"column":8,"endLine":182,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P394_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P394, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___8664: undefined,
  unnamed2870___U1: undefined,
  unnamed2871___U2: undefined,
  hn___8686: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_constructor__P3735(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C3732_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P3735.info = {"start":786,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P3735_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P3735, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_register__P3733(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C3732_VT)) failedCast(r0);
    s.lastBrkId = 439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[439]) return breakpoint(s, 1, 439, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, inline__P8812);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P3733.info = {"start":961,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P3733_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P3733, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P8812(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[440]) return breakpoint(s, 3, 440, r0);
  case 3:
    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[441]) return breakpoint(s, 4, 441, r0);
  case 4:
    s.tmp_1 = if_handler_1_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "handler"), 1);
      s.callLocIdx = 52; s.pc = 5; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["handler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["handler"], 1); s.callLocIdx = 52; s.pc = 5; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 52; s.pc = 5; return s.tmp_1;; }
     else { s.callLocIdx = 52; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P8812.info = {"start":1032,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function inline__P8812_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8812, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function particles_ParticleSource_setFactory__P2697(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3070]) return breakpoint(s, 3, 3070, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3071]) return breakpoint(s, 4, 3071, r0);
  case 4:
    r0 = (s.arg0).fields["_factory"] = (s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setFactory__P2697.info = {"start":8107,"length":114,"line":271,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setFactory","argumentNames":["this","factory"]}

function particles_ParticleSource_setFactory__P2697_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setFactory__P2697, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setRate__P2695(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3068]) return breakpoint(s, 1, 3068, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (1000 / s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["period"] = (s.tmp_1);
    s.lastBrkId = 3069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3069]) return breakpoint(s, 2, 3069, r0);
  case 2:
    r0 = (s.arg0).fields["timer"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRate__P2695.info = {"start":7785,"length":139,"line":258,"column":8,"endLine":261,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRate","argumentNames":["this","particlesPerSecond"]}

function particles_ParticleSource_setRate__P2695_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRate__P2695, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setAnchor__P2694(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3067]) return breakpoint(s, 1, 3067, r0);
  case 1:
    r0 = (s.arg0).fields["anchor"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAnchor__P2694.info = {"start":7577,"length":79,"line":250,"column":8,"endLine":252,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAnchor","argumentNames":["this","anchor"]}

function particles_ParticleSource_setAnchor__P2694_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAnchor__P2694, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_clear__P2693(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3066]) return breakpoint(s, 1, 3066, r0);
  case 1:
    r0 = (s.arg0).fields["head"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_clear__P2693.info = {"start":7407,"length":54,"line":242,"column":8,"endLine":244,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"clear","argumentNames":["this"]}

function particles_ParticleSource_clear__P2693_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_clear__P2693, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_destroy__P2692(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3063]) return breakpoint(s, 1, 3063, r0);
  case 1:
    s.tmp_0 = particles_ParticleSource_enabled__P2691_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1337; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3064]) return breakpoint(s, 3, 3064, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    s.lastBrkId = 3065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3065]) return breakpoint(s, 4, 3065, r0);
  case 4:
    s.tmp_0 = particles_ParticleSource__prune__P2686_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1338; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_destroy__P2692.info = {"start":7077,"length":240,"line":232,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"destroy","argumentNames":["this"]}

function particles_ParticleSource_destroy__P2692_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_destroy__P2692, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_enabled__P2691(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3060]) return breakpoint(s, 5, 3060, r0);
  case 5:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = particles_ParticleSource_enabled__P2690_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1336; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3061]) return breakpoint(s, 7, 3061, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 1);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 ^ 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["pFlags"] = (s.tmp_6);
    s.lastBrkId = 3062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3062]) return breakpoint(s, 8, 3062, r0);
  case 8:
    r0 = (s.arg0).fields["timer"] = (0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P2691.info = {"start":6799,"length":214,"line":222,"column":8,"endLine":227,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this","v"]}

function particles_ParticleSource_enabled__P2691_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P2691, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_enabled__P2690(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3059]) return breakpoint(s, 1, 3059, r0);
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P2690.info = {"start":6605,"length":76,"line":215,"column":8,"endLine":217,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this"]}
particles_ParticleSource_enabled__P2690.isGetter = true;

function particles_ParticleSource_enabled__P2690_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P2690, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_setAcceleration__P2687(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3054]) return breakpoint(s, 1, 3054, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1334; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ax"] = (s.tmp_1);
    s.lastBrkId = 3055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3055]) return breakpoint(s, 3, 3055, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1335; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAcceleration__P2687.info = {"start":6009,"length":113,"line":193,"column":8,"endLine":196,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAcceleration","argumentNames":["this","ax","ay"]}

function particles_ParticleSource_setAcceleration__P2687_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAcceleration__P2687, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite_constructor__P1860(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    s.lastBrkId = 988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[988]) return breakpoint(s, 1, 988, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_z__P1863_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 172; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[989]) return breakpoint(s, 3, 989, r0);
  case 3:
    s.tmp_0 = scene_Scene_addSprite__P2444_mk(s);
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 173; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 174; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_constructor__P1860.info = {"start":344,"length":170,"line":15,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"inline","argumentNames":["this","z"]}

function sprites_BaseSprite_constructor__P1860_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_constructor__P1860, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Scene_addSprite__P2444(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    s.lastBrkId = 2489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2489]) return breakpoint(s, 1, 2489, r0);
  case 1:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 2490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2490]) return breakpoint(s, 2, 2490, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["spriteNextId"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spriteNextId"] = (s.tmp_1);
    s.tmp_3 = if_id_2_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.tmp_3.arg1 = s.tmp_2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "id", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/id"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["id"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1037; s.pc = 3; return s.tmp_3; }
    }
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_addSprite__P2444.info = {"start":6859,"length":128,"line":193,"column":8,"endLine":196,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function scene_Scene_addSprite__P2444_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_addSprite__P2444, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P1863(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    s.lastBrkId = 992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[992]) return breakpoint(s, 3, 992, r0);
  case 3:
    r0 = s.arg0.fields["_z"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[993]) return breakpoint(s, 4, 993, r0);
  case 4:
    r0 = (s.arg0).fields["_z"] = (s.arg1);
    s.lastBrkId = 994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[994]) return breakpoint(s, 5, 994, r0);
  case 5:
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 175; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P1863.info = {"start":656,"length":174,"line":30,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this","v"]}

function sprites_BaseSprite_z__P1863_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P1863, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P1862(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    s.lastBrkId = 991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[991]) return breakpoint(s, 1, 991, r0);
  case 1:
    r0 = s.arg0.fields["_z"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P1862.info = {"start":591,"length":55,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this"]}
sprites_BaseSprite_z__P1862.isGetter = true;

function sprites_BaseSprite_z__P1862_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P1862, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function helpers_arrayShift__P100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 44;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[44]) return breakpoint(s, 1, 44, r0);
  case 1:
    r0 = pxsim_Array_.removeAt(s.arg0, 0);
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayShift__P100.info = {"start":4045,"length":82,"line":153,"column":4,"endLine":155,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayShift","argumentNames":["arr"]}

function helpers_arrayShift__P100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayShift__P100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_TrailFactory_constructor__P2737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_TrailFactory__C2732_VT)) failedCast(r0);
    s.lastBrkId = 3175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3175]) return breakpoint(s, 5, 3175, r0);
  case 5:
    s.tmp_0 = particles_ParticleFactory_constructor__P2715_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1412; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3176]) return breakpoint(s, 7, 3176, r0);
  case 7:
    s.tmp_1 = if_width_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "width");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["width"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["width"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1413; s.pc = 8; return s.tmp_1; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_width_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "width");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["width"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["width"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1414; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 2; continue; }
  case 1:
    r0 = 8;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["xRange"] = (s.tmp_4);
    s.lastBrkId = 3177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3177]) return breakpoint(s, 10, 3177, r0);
  case 10:
    s.tmp_1 = if_height_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "height");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["height"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["height"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1415; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_height_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "height");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["height"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["height"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1416; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 4; continue; }
  case 3:
    r0 = 8;
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["yRange"] = (s.tmp_4);
    s.lastBrkId = 3178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3178]) return breakpoint(s, 13, 3178, r0);
  case 13:
    r0 = (s.arg0).fields["minLifespan"] = (s.arg2);
    s.lastBrkId = 3179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3179]) return breakpoint(s, 14, 3179, r0);
  case 14:
    r0 = (s.arg0).fields["maxLifespan"] = (s.arg3);
    s.lastBrkId = 3180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3180]) return breakpoint(s, 15, 3180, r0);
  case 15:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2586_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2588_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1417; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    r0 = (s.arg0).fields["galois"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_TrailFactory_constructor__P2737.info = {"start":5296,"length":377,"line":176,"column":8,"endLine":183,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","sprite","minLifespan","maxLifespan"]}

function particles_TrailFactory_constructor__P2737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_TrailFactory_constructor__P2737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function effects_ParticleEffect_constructor__P2790(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C2789_VT)) failedCast(r0);
    s.lastBrkId = 3249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3249]) return breakpoint(s, 1, 3249, r0);
  case 1:
    r0 = (s.arg0).fields["sourceFactory"] = (s.arg3);
    s.lastBrkId = 3250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3250]) return breakpoint(s, 2, 3250, r0);
  case 2:
    r0 = (s.arg0).fields["defaultRate"] = (s.arg1);
    s.lastBrkId = 3251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3251]) return breakpoint(s, 3, 3251, r0);
  case 3:
    r0 = (s.arg0).fields["defaultLifespan"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_constructor__P2790.info = {"start":384,"length":364,"line":13,"column":8,"endLine":18,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","defaultParticlesPerSecond","defaultLifespan","sourceFactory"]}

function effects_ParticleEffect_constructor__P2790_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_constructor__P2790, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_startEffect__P2075(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1324]) return breakpoint(s, 1, 1324, r0);
  case 1:
    s.tmp_0 = effects_ParticleEffect_start__P2791_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = null;
    r0 = s.arg0.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 512);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 366; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_startEffect__P2075.info = {"start":20255,"length":162,"line":628,"column":4,"endLine":630,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"startEffect","argumentNames":["this","effect","duration"]}

function Sprite_startEffect__P2075_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_startEffect__P2075, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ParticleEffect_start__P2791(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.src___14976 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C2789_VT)) failedCast(r0);
    s.lastBrkId = 3252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3252]) return breakpoint(s, 10, 3252, r0);
  case 10:
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3253]) return breakpoint(s, 11, 3253, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3254]) return breakpoint(s, 12, 3254, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 3; continue; }
    r0 = s.arg3;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["defaultRate"];
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = if_sourceFactory_3_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tmp_3;
    if (!s.tmp_4.arg0.vtable.iface) {
      setupLambda(s.tmp_4, pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1464; s.pc = 13; return s.tmp_4;
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_4.fn == null) { setupLambda(s.tmp_4, s.tmp_4.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1464; s.pc = 13; return s.tmp_4; }
      else if (s.tmp_4.fn.isGetter) { s.tmp_4.stage2Call = true; s.callLocIdx = 1464; s.pc = 13; return s.tmp_4;; }
     else { s.callLocIdx = 1464; s.pc = 13; return s.tmp_4; }
    }
  case 13:
    r0 = s.retval;
    s.src___14976 = (r0);
    s.lastBrkId = 3255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3255]) return breakpoint(s, 14, 3255, r0);
  case 14:
    s.tmp_0 = particles_ParticleSource_setRelativeToCamera__P2689_mk(s);
    s.tmp_0.arg0 = s.src___14976;
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1465; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 3256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3256]) return breakpoint(s, 16, 3256, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3257]) return breakpoint(s, 17, 3257, r0);
  case 17:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg2;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["defaultLifespan"];
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.src___14976).fields["lifespan"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_start__P2791.info = {"start":967,"length":452,"line":26,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"start","argumentNames":["this","anchor","duration","particlesPerSecond","relativeToCamera"]}

function effects_ParticleEffect_start__P2791_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_start__P2791, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  src___14976: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function particles_ParticleSource_setRelativeToCamera__P2689(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3056]) return breakpoint(s, 3, 3056, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3057]) return breakpoint(s, 4, 3057, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3058]) return breakpoint(s, 5, 3058, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 4);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRelativeToCamera__P2689.info = {"start":6422,"length":173,"line":210,"column":8,"endLine":213,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRelativeToCamera","argumentNames":["this","on"]}

function particles_ParticleSource_setRelativeToCamera__P2689_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRelativeToCamera__P2689, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function enemyStun__P60281(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.StunnedEnemy___60279;
    s.callLocIdx = 85; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.image.ofBuffer(_hex60289);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 86; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_setVelocity__P2073_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 87; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P60293);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = timer_after__P3453_mk(s);
    s.tmp_1.arg0 = 1000;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 89; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
enemyStun__P60281.info = {"start":570,"length":874,"line":34,"column":0,"endLine":58,"endColumn":1,"fileName":"main.ts","functionName":"enemyStun","argumentNames":["baddie"]}

function enemyStun__P60281_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: enemyStun__P60281, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }

const _hex60289 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000002000000000000202f02000000000000f22f000000000000f2ff220000000000f2ffff0200000000f2ffff2f02000000f2ffff4f24000020ffffff2f02000022ffffff4f240020ffffffff2f0200f2ffffffff020000f2f1ffff2f000000f2ffffff02000000f22f222200000000202f00000000000000020000000000")




function inline__P60293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = enemyChase__P60295_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 88; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P60293.info = {"start":1395,"length":46,"line":55,"column":22,"endLine":57,"endColumn":5,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P60293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P60293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function Sprite_setVelocity__P2073(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1322]) return breakpoint(s, 1, 1322, r0);
  case 1:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 364; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1323]) return breakpoint(s, 3, 1323, r0);
  case 3:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 365; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setVelocity__P2073.info = {"start":12526,"length":93,"line":450,"column":4,"endLine":453,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setVelocity","argumentNames":["this","vx","vy"]}

function Sprite_setVelocity__P2073_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setVelocity__P2073, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_vy__P2032(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1234]) return breakpoint(s, 1, 1234, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 298; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vy__P2032.info = {"start":2705,"length":51,"line":108,"column":4,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this","v"]}

function Sprite_vy__P2032_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2032, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vy__P2031(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1233]) return breakpoint(s, 1, 1233, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 297; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vy__P2031.info = {"start":2543,"length":60,"line":103,"column":4,"endLine":105,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this"]}
Sprite_vy__P2031.isGetter = true;

function Sprite_vy__P2031_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2031, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_toFloat__P166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[274]) return breakpoint(s, 1, 274, r0);
  case 1:
    r0 = (s.arg0 / 256);
    return leave(s, r0)
  default: oops()
} } }
Fx_toFloat__P166.info = {"start":2235,"length":81,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toFloat","argumentNames":["v"]}

function Fx_toFloat__P166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toFloat__P166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_readDataNumber__P3552(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___15108 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3435]) return breakpoint(s, 6, 3435, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3436]) return breakpoint(s, 7, 3436, r0);
  case 7:
    r0 = 0;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3437]) return breakpoint(s, 8, 3437, r0);
  case 8:
    s.tmp_4 = Sprite_data__P2041_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 1557; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.d___15108 = (r0);
    s.lastBrkId = 3438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3438]) return breakpoint(s, 10, 3438, r0);
  case 10:
    r0 = pxsim_pxtrt.mapGetGeneric(s.d___15108, s.arg1);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_readDataNumber__P3552.info = {"start":1075,"length":181,"line":34,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/arcade-sprite-data/main.ts","functionName":"readDataNumber","argumentNames":["sprite","name"]}

function sprites_readDataNumber__P3552_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_readDataNumber__P3552, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  d___15108: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_data__P2041(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1243]) return breakpoint(s, 3, 1243, r0);
  case 3:
    r0 = s.arg0.fields["_data"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1244]) return breakpoint(s, 4, 1244, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_data"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1245]) return breakpoint(s, 5, 1245, r0);
  case 5:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_data__P2041.info = {"start":4194,"length":92,"line":160,"column":4,"endLine":163,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this"]}
Sprite_data__P2041.isGetter = true;

function Sprite_data__P2041_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2041, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function Sprite_vx__P2030(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1232]) return breakpoint(s, 1, 1232, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 296; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vx__P2030.info = {"start":2374,"length":51,"line":97,"column":4,"endLine":99,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this","v"]}

function Sprite_vx__P2030_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2030, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vx__P2029(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1231]) return breakpoint(s, 1, 1231, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 295; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vx__P2029.info = {"start":2212,"length":60,"line":92,"column":4,"endLine":94,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this"]}
Sprite_vx__P2029.isGetter = true;

function Sprite_vx__P2029_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2029, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function timer_after__P3453(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3349]) return breakpoint(s, 1, 3349, r0);
  case 1:
    s.tmp_0 = setTimeout__P412_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1524; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
timer_after__P3453.info = {"start":317,"length":96,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/Timers/timers.ts","functionName":"after","argumentNames":["time","thenDo"]}

function timer_after__P3453_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: timer_after__P3453, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function setTimeout__P412(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[543]) return breakpoint(s, 1, 543, r0);
  case 1:
    s.tmp_0 = control_setInterval__P343_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 70; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
setTimeout__P412.info = {"start":610,"length":139,"line":26,"column":0,"endLine":28,"endColumn":1,"fileName":"pxt_modules/base/scheduling.ts","functionName":"setTimeout","argumentNames":["func","delay"]}

function setTimeout__P412_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: setTimeout__P412, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_setInterval__P343(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.interval___15866 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[361]) return breakpoint(s, 8, 361, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[362]) return breakpoint(s, 9, 362, r0);
  case 9:
    r0 = 0;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[363]) return breakpoint(s, 10, 363, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(globals._intervals___3705);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[364]) return breakpoint(s, 11, 364, r0);
  case 11:
    r0 = pxsim_Array__mk();
    globals._intervals___3705 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[365]) return breakpoint(s, 12, 365, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_Interval__C3706_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_Interval_constructor__P3709_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.callLocIdx = 34; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.interval___15866 = (s.tmp_0);
    s.lastBrkId = 366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[366]) return breakpoint(s, 14, 366, r0);
  case 14:
    r0 = s.interval___15866.fields["id"];
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_setInterval__P343.info = {"start":1554,"length":266,"line":54,"column":4,"endLine":59,"endColumn":5,"fileName":"pxt_modules/base/interval.ts","functionName":"setInterval","argumentNames":["func","delay","mode"]}

function control_setInterval__P343_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_setInterval__P343, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  interval___15866: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_Interval_constructor__P3709(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C3706_VT)) failedCast(r0);
    s.lastBrkId = 342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[342]) return breakpoint(s, 3, 342, r0);
  case 3:
    r0 = pxsim_Array__length(globals._intervals___3705);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = globals._intervals___3705;
    r0 = pxsim_Array__length(globals._intervals___3705);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    r0 = r0.fields["id"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["id"] = (s.tmp_6);
    s.lastBrkId = 343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[343]) return breakpoint(s, 4, 343, r0);
  case 4:
    r0 = (s.arg0).fields["func"] = (s.arg1);
    s.lastBrkId = 344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[344]) return breakpoint(s, 5, 344, r0);
  case 5:
    r0 = (s.arg0).fields["delay"] = (s.arg2);
    s.lastBrkId = 345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[345]) return breakpoint(s, 6, 345, r0);
  case 6:
    r0 = (s.arg0).fields["mode"] = (s.arg3);
    s.lastBrkId = 346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[346]) return breakpoint(s, 7, 346, r0);
  case 7:
    r0 = pxsim_Array__push(globals._intervals___3705, s.arg0);
    s.lastBrkId = 347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[347]) return breakpoint(s, 8, 347, r0);
  case 8:
    r0 = pxsim_pxtcore_mkAction(1, inline__P15909);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_constructor__P3709.info = {"start":283,"length":367,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":["this","func","delay","mode"]}

function control_Interval_constructor__P3709_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_constructor__P3709, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P15909(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = control_Interval_work__P3707_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 29; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P15909.info = {"start":621,"length":17,"line":23,"column":34,"endLine":23,"endColumn":51,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":[]}

function inline__P15909_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15909, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_Interval_work__P3707(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C3706_VT)) failedCast(r0);
    s.lastBrkId = 348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[348]) return breakpoint(s, 13, 348, r0);
  case 13:
    r0 = s.arg0.fields["mode"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 1:
  case 2:
    s.lastBrkId = 349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[349]) return breakpoint(s, 14, 349, r0);
  case 14:
    r0 = s.arg0.fields["delay"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[350]) return breakpoint(s, 15, 350, r0);
  case 15:
    s.tmp_3 = pause__P402_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 30; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[351]) return breakpoint(s, 17, 351, r0);
  case 17:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[352]) return breakpoint(s, 18, 352, r0);
  case 18:
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.callLocIdx = 31; s.pc = 19; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.callLocIdx = 31; s.pc = 19; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 31; s.pc = 19; return s.tmp_2;; }
     else { s.callLocIdx = 31; s.pc = 19; return s.tmp_2; }
    }
  case 19:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[353]) return breakpoint(s, 20, 353, r0);
  case 20:
    { step = 12; continue; }
  case 7:
    s.lastBrkId = 354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[354]) return breakpoint(s, 21, 354, r0);
  case 21:
  case 8:
    s.lastBrkId = 355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[355]) return breakpoint(s, 22, 355, r0);
  case 22:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[356]) return breakpoint(s, 23, 356, r0);
  case 23:
    s.tmp_2 = pause__P402_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 32; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[357]) return breakpoint(s, 25, 357, r0);
  case 25:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[358]) return breakpoint(s, 26, 358, r0);
  case 26:
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.callLocIdx = 33; s.pc = 27; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.callLocIdx = 33; s.pc = 27; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 33; s.pc = 27; return s.tmp_2;; }
     else { s.callLocIdx = 33; s.pc = 27; return s.tmp_2; }
    }
  case 27:
    r0 = s.retval;
  case 9:
  case 10:
    { step = 8; continue; }
  case 11:
    s.lastBrkId = 359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[359]) return breakpoint(s, 28, 359, r0);
  case 28:
  case 12:
    s.lastBrkId = 360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[360]) return breakpoint(s, 29, 360, r0);
  case 29:
    r0 = pxsim_Array_.removeElement(globals._intervals___3705, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_work__P3707.info = {"start":660,"length":823,"line":26,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"work","argumentNames":["this"]}

function control_Interval_work__P3707_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_work__P3707, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_y__P2027(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1229]) return breakpoint(s, 1, 1229, r0);
  case 1:
    s.tmp_1 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 293; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_y__P2027.info = {"start":1849,"length":85,"line":81,"column":4,"endLine":83,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this"]}
Sprite_y__P2027.isGetter = true;

function Sprite_y__P2027_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2027, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function Sprite_x__P2025(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1227]) return breakpoint(s, 1, 1227, r0);
  case 1:
    s.tmp_1 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 291; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_x__P2025.info = {"start":1501,"length":84,"line":70,"column":4,"endLine":72,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this"]}
Sprite_x__P2025.isGetter = true;

function Sprite_x__P2025_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2025, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_setDataNumber__P3550(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___14521 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3431]) return breakpoint(s, 6, 3431, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3432]) return breakpoint(s, 7, 3432, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3433]) return breakpoint(s, 8, 3433, r0);
  case 8:
    s.tmp_4 = Sprite_data__P2041_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 1556; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.d___14521 = (r0);
    s.lastBrkId = 3434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3434]) return breakpoint(s, 10, 3434, r0);
  case 10:
    r0 = pxsim_pxtrt.mapSetGeneric(s.d___14521, s.arg1, s.arg2);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_setDataNumber__P3550.info = {"start":241,"length":176,"line":8,"column":4,"endLine":12,"endColumn":5,"fileName":"pxt_modules/arcade-sprite-data/main.ts","functionName":"setDataNumber","argumentNames":["sprite","name","value"]}

function sprites_setDataNumber__P3550_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_setDataNumber__P3550, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  d___14521: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_setKind__P2071(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___16168 = undefined;
    s.overlapMap___16197 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1306]) return breakpoint(s, 16, 1306, r0);
  case 16:
    r0 = (s.arg1 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1307]) return breakpoint(s, 17, 1307, r0);
  case 17:
    { step = 15; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1308]) return breakpoint(s, 18, 1308, r0);
  case 18:
    s.tmp_3 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 354; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___16168 = (r0);
    s.lastBrkId = 1309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1309]) return breakpoint(s, 20, 1309, r0);
  case 20:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_kind"];
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___16168, s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1310]) return breakpoint(s, 21, 1310, r0);
  case 21:
    s.tmp_4 = sprites_SpriteSet_remove__P2118_mk(s);
    r0 = s.arg0.fields["_kind"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___16168, s.tmp_5);
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.arg0;
    s.callLocIdx = 355; s.pc = 22; return s.tmp_4;
  case 22:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1311]) return breakpoint(s, 23, 1311, r0);
  case 23:
    r0 = (s.arg1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1312]) return breakpoint(s, 24, 1312, r0);
  case 24:
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___16168, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1313]) return breakpoint(s, 25, 1313, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteSet__C2111_VT);
    s.tmp_4 = r0;
    s.tmp_5 = sprites_SpriteSet_constructor__P2113_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.callLocIdx = 356; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mapSetGeneric(s.spritesByKind___16168, s.arg1, s.tmp_4);
  case 9:
  case 10:
    s.lastBrkId = 1314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1314]) return breakpoint(s, 27, 1314, r0);
  case 27:
    s.tmp_0 = sprites_SpriteSet_add__P2116_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___16168, s.arg1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 357; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
  case 11:
  case 12:
    s.lastBrkId = 1315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1315]) return breakpoint(s, 29, 1315, r0);
  case 29:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 358; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = r0.fields["overlapMap"];
    s.overlapMap___16197 = (r0);
    s.lastBrkId = 1316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1316]) return breakpoint(s, 31, 1316, r0);
  case 31:
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___16197, s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1317]) return breakpoint(s, 32, 1317, r0);
  case 32:
    s.tmp_3 = r0 = s.overlapMap___16197;
    s.tmp_4 = r0 = s.arg1;
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.tmp_4, s.tmp_5);
  case 13:
  case 14:
    s.lastBrkId = 1318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1318]) return breakpoint(s, 33, 1318, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___16197, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_kindsOverlappedWith"] = (s.tmp_1);
    s.lastBrkId = 1319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1319]) return breakpoint(s, 34, 1319, r0);
  case 34:
    r0 = (s.arg0).fields["_kind"] = (s.arg1);
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setKind__P2071.info = {"start":10872,"length":663,"line":398,"column":4,"endLine":418,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setKind","argumentNames":["this","value"]}

function Sprite_setKind__P2071_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setKind__P2071, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  spritesByKind___16168: undefined,
  overlapMap___16197: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_remove__P2118(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14791 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1560]) return breakpoint(s, 4, 1560, r0);
  case 4:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.arg1, undefined);
    s.i___14791 = (r0);
    s.lastBrkId = 1561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1561]) return breakpoint(s, 5, 1561, r0);
  case 5:
    r0 = (s.i___14791 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1562]) return breakpoint(s, 6, 1562, r0);
  case 6:
    s.tmp_1 = helpers_arraySplice__P98_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___14791;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 544; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1563]) return breakpoint(s, 8, 1563, r0);
  case 8:
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1564]) return breakpoint(s, 9, 1564, r0);
  case 9:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_remove__P2118.info = {"start":1816,"length":235,"line":66,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"remove","argumentNames":["this","sprite"]}

function sprites_SpriteSet_remove__P2118_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_remove__P2118, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___14791: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_add__P2116(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1554]) return breakpoint(s, 6, 1554, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1555]) return breakpoint(s, 7, 1555, r0);
  case 7:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1556]) return breakpoint(s, 8, 1556, r0);
  case 8:
    s.tmp_3 = sprites_SpriteSet_contains__P2119_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 543; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1557]) return breakpoint(s, 10, 1557, r0);
  case 10:
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1558]) return breakpoint(s, 11, 1558, r0);
  case 11:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.arg1);
    s.lastBrkId = 1559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1559]) return breakpoint(s, 12, 1559, r0);
  case 12:
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_add__P2116.info = {"start":1027,"length":263,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"add","argumentNames":["this","sprite"]}

function sprites_SpriteSet_add__P2116_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_add__P2116, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_contains__P2119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1565]) return breakpoint(s, 1, 1565, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_1, s.arg1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_contains__P2119.info = {"start":2162,"length":100,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"contains","argumentNames":["this","sprite"]}

function sprites_SpriteSet_contains__P2119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_contains__P2119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_constructor__P2113(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1551]) return breakpoint(s, 1, 1551, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_constructor__P2113.info = {"start":488,"length":57,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteSet_constructor__P2113_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_constructor__P2113, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_setImage__P2056(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1266]) return breakpoint(s, 4, 1266, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1267]) return breakpoint(s, 5, 1267, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1268]) return breakpoint(s, 6, 1268, r0);
  case 6:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    s.lastBrkId = 1269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1269]) return breakpoint(s, 7, 1269, r0);
  case 7:
    s.tmp_0 = Sprite_setHitbox__P2057_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 320; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setImage__P2056.info = {"start":6825,"length":133,"line":252,"column":4,"endLine":256,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setImage","argumentNames":["this","img"]}

function Sprite_setImage__P2056_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setImage__P2056, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setHitbox__P2057(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.newHitBox___15958 = undefined;
    s.oMinX___15966 = undefined;
    s.oMinY___15970 = undefined;
    s.oMaxX___15974 = undefined;
    s.oMaxY___15981 = undefined;
    s.nMinX___15988 = undefined;
    s.nMinY___15991 = undefined;
    s.nMaxX___15994 = undefined;
    s.nMaxY___16000 = undefined;
    s.xDiff___16006 = undefined;
    s.yDiff___16017 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1270]) return breakpoint(s, 8, 1270, r0);
  case 8:
    s.tmp_0 = game_calculateHitBox__P1970_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 321; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.newHitBox___15958 = (r0);
    s.lastBrkId = 1271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1271]) return breakpoint(s, 10, 1271, r0);
  case 10:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1272]) return breakpoint(s, 11, 1272, r0);
  case 11:
    r0 = (s.arg0).fields["_hitbox"] = (s.newHitBox___15958);
    s.lastBrkId = 1273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1273]) return breakpoint(s, 12, 1273, r0);
  case 12:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1274]) return breakpoint(s, 13, 1274, r0);
  case 13:
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["ox"];
    s.oMinX___15966 = (r0);
    s.lastBrkId = 1275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1275]) return breakpoint(s, 14, 1275, r0);
  case 14:
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["oy"];
    s.oMinY___15970 = (r0);
    s.lastBrkId = 1276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1276]) return breakpoint(s, 15, 1276, r0);
  case 15:
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_0.arg0 = s.oMinX___15966;
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 322; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.oMaxX___15974 = (r0);
    s.lastBrkId = 1277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1277]) return breakpoint(s, 17, 1277, r0);
  case 17:
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_0.arg0 = s.oMinY___15970;
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 323; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.oMaxY___15981 = (r0);
    s.lastBrkId = 1278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1278]) return breakpoint(s, 19, 1278, r0);
  case 19:
    r0 = s.newHitBox___15958.fields["ox"];
    s.nMinX___15988 = (r0);
    s.lastBrkId = 1279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1279]) return breakpoint(s, 20, 1279, r0);
  case 20:
    r0 = s.newHitBox___15958.fields["oy"];
    s.nMinY___15991 = (r0);
    s.lastBrkId = 1280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1280]) return breakpoint(s, 21, 1280, r0);
  case 21:
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_0.arg0 = s.nMinX___15988;
    r0 = s.newHitBox___15958.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 324; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.nMaxX___15994 = (r0);
    s.lastBrkId = 1281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1281]) return breakpoint(s, 23, 1281, r0);
  case 23:
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_0.arg0 = s.nMinY___15991;
    r0 = s.newHitBox___15958.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 325; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.nMaxY___16000 = (r0);
    s.lastBrkId = 1282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1282]) return breakpoint(s, 25, 1282, r0);
  case 25:
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_1 = Fx_abs__P160_mk(s);
    s.tmp_2 = Fx_sub__P154_mk(s);
    s.tmp_2.arg0 = s.oMinX___15966;
    s.tmp_2.arg1 = s.nMinX___15988;
    s.callLocIdx = 326; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 327; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P160_mk(s);
    s.tmp_4 = Fx_sub__P154_mk(s);
    s.tmp_4.arg0 = s.oMaxX___15974;
    s.tmp_4.arg1 = s.nMaxX___15994;
    s.callLocIdx = 328; s.pc = 30; return s.tmp_4;
  case 30:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 329; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 330; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.xDiff___16006 = (r0);
    s.lastBrkId = 1283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1283]) return breakpoint(s, 31, 1283, r0);
  case 31:
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_1 = Fx_abs__P160_mk(s);
    s.tmp_2 = Fx_sub__P154_mk(s);
    s.tmp_2.arg0 = s.oMinY___15970;
    s.tmp_2.arg1 = s.nMinY___15991;
    s.callLocIdx = 331; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 332; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P160_mk(s);
    s.tmp_4 = Fx_sub__P154_mk(s);
    s.tmp_4.arg0 = s.oMaxY___15981;
    s.tmp_4.arg1 = s.nMaxY___16000;
    s.callLocIdx = 333; s.pc = 36; return s.tmp_4;
  case 36:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 334; s.pc = 35; return s.tmp_3;
  case 35:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 335; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.yDiff___16017 = (r0);
    s.lastBrkId = 1284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1284]) return breakpoint(s, 37, 1284, r0);
  case 37:
    r0 = (s.arg0).fields["_hitbox"] = (s.newHitBox___15958);
    s.lastBrkId = 1285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1285]) return breakpoint(s, 38, 1285, r0);
  case 38:
    r0 = (s.xDiff___16006 <= 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1286]) return breakpoint(s, 39, 1286, r0);
  case 39:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1).fields["ox"] = (s.oMinX___15966);
    s.lastBrkId = 1287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1287]) return breakpoint(s, 40, 1287, r0);
  case 40:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    s.tmp_2 = Fx_sub__P154_mk(s);
    s.tmp_2.arg0 = s.oMaxX___15974;
    s.tmp_2.arg1 = s.oMinX___15966;
    s.callLocIdx = 336; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["width"] = (s.tmp_1);
  case 3:
  case 4:
    s.lastBrkId = 1288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1288]) return breakpoint(s, 42, 1288, r0);
  case 42:
    r0 = (s.yDiff___16017 <= 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1289]) return breakpoint(s, 43, 1289, r0);
  case 43:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1).fields["oy"] = (s.oMinY___15970);
    s.lastBrkId = 1290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1290]) return breakpoint(s, 44, 1290, r0);
  case 44:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    s.tmp_2 = Fx_sub__P154_mk(s);
    s.tmp_2.arg0 = s.oMaxY___15981;
    s.tmp_2.arg1 = s.oMinY___15970;
    s.callLocIdx = 337; s.pc = 45; return s.tmp_2;
  case 45:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["height"] = (s.tmp_1);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setHitbox__P2057.info = {"start":6964,"length":1296,"line":258,"column":4,"endLine":297,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setHitbox","argumentNames":["this"]}

function Sprite_setHitbox__P2057_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setHitbox__P2057, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  newHitBox___15958: undefined,
  oMinX___15966: undefined,
  oMinY___15970: undefined,
  oMaxX___15974: undefined,
  oMaxY___15981: undefined,
  nMinX___15988: undefined,
  nMinY___15991: undefined,
  nMaxX___15994: undefined,
  nMaxY___16000: undefined,
  xDiff___16006: undefined,
  yDiff___16017: undefined,
  arg0: undefined,
} }





function game_calculateHitBox__P1970(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___16066 = undefined;
    s.minX___16069 = undefined;
    s.minY___16072 = undefined;
    s.maxX___16075 = undefined;
    s.maxY___16076 = undefined;
    s.c___16077 = undefined;
    s.r___16083 = undefined;
    s.width___16114 = undefined;
    s.height___16120 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1173]) return breakpoint(s, 7, 1173, r0);
  case 7:
    s.tmp_0 = Sprite_image__P2055_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 261; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.i___16066 = (r0);
    s.lastBrkId = 1174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1174]) return breakpoint(s, 9, 1174, r0);
  case 9:
    r0 = pxsim_ImageMethods.width(s.i___16066);
    s.minX___16069 = (r0);
    s.lastBrkId = 1175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1175]) return breakpoint(s, 10, 1175, r0);
  case 10:
    r0 = pxsim_ImageMethods.height(s.i___16066);
    s.minY___16072 = (r0);
    s.lastBrkId = 1176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1176]) return breakpoint(s, 11, 1176, r0);
  case 11:
    s.maxX___16075 = (0);
    s.lastBrkId = 1177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1177]) return breakpoint(s, 12, 1177, r0);
  case 12:
    s.maxY___16076 = (0);
    s.lastBrkId = 1178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1178]) return breakpoint(s, 13, 1178, r0);
  case 13:
    s.c___16077 = (0);
    s.lastBrkId = 1179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1179]) return breakpoint(s, 14, 1179, r0);
  case 14:
  case 1:
    s.lastBrkId = 1180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1180]) return breakpoint(s, 15, 1180, r0);
  case 15:
    s.tmp_1 = r0 = s.c___16077;
    r0 = pxsim_ImageMethods.width(s.i___16066);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1181]) return breakpoint(s, 16, 1181, r0);
  case 16:
    s.r___16083 = (0);
    s.lastBrkId = 1182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1182]) return breakpoint(s, 17, 1182, r0);
  case 17:
  case 2:
    s.lastBrkId = 1183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1183]) return breakpoint(s, 18, 1183, r0);
  case 18:
    s.tmp_1 = r0 = s.r___16083;
    r0 = pxsim_ImageMethods.height(s.i___16066);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1184]) return breakpoint(s, 19, 1184, r0);
  case 19:
    r0 = pxsim_ImageMethods.getPixel(s.i___16066, s.c___16077, s.r___16083);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1185]) return breakpoint(s, 20, 1185, r0);
  case 20:
    s.tmp_4 = Math_min__P126_mk(s);
    s.tmp_4.arg0 = s.minX___16069;
    s.tmp_4.arg1 = s.c___16077;
    s.callLocIdx = 262; s.pc = 21; return s.tmp_4;
  case 21:
    r0 = s.retval;
    s.minX___16069 = (r0);
    s.lastBrkId = 1186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1186]) return breakpoint(s, 22, 1186, r0);
  case 22:
    s.tmp_0 = Math_min__P126_mk(s);
    s.tmp_0.arg0 = s.minY___16072;
    s.tmp_0.arg1 = s.r___16083;
    s.callLocIdx = 263; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.minY___16072 = (r0);
    s.lastBrkId = 1187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1187]) return breakpoint(s, 24, 1187, r0);
  case 24:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = s.maxX___16075;
    s.tmp_0.arg1 = s.c___16077;
    s.callLocIdx = 264; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.maxX___16075 = (r0);
    s.lastBrkId = 1188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1188]) return breakpoint(s, 26, 1188, r0);
  case 26:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = s.maxY___16076;
    s.tmp_0.arg1 = s.r___16083;
    s.callLocIdx = 265; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.maxY___16076 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 1189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1189]) return breakpoint(s, 28, 1189, r0);
  case 28:
    r0 = (s.r___16083 + 1);
    s.r___16083 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 1190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1190]) return breakpoint(s, 29, 1190, r0);
  case 29:
    r0 = (s.c___16077 + 1);
    s.c___16077 = (r0);
    { step = 1; continue; }
  case 6:
    s.lastBrkId = 1191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1191]) return breakpoint(s, 30, 1191, r0);
  case 30:
    r0 = (s.maxX___16075 - s.minX___16069);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.width___16114 = (r0);
    s.lastBrkId = 1192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1192]) return breakpoint(s, 31, 1192, r0);
  case 31:
    r0 = (s.maxY___16076 - s.minY___16072);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.height___16120 = (r0);
    s.lastBrkId = 1193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1193]) return breakpoint(s, 32, 1193, r0);
  case 32:
    r0 = pxsim_pxtcore_mkClassInstance(game_Hitbox__C1959_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Hitbox_constructor__P1965_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.width___16114;
    s.tmp_1.arg3 = s.height___16120;
    s.tmp_1.arg4 = s.minX___16069;
    s.tmp_1.arg5 = s.minY___16072;
    s.callLocIdx = 266; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
game_calculateHitBox__P1970.info = {"start":894,"length":684,"line":40,"column":4,"endLine":62,"endColumn":5,"fileName":"pxt_modules/game/hitbox.ts","functionName":"calculateHitBox","argumentNames":["s"]}

function game_calculateHitBox__P1970_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_calculateHitBox__P1970, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___16066: undefined,
  minX___16069: undefined,
  minY___16072: undefined,
  maxX___16075: undefined,
  maxY___16076: undefined,
  c___16077: undefined,
  r___16083: undefined,
  width___16114: undefined,
  height___16120: undefined,
  arg0: undefined,
} }





function Sprite_image__P2055(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1265]) return breakpoint(s, 1, 1265, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_image__P2055.info = {"start":6549,"length":54,"line":242,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"image","argumentNames":["this"]}
Sprite_image__P2055.isGetter = true;

function Sprite_image__P2055_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_image__P2055, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_Hitbox_constructor__P1965(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1959_VT)) failedCast(r0);
    s.lastBrkId = 1164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1164]) return breakpoint(s, 1, 1164, r0);
  case 1:
    r0 = (s.arg0).fields["parent"] = (s.arg1);
    s.lastBrkId = 1165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1165]) return breakpoint(s, 2, 1165, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 249; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["width"] = (s.tmp_1);
    s.lastBrkId = 1166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1166]) return breakpoint(s, 4, 1166, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg3;
    s.callLocIdx = 250; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["height"] = (s.tmp_1);
    s.lastBrkId = 1167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1167]) return breakpoint(s, 6, 1167, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg4;
    s.callLocIdx = 251; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ox"] = (s.tmp_1);
    s.lastBrkId = 1168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1168]) return breakpoint(s, 8, 1168, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg5;
    s.callLocIdx = 252; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["oy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_constructor__P1965.info = {"start":151,"length":266,"line":8,"column":8,"endLine":14,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"inline","argumentNames":["this","parent","width","height","ox","oy"]}

function game_Hitbox_constructor__P1965_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_constructor__P1965, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Fx_abs__P160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[263]) return breakpoint(s, 4, 263, r0);
  case 4:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[264]) return breakpoint(s, 5, 264, r0);
  case 5:
    r0 = (0 - s.arg0);
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[265]) return breakpoint(s, 6, 265, r0);
  case 6:
    r0 = s.arg0;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_abs__P160.info = {"start":1506,"length":164,"line":44,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"abs","argumentNames":["a"]}

function Fx_abs__P160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_abs__P160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_sub__P154(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[257]) return breakpoint(s, 1, 257, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_sub__P154.info = {"start":749,"length":118,"line":26,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"sub","argumentNames":["a","b"]}

function Fx_sub__P154_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_sub__P154, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_follow__P2089(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sc___15129 = undefined;
    s.lastTime___15138 = undefined;
    s.fs___15281 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1419]) return breakpoint(s, 14, 1419, r0);
  case 14:
    r0 = (s.arg1 === s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1420]) return breakpoint(s, 15, 1420, r0);
  case 15:
    { step = 13; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1421]) return breakpoint(s, 16, 1421, r0);
  case 16:
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 462; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.sc___15129 = (r0);
    s.lastBrkId = 1422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1422]) return breakpoint(s, 18, 1422, r0);
  case 18:
    r0 = s.sc___15129.fields["followingSprites"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1423]) return breakpoint(s, 19, 1423, r0);
  case 19:
    s.tmp_3 = r0 = s.sc___15129;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["followingSprites"] = (s.tmp_4);
    r0 = pxsim_pxtrt.mklocRef();
    s.lastTime___15138 = (r0);
    s.lastBrkId = 1424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1424]) return breakpoint(s, 20, 1424, r0);
  case 20:
    s.tmp_0 = r0 = s.lastTime___15138;
    s.tmp_2 = game_runtime__P2548_mk(s);
    s.callLocIdx = 463; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1425]) return breakpoint(s, 22, 1425, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(2, inline__P15144);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.lastTime___15138);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.sc___15129);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    r0 = s.sc___15129.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 14;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 489; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1456]) return breakpoint(s, 24, 1456, r0);
  case 24:
    r0 = pxsim_pxtcore_mkAction(1, inline__P15283);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFind__P109_mk(s);
    r0 = s.sc___15129.fields["followingSprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 490; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.fs___15281 = (r0);
    s.lastBrkId = 1457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1457]) return breakpoint(s, 26, 1457, r0);
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1458]) return breakpoint(s, 27, 1458, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.fs___15281);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1459]) return breakpoint(s, 28, 1459, r0);
  case 28:
    r0 = s.sc___15129.fields["followingSprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_4, s.fs___15281);
    s.lastBrkId = 1460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1460]) return breakpoint(s, 29, 1460, r0);
  case 29:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 491; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 1461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1461]) return breakpoint(s, 31, 1461, r0);
  case 31:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 492; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
  case 7:
  case 8:
    { step = 12; continue; }
  case 9:
    s.lastBrkId = 1462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1462]) return breakpoint(s, 33, 1462, r0);
  case 33:
    r0 = pxsim_numops_toBoolDecr(s.fs___15281);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1463]) return breakpoint(s, 34, 1463, r0);
  case 34:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_FollowingSprite__C1972_VT);
    s.tmp_2 = r0;
    s.tmp_3 = sprites_FollowingSprite_constructor__P1973_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = s.arg0;
    s.tmp_3.arg2 = s.arg1;
    s.tmp_3.arg3 = s.arg2;
    s.tmp_3.arg4 = s.arg3;
    s.callLocIdx = 493; s.pc = 35; return s.tmp_3;
  case 35:
    r0 = s.retval;
    r0 = s.sc___15129.fields["followingSprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.tmp_2);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 1464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1464]) return breakpoint(s, 36, 1464, r0);
  case 36:
    r0 = (s.fs___15281).fields["target"] = (s.arg1);
    s.lastBrkId = 1465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1465]) return breakpoint(s, 37, 1465, r0);
  case 37:
    r0 = (s.fs___15281).fields["rate"] = (s.arg2);
    s.lastBrkId = 1466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1466]) return breakpoint(s, 38, 1466, r0);
  case 38:
    r0 = (s.fs___15281).fields["turnRate"] = (s.arg3);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_follow__P2089.info = {"start":30060,"length":3128,"line":899,"column":4,"endLine":978,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"follow","argumentNames":["this","target","speed","turnRate"]}

function Sprite_follow__P2089_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_follow__P2089, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sc___15129: undefined,
  lastTime___15138: undefined,
  fs___15281: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P15144(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currTime___15145 = undefined;
    s.timeDiff___15148 = undefined;
    s.destroyedSprites___15154 = undefined;
    s.lastBrkId = 1426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1426]) return breakpoint(s, 3, 1426, r0);
  case 3:
    s.tmp_0 = game_runtime__P2548_mk(s);
    s.callLocIdx = 464; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.currTime___15145 = (r0);
    s.lastBrkId = 1427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1427]) return breakpoint(s, 5, 1427, r0);
  case 5:
    s.tmp_1 = r0 = s.currTime___15145;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    s.timeDiff___15148 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.destroyedSprites___15154 = (r0);
    s.lastBrkId = 1428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1428]) return breakpoint(s, 6, 1428, r0);
  case 6:
    r0 = pxsim_pxtrt_stlocRef(s.destroyedSprites___15154, false);
    s.lastBrkId = 1429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1429]) return breakpoint(s, 7, 1429, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(2, inline__P15158);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.destroyedSprites___15154);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.timeDiff___15148);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    r0 = s.caps[1].fields["followingSprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 487; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1453]) return breakpoint(s, 9, 1453, r0);
  case 9:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], s.currTime___15145);
    s.lastBrkId = 1454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1454]) return breakpoint(s, 10, 1454, r0);
  case 10:
    r0 = pxsim_pxtrt_ldlocRef(s.destroyedSprites___15154);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1455]) return breakpoint(s, 11, 1455, r0);
  case 11:
    s.tmp_1 = r0 = s.caps[1];
    s.tmp_3 = helpers_arrayFilter__P108_mk(s);
    r0 = s.caps[1].fields["followingSprites"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = inline__P15265;
    s.callLocIdx = 488; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["followingSprites"] = (s.tmp_2);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P15144.info = {"start":30389,"length":2197,"line":907,"column":79,"endLine":955,"endColumn":13,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":[]}

function inline__P15144_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15144, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currTime___15145: undefined,
  timeDiff___15148: undefined,
  destroyedSprites___15154: undefined,
} }





function inline__P15158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.target___15161 = undefined;
    s.self___15162 = undefined;
    s.turnRate___15163 = undefined;
    s.rate___15164 = undefined;
    s.dx___15178 = undefined;
    s.dy___15184 = undefined;
    s.maxMomentumDiff___15203 = undefined;
    s.angleToTarget___15210 = undefined;
    s.targetTrajectoryVx___15215 = undefined;
    s.targetTrajectoryVy___15221 = undefined;
    s.diffVx___15227 = undefined;
    s.diffVy___15232 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1430]) return breakpoint(s, 8, 1430, r0);
  case 8:
    s.tmp_0 = if_target_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "target");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["target"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["target"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 465; s.pc = 9; return s.tmp_0; }
    }
  case 9:
    r0 = s.retval;
    s.target___15161 = (r0);
    s.lastBrkId = 1431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1431]) return breakpoint(s, 10, 1431, r0);
  case 10:
    s.tmp_2 = if_self_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "self");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["self"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["self"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 466; s.pc = 11; return s.tmp_2; }
    }
  case 11:
    r0 = s.retval;
    s.self___15162 = (r0);
    s.lastBrkId = 1432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1432]) return breakpoint(s, 12, 1432, r0);
  case 12:
    s.tmp_3 = if_turnRate_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "turnRate");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["turnRate"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["turnRate"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 467; s.pc = 13; return s.tmp_3; }
    }
  case 13:
    r0 = s.retval;
    s.turnRate___15163 = (r0);
    s.lastBrkId = 1433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1433]) return breakpoint(s, 14, 1433, r0);
  case 14:
    s.tmp_4 = if_rate_1_mk(s);
    s.tmp_4.arg0 = s.tmp_1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "rate");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["rate"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["rate"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 468; s.pc = 15; return s.tmp_4; }
    }
  case 15:
    r0 = s.retval;
    s.rate___15164 = (r0);
    s.lastBrkId = 1434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1434]) return breakpoint(s, 16, 1434, r0);
  case 16:
    r0 = s.self___15162.fields["flags"];
    s.tmp_2 = r0;
    r0 = s.target___15161.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 | s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1435]) return breakpoint(s, 17, 1435, r0);
  case 17:
    s.tmp_4 = Sprite_vx__P2030_mk(s);
    s.tmp_4.arg0 = s.self___15162;
    s.tmp_4.arg1 = 0;
    s.callLocIdx = 469; s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1436]) return breakpoint(s, 19, 1436, r0);
  case 19:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.self___15162;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 470; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1437]) return breakpoint(s, 21, 1437, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], true);
    s.lastBrkId = 1438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1438]) return breakpoint(s, 22, 1438, r0);
  case 22:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1439]) return breakpoint(s, 23, 1439, r0);
  case 23:
    s.tmp_1 = Sprite_x__P2025_mk(s);
    s.tmp_1.arg0 = s.target___15161;
    s.callLocIdx = 471; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_x__P2025_mk(s);
    s.tmp_3.arg0 = s.self___15162;
    s.callLocIdx = 472; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 - s.tmp_2);
    s.dx___15178 = (r0);
    s.lastBrkId = 1440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1440]) return breakpoint(s, 26, 1440, r0);
  case 26:
    s.tmp_1 = Sprite_y__P2027_mk(s);
    s.tmp_1.arg0 = s.target___15161;
    s.callLocIdx = 473; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_y__P2027_mk(s);
    s.tmp_3.arg0 = s.self___15162;
    s.callLocIdx = 474; s.pc = 28; return s.tmp_3;
  case 28:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 - s.tmp_2);
    s.dy___15184 = (r0);
    s.lastBrkId = 1441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1441]) return breakpoint(s, 29, 1441, r0);
  case 29:
    s.tmp_2 = Math_abs__P123_mk(s);
    s.tmp_2.arg0 = s.dx___15178;
    s.callLocIdx = 475; s.pc = 30; return s.tmp_2;
  case 30:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_4 = Math_abs__P123_mk(s);
    s.tmp_4.arg0 = s.dy___15184;
    s.callLocIdx = 476; s.pc = 31; return s.tmp_4;
  case 31:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 < 2);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1442]) return breakpoint(s, 32, 1442, r0);
  case 32:
    s.tmp_6 = Sprite_vx__P2030_mk(s);
    s.tmp_6.arg0 = s.self___15162;
    s.tmp_6.arg1 = 0;
    s.callLocIdx = 477; s.pc = 33; return s.tmp_6;
  case 33:
    r0 = s.retval;
    s.lastBrkId = 1443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1443]) return breakpoint(s, 34, 1443, r0);
  case 34:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.self___15162;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 478; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.lastBrkId = 1444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1444]) return breakpoint(s, 36, 1444, r0);
  case 36:
    { step = 7; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1445]) return breakpoint(s, 37, 1445, r0);
  case 37:
    r0 = (s.caps[1] * s.turnRate___15163);
    s.tmp_0 = r0;
    r0 = (s.rate___15164 / 50);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.maxMomentumDiff___15203 = (r0);
    s.lastBrkId = 1446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1446]) return breakpoint(s, 38, 1446, r0);
  case 38:
    r0 = pxsim.Math_.atan2(s.dy___15184, s.dx___15178);
    s.angleToTarget___15210 = (r0);
    s.lastBrkId = 1447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1447]) return breakpoint(s, 39, 1447, r0);
  case 39:
    r0 = pxsim.Math_.cos(s.angleToTarget___15210);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.rate___15164);
    s.targetTrajectoryVx___15215 = (r0);
    s.lastBrkId = 1448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1448]) return breakpoint(s, 40, 1448, r0);
  case 40:
    r0 = pxsim.Math_.sin(s.angleToTarget___15210);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.rate___15164);
    s.targetTrajectoryVy___15221 = (r0);
    s.lastBrkId = 1449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1449]) return breakpoint(s, 41, 1449, r0);
  case 41:
    s.tmp_0 = r0 = s.targetTrajectoryVx___15215;
    s.tmp_2 = Sprite_vx__P2029_mk(s);
    s.tmp_2.arg0 = s.self___15162;
    s.callLocIdx = 479; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.diffVx___15227 = (r0);
    s.lastBrkId = 1450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1450]) return breakpoint(s, 43, 1450, r0);
  case 43:
    s.tmp_0 = r0 = s.targetTrajectoryVy___15221;
    s.tmp_2 = Sprite_vy__P2031_mk(s);
    s.tmp_2.arg0 = s.self___15162;
    s.callLocIdx = 480; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.diffVy___15232 = (r0);
    s.lastBrkId = 1451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1451]) return breakpoint(s, 45, 1451, r0);
  case 45:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_1 = r0 = s.self___15162;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Sprite_vx__P2029_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 482; s.pc = 47; return s.tmp_3;
  case 47:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = Math_clamp__P122_mk(s);
    r0 = (0 - s.maxMomentumDiff___15203);
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.maxMomentumDiff___15203;
    s.tmp_5.arg2 = s.diffVx___15227;
    s.callLocIdx = 481; s.pc = 48; return s.tmp_5;
  case 48:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 483; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    s.lastBrkId = 1452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1452]) return breakpoint(s, 49, 1452, r0);
  case 49:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_1 = r0 = s.self___15162;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Sprite_vy__P2031_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 485; s.pc = 51; return s.tmp_3;
  case 51:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = Math_clamp__P122_mk(s);
    r0 = (0 - s.maxMomentumDiff___15203);
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.maxMomentumDiff___15203;
    s.tmp_5.arg2 = s.diffVy___15232;
    s.callLocIdx = 484; s.pc = 52; return s.tmp_5;
  case 52:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 486; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P15158.info = {"start":30600,"length":1635,"line":912,"column":44,"endLine":946,"endColumn":17,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["fs"]}

function inline__P15158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  target___15161: undefined,
  self___15162: undefined,
  turnRate___15163: undefined,
  rate___15164: undefined,
  dx___15178: undefined,
  dy___15184: undefined,
  maxMomentumDiff___15203: undefined,
  angleToTarget___15210: undefined,
  targetTrajectoryVx___15215: undefined,
  targetTrajectoryVy___15221: undefined,
  diffVx___15227: undefined,
  diffVy___15232: undefined,
  arg0: undefined,
} }





function inline__P15265(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["self"];
    r0 = r0.fields["flags"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["target"];
    r0 = r0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 | s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P15265.info = {"start":32485,"length":67,"line":953,"column":32,"endLine":953,"endColumn":99,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["fs"]}

function inline__P15265_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15265, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function inline__P15283(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["self"];
    r0 = r0.fields["id"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["id"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P15283.info = {"start":32644,"length":27,"line":958,"column":44,"endLine":958,"endColumn":71,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["fs"]}

function inline__P15283_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15283, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_runtime__P2548(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2727]) return breakpoint(s, 1, 2727, r0);
  case 1:
    s.tmp_0 = scene_Scene_millis__P2443_mk(s);
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1140; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1141; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
game_runtime__P2548.info = {"start":10291,"length":81,"line":332,"column":4,"endLine":334,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"runtime","argumentNames":[]}

function game_runtime__P2548_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_runtime__P2548, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_Scene_millis__P2443(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    s.lastBrkId = 2488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2488]) return breakpoint(s, 1, 2488, r0);
  case 1:
    r0 = s.arg0.fields["_millis"];
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_millis__P2443.info = {"start":6788,"length":61,"line":189,"column":8,"endLine":191,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"millis","argumentNames":["this"]}

function scene_Scene_millis__P2443_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_millis__P2443, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_FollowingSprite_constructor__P1973(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_FollowingSprite__C1972_VT)) failedCast(r0);
    r0 = (s.arg0).fields["self"] = (s.arg1);
    r0 = (s.arg0).fields["target"] = (s.arg2);
    r0 = (s.arg0).fields["rate"] = (s.arg3);
    r0 = (s.arg0).fields["turnRate"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_FollowingSprite_constructor__P1973.info = {"start":401,"length":163,"line":18,"column":8,"endLine":23,"endColumn":13,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["this","self","target","rate","turnRate"]}

function sprites_FollowingSprite_constructor__P1973_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_FollowingSprite_constructor__P1973, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_arrayFind__P109(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___14365 = undefined;
    s.i___14368 = undefined;
    s.v___14373 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[126]) return breakpoint(s, 6, 126, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___14365 = (r0);
    s.lastBrkId = 127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[127]) return breakpoint(s, 7, 127, r0);
  case 7:
    s.i___14368 = (0);
    s.lastBrkId = 128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[128]) return breakpoint(s, 8, 128, r0);
  case 8:
  case 1:
    s.lastBrkId = 129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[129]) return breakpoint(s, 9, 129, r0);
  case 9:
    r0 = (s.i___14368 < s.len___14365);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[130]) return breakpoint(s, 10, 130, r0);
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___14368);
    s.v___14373 = (r0);
    s.lastBrkId = 131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[131]) return breakpoint(s, 11, 131, r0);
  case 11:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___14373;
    s.tmp_1.arg1 = s.i___14368;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 8; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[132]) return breakpoint(s, 13, 132, r0);
  case 13:
    r0 = s.v___14373;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[133]) return breakpoint(s, 14, 133, r0);
  case 14:
    r0 = (s.i___14368 + 1);
    s.i___14368 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[134]) return breakpoint(s, 15, 134, r0);
  case 15:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFind__P109.info = {"start":8018,"length":292,"line":271,"column":4,"endLine":278,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFind","argumentNames":["arr","callbackfn"]}

function helpers_arrayFind__P109_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFind__P109, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___14365: undefined,
  i___14368: undefined,
  v___14373: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function animation_stopAnimation__P3510(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___14530 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3404]) return breakpoint(s, 5, 3404, r0);
  case 5:
    s.tmp_1 = scene_Scene_data__P2442_mk(s);
    s.tmp_2 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1545; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1546; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_0, globals.stateNamespace___5683);
    s.state___14530 = (r0);
    s.lastBrkId = 3405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3405]) return breakpoint(s, 8, 3405, r0);
  case 8:
    s.tmp_0 = r0 = s.state___14530;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = if_animations_1_mk(s);
    s.tmp_1.arg0 = s.state___14530;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "animations");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["animations"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["animations"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1547; s.pc = 9; return s.tmp_1; }
    }
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3406]) return breakpoint(s, 10, 3406, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(2, inline__P14545);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_3, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_3, 1, s.arg0);
    s.tmp_4 = if_animations_2_mk(s);
    s.tmp_4.arg0 = s.state___14530;
    s.tmp_5 = helpers_arrayFilter__P108_mk(s);
    s.tmp_6 = if_animations_1_mk(s);
    s.tmp_6.arg0 = s.state___14530;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "animations");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["animations"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["animations"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1548; s.pc = 13; return s.tmp_6; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tmp_3;
    s.callLocIdx = 1549; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_4.arg0, "animations", s.tmp_4.arg1);
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["set/animations"];
      if (s.tmp_4.fn === null) { s.tmp_4.arg0.fields["animations"] = s.tmp_4.arg1; }
      else if (s.tmp_4.fn === undefined) { failedCast(s.tmp_4.arg0) } 
     else { s.callLocIdx = 1550; s.pc = 11; return s.tmp_4; }
    }
  case 11:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_stopAnimation__P3510.info = {"start":21200,"length":898,"line":546,"column":4,"endLine":565,"endColumn":5,"fileName":"pxt_modules/animation/animation.ts","functionName":"stopAnimation","argumentNames":["type","sprite"]}

function animation_stopAnimation__P3510_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_stopAnimation__P3510, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  state___14530: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P14545(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3407]) return breakpoint(s, 12, 3407, r0);
  case 12:
    r0 = s.arg0.fields["sprite"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3408]) return breakpoint(s, 13, 3408, r0);
  case 13:
    s.tmp_2 = r0 = s.caps[1];
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_2);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_2);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_2;
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 3409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3409]) return breakpoint(s, 14, 3409, r0);
  case 14:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_ImageAnimation__C3498_VT);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3410]) return breakpoint(s, 15, 3410, r0);
  case 15:
    r0 = false;
    { step = 11; continue; }
  case 2:
  case 3:
    s.lastBrkId = 3411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3411]) return breakpoint(s, 16, 3411, r0);
  case 16:
    { step = 8; continue; }
  case 4:
    s.lastBrkId = 3412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3412]) return breakpoint(s, 17, 3412, r0);
  case 17:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_MovementAnimation__C3501_VT);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3413]) return breakpoint(s, 18, 3413, r0);
  case 18:
    r0 = false;
    { step = 11; continue; }
  case 5:
  case 6:
    s.lastBrkId = 3414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3414]) return breakpoint(s, 19, 3414, r0);
  case 19:
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 3415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3415]) return breakpoint(s, 20, 3415, r0);
  case 20:
    r0 = false;
    { step = 11; continue; }
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 3416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3416]) return breakpoint(s, 21, 3416, r0);
  case 21:
    r0 = true;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
inline__P14545.info = {"start":21444,"length":636,"line":549,"column":55,"endLine":563,"endColumn":13,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["anim"]}

function inline__P14545_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14545, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function scene_Scene_data__P2442(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    s.lastBrkId = 2487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2487]) return breakpoint(s, 1, 2487, r0);
  case 1:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Scene_data__P2442.info = {"start":6655,"length":53,"line":182,"column":8,"endLine":184,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"data","argumentNames":["this"]}
scene_Scene_data__P2442.isGetter = true;

function scene_Scene_data__P2442_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_data__P2442, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function info_changeScoreBy__P2207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1946]) return breakpoint(s, 1, 1946, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_changeScoreBy__P2243_mk(s);
    s.tmp_0.arg0 = globals.player1___2257;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 822; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_changeScoreBy__P2207.info = {"start":7694,"length":90,"line":263,"column":4,"endLine":265,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"changeScoreBy","argumentNames":["value"]}

function info_changeScoreBy__P2207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_changeScoreBy__P2207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_constructor__P2238(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 1977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1977]) return breakpoint(s, 17, 1977, r0);
  case 17:
    r0 = (s.arg0).fields["_player"] = (s.arg1);
    s.lastBrkId = 1978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1978]) return breakpoint(s, 18, 1978, r0);
  case 18:
    r0 = (s.arg0).fields["border"] = (1);
    s.lastBrkId = 1979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1979]) return breakpoint(s, 19, 1979, r0);
  case 19:
    r0 = (s.arg0).fields["fc"] = (1);
    s.lastBrkId = 1980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1980]) return breakpoint(s, 20, 1980, r0);
  case 20:
    r0 = (s.arg0).fields["visilibity"] = (0);
    s.lastBrkId = 1981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1981]) return breakpoint(s, 21, 1981, r0);
  case 21:
    r0 = (s.arg0).fields["showScore"] = (undefined);
    s.lastBrkId = 1982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1982]) return breakpoint(s, 22, 1982, r0);
  case 22:
    r0 = (s.arg0).fields["showLife"] = (undefined);
    s.lastBrkId = 1983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1983]) return breakpoint(s, 23, 1983, r0);
  case 23:
    r0 = (s.arg0).fields["showPlayer"] = (undefined);
    s.lastBrkId = 1984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1984]) return breakpoint(s, 24, 1984, r0);
  case 24:
    r0 = (s.arg0).fields["left"] = (undefined);
    s.lastBrkId = 1985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1985]) return breakpoint(s, 25, 1985, r0);
  case 25:
    r0 = (s.arg0).fields["up"] = (undefined);
    s.lastBrkId = 1986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1986]) return breakpoint(s, 26, 1986, r0);
  case 26:
    r0 = s.arg0.fields["_player"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1987]) return breakpoint(s, 27, 1987, r0);
  case 27:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_3);
    s.lastBrkId = 1988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1988]) return breakpoint(s, 28, 1988, r0);
  case 28:
    r0 = (s.arg0).fields["x"] = (0);
    s.lastBrkId = 1989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1989]) return breakpoint(s, 29, 1989, r0);
  case 29:
    r0 = (s.arg0).fields["y"] = (0);
    { step = 14; continue; }
  case 3:
    s.lastBrkId = 1990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1990]) return breakpoint(s, 30, 1990, r0);
  case 30:
    r0 = (s.arg1 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1991]) return breakpoint(s, 31, 1991, r0);
  case 31:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = 0;
    { step = 5; continue; }
  case 4:
    r0 = 8;
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_2);
    s.lastBrkId = 1992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1992]) return breakpoint(s, 32, 1992, r0);
  case 32:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.lastBrkId = 1993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1993]) return breakpoint(s, 33, 1993, r0);
  case 33:
    r0 = (s.arg0).fields["y"] = (0);
    s.lastBrkId = 1994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1994]) return breakpoint(s, 34, 1994, r0);
  case 34:
    r0 = (s.arg0).fields["left"] = (true);
    { step = 13; continue; }
  case 6:
    s.lastBrkId = 1995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1995]) return breakpoint(s, 35, 1995, r0);
  case 35:
    r0 = (s.arg1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1996]) return breakpoint(s, 36, 1996, r0);
  case 36:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = 0;
    { step = 8; continue; }
  case 7:
    r0 = 4;
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_2);
    s.lastBrkId = 1997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1997]) return breakpoint(s, 37, 1997, r0);
  case 37:
    r0 = (s.arg0).fields["x"] = (0);
    s.lastBrkId = 1998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1998]) return breakpoint(s, 38, 1998, r0);
  case 38:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    s.lastBrkId = 1999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1999]) return breakpoint(s, 39, 1999, r0);
  case 39:
    r0 = (s.arg0).fields["up"] = (true);
    { step = 12; continue; }
  case 9:
    s.lastBrkId = 2000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2000]) return breakpoint(s, 40, 2000, r0);
  case 40:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = 0;
    { step = 11; continue; }
  case 10:
    r0 = 7;
  case 11:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_1);
    s.lastBrkId = 2001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2001]) return breakpoint(s, 41, 2001, r0);
  case 41:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.lastBrkId = 2002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2002]) return breakpoint(s, 42, 2002, r0);
  case 42:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    s.lastBrkId = 2003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2003]) return breakpoint(s, 43, 2003, r0);
  case 43:
    r0 = (s.arg0).fields["left"] = (true);
    s.lastBrkId = 2004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2004]) return breakpoint(s, 44, 2004, r0);
  case 44:
    r0 = (s.arg0).fields["up"] = (true);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 2005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2005]) return breakpoint(s, 45, 2005, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(globals.players___3939);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 2006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2006]) return breakpoint(s, 46, 2006, r0);
  case 46:
    r0 = pxsim_Array__mk();
    globals.players___3939 = (r0);
  case 15:
  case 16:
    s.lastBrkId = 2007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2007]) return breakpoint(s, 47, 2007, r0);
  case 47:
    s.tmp_0 = r0 = globals.players___3939;
    r0 = s.arg0.fields["_player"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_constructor__P2238.info = {"start":15446,"length":1370,"line":515,"column":8,"endLine":552,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["this","player"]}

function info_PlayerInfo_constructor__P2238_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_constructor__P2238, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_PlayerInfo_changeScoreBy__P2243(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2028]) return breakpoint(s, 1, 2028, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_setScore__P2242_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = info_PlayerInfo_score__P2241_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 847; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 848; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_changeScoreBy__P2243.info = {"start":18514,"length":95,"line":612,"column":8,"endLine":614,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"changeScoreBy","argumentNames":["this","value"]}

function info_PlayerInfo_changeScoreBy__P2243_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_changeScoreBy__P2243, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_PlayerInfo_setScore__P2242(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___12514 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2024]) return breakpoint(s, 1, 2024, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 844; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.state___12514 = (r0);
    s.lastBrkId = 2025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2025]) return breakpoint(s, 3, 2025, r0);
  case 3:
    s.tmp_0 = info_updateFlag__P3988_mk(s);
    s.tmp_0.arg0 = 2;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 845; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2026]) return breakpoint(s, 5, 2026, r0);
  case 5:
    s.tmp_0 = info_PlayerInfo_score__P2241_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 846; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2027]) return breakpoint(s, 7, 2027, r0);
  case 7:
    s.tmp_0 = r0 = s.state___12514;
    r0 = (s.arg1 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["score"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_setScore__P2242.info = {"start":18028,"length":220,"line":596,"column":8,"endLine":602,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"setScore","argumentNames":["this","value"]}

function info_PlayerInfo_setScore__P2242_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_setScore__P2242, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  state___12514: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_updateFlag__P3988(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1949]) return breakpoint(s, 3, 1949, r0);
  case 3:
    s.tmp_0 = info_initHUD__P3984_mk(s);
    s.callLocIdx = 825; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 1950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1950]) return breakpoint(s, 5, 1950, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1951]) return breakpoint(s, 6, 1951, r0);
  case 6:
    s.tmp_0 = r0 = globals.infoState___3938;
    r0 = s.tmp_0.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["visibilityFlag"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1952]) return breakpoint(s, 7, 1952, r0);
  case 7:
    s.tmp_0 = r0 = globals.infoState___3938;
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | s.arg0);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["visibilityFlag"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_updateFlag__P3988.info = {"start":11455,"length":204,"line":393,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"updateFlag","argumentNames":["flag","on"]}

function info_updateFlag__P3988_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_updateFlag__P3988, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_initHUD__P3984(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1901]) return breakpoint(s, 4, 1901, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.infoState___3938);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1902]) return breakpoint(s, 5, 1902, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1903]) return breakpoint(s, 6, 1903, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(info_InfoState__C3935_VT);
    s.tmp_0 = r0;
    s.tmp_1 = info_InfoState_constructor__P3936_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 796; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    globals.infoState___3938 = (s.tmp_0);
    s.lastBrkId = 1904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1904]) return breakpoint(s, 8, 1904, r0);
  case 8:
    s.tmp_0 = scene_createRenderable__P2383_mk(s);
    s.tmp_0.arg0 = 100;
    s.tmp_0.arg1 = inline__P6262;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 812; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initHUD__P3984.info = {"start":2595,"length":2080,"line":97,"column":4,"endLine":147,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"initHUD","argumentNames":[]}

function info_initHUD__P3984_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initHUD__P3984, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function inline__P6262(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ps___6271 = undefined;
    s.p___6292 = undefined;
    s.scene___6326 = undefined;
    s.elapsed___6329 = undefined;
    s.t___6337 = undefined;
    s.lastBrkId = 1905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1905]) return breakpoint(s, 24, 1905, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(globals.infoState___3938);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1906]) return breakpoint(s, 25, 1906, r0);
  case 25:
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1907]) return breakpoint(s, 26, 1907, r0);
  case 26:
    s.lastBrkId = 1908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1908]) return breakpoint(s, 27, 1908, r0);
  case 27:
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1909]) return breakpoint(s, 28, 1909, r0);
  case 28:
    s.tmp_2 = helpers_arrayFilter__P108_mk(s);
    s.tmp_2.arg0 = globals.players___3939;
    s.tmp_2.arg1 = inline__P6273;
    s.callLocIdx = 797; s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
    s.ps___6271 = (r0);
    s.lastBrkId = 1910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1910]) return breakpoint(s, 30, 1910, r0);
  case 30:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_0.arg0 = s.ps___6271;
    s.tmp_0.arg1 = inline__P6282;
    s.callLocIdx = 799; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 1911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1911]) return breakpoint(s, 32, 1911, r0);
  case 32:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_0.arg0 = s.ps___6271;
    s.tmp_0.arg1 = inline__P6288;
    s.callLocIdx = 801; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    { step = 12; continue; }
  case 3:
    s.lastBrkId = 1912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1912]) return breakpoint(s, 34, 1912, r0);
  case 34:
    s.p___6292 = (globals.player1___2257);
    s.lastBrkId = 1913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1913]) return breakpoint(s, 35, 1913, r0);
  case 35:
    s.tmp_1 = info_PlayerInfo_hasScore__P2244_mk(s);
    s.tmp_1.arg0 = s.p___6292;
    s.callLocIdx = 802; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1914]) return breakpoint(s, 37, 1914, r0);
  case 37:
    s.tmp_4 = info_PlayerInfo_drawScore__P2252_mk(s);
    s.tmp_4.arg0 = s.p___6292;
    s.callLocIdx = 803; s.pc = 38; return s.tmp_4;
  case 38:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 1915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1915]) return breakpoint(s, 39, 1915, r0);
  case 39:
    s.tmp_1 = info_PlayerInfo_hasLife__P2248_mk(s);
    s.tmp_1.arg0 = s.p___6292;
    s.callLocIdx = 804; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_0;
    { step = 9; continue; }
  case 8:
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 4);
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1916]) return breakpoint(s, 41, 1916, r0);
  case 41:
    s.tmp_4 = info_PlayerInfo_drawLives__P2253_mk(s);
    s.tmp_4.arg0 = s.p___6292;
    s.callLocIdx = 805; s.pc = 42; return s.tmp_4;
  case 42:
    r0 = s.retval;
  case 10:
  case 11:
    s.lastBrkId = 1917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1917]) return breakpoint(s, 43, 1917, r0);
  case 43:
    s.tmp_0 = info_PlayerInfo_raiseLifeZero__P2250_mk(s);
    s.tmp_0.arg0 = s.p___6292;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 806; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
  case 12:
    s.lastBrkId = 1918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1918]) return breakpoint(s, 45, 1918, r0);
  case 45:
    r0 = globals.infoState___3938.fields["gameEnd"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = s.tmp_0;
    { step = 14; continue; }
  case 13:
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 1);
  case 14:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1919]) return breakpoint(s, 46, 1919, r0);
  case 46:
    s.tmp_4 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 807; s.pc = 47; return s.tmp_4;
  case 47:
    r0 = s.retval;
    s.scene___6326 = (r0);
    s.lastBrkId = 1920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1920]) return breakpoint(s, 48, 1920, r0);
  case 48:
    r0 = globals.infoState___3938.fields["gameEnd"];
    s.tmp_0 = r0;
    s.tmp_2 = scene_Scene_millis__P2443_mk(s);
    s.tmp_2.arg0 = s.scene___6326;
    s.callLocIdx = 808; s.pc = 49; return s.tmp_2;
  case 49:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.elapsed___6329 = (r0);
    s.lastBrkId = 1921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1921]) return breakpoint(s, 50, 1921, r0);
  case 50:
    s.tmp_0 = info_drawTimer__P3989_mk(s);
    s.tmp_0.arg0 = s.elapsed___6329;
    s.callLocIdx = 809; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.lastBrkId = 1922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1922]) return breakpoint(s, 52, 1922, r0);
  case 52:
    r0 = (s.elapsed___6329 / 1000);
    s.t___6337 = (r0);
    s.lastBrkId = 1923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1923]) return breakpoint(s, 53, 1923, r0);
  case 53:
    r0 = (s.t___6337 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 1924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1924]) return breakpoint(s, 54, 1924, r0);
  case 54:
    s.t___6337 = (0);
    s.lastBrkId = 1925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1925]) return breakpoint(s, 55, 1925, r0);
  case 55:
    r0 = globals.infoState___3938.fields["countdownExpired"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1926]) return breakpoint(s, 56, 1926, r0);
  case 56:
    r0 = (globals.infoState___3938).fields["countdownExpired"] = (true);
    s.lastBrkId = 1927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1927]) return breakpoint(s, 57, 1927, r0);
  case 57:
    r0 = (globals.infoState___3938).fields["gameEnd"] = (undefined);
    s.lastBrkId = 1928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1928]) return breakpoint(s, 58, 1928, r0);
  case 58:
    r0 = globals.infoState___3938.fields["countdownEndHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1929]) return breakpoint(s, 59, 1929, r0);
  case 59:
    s.tmp_1 = if_countdownEndHandler_1_mk(s);
    s.tmp_1.arg0 = globals.infoState___3938;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "countdownEndHandler"), 1);
      s.callLocIdx = 810; s.pc = 60; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["countdownEndHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["countdownEndHandler"], 1); s.callLocIdx = 810; s.pc = 60; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 810; s.pc = 60; return s.tmp_1;; }
     else { s.callLocIdx = 810; s.pc = 60; return s.tmp_1; }
    }
  case 60:
    r0 = s.retval;
    { step = 16; continue; }
  case 15:
    s.lastBrkId = 1930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1930]) return breakpoint(s, 61, 1930, r0);
  case 61:
    s.tmp_0 = game_over__P2542_mk(s);
    s.tmp_0.arg0 = false;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 811; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P6262.info = {"start":2755,"length":1903,"line":104,"column":12,"endLine":145,"endColumn":13,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function inline__P6262_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P6262, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ps___6271: undefined,
  p___6292: undefined,
  scene___6326: undefined,
  elapsed___6329: undefined,
  t___6337: undefined,
} }





function inline__P6273(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P6273.info = {"start":3003,"length":8,"line":109,"column":46,"endLine":109,"endColumn":54,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function inline__P6273_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P6273, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P6282(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = info_PlayerInfo_drawPlayer__P2251_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 798; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P6282.info = {"start":3087,"length":19,"line":111,"column":31,"endLine":111,"endColumn":50,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function inline__P6282_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P6282, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P6288(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = info_PlayerInfo_raiseLifeZero__P2250_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 800; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P6288.info = {"start":3189,"length":27,"line":113,"column":31,"endLine":113,"endColumn":58,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function inline__P6288_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P6288, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_drawTimer__P3989(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.font___11647 = undefined;
    s.smallFont___11649 = undefined;
    s.seconds___11651 = undefined;
    s.width___11655 = undefined;
    s.left___11660 = undefined;
    s.color1___11670 = undefined;
    s.color2___11674 = undefined;
    s.temp___11687 = undefined;
    s.remainder___11723 = undefined;
    s.decimalLeft___11742 = undefined;
    s.minutes___11760 = undefined;
    s.remainder___11764 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1953]) return breakpoint(s, 11, 1953, r0);
  case 11:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1954]) return breakpoint(s, 12, 1954, r0);
  case 12:
    s.arg0 = (0);
  case 1:
  case 2:
    s.lastBrkId = 1955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1955]) return breakpoint(s, 13, 1955, r0);
  case 13:
    r0 = (s.arg0 | 0);
    s.arg0 = (r0);
    s.lastBrkId = 1956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1956]) return breakpoint(s, 14, 1956, r0);
  case 14:
    s.font___11647 = (globals.font8___1745);
    s.lastBrkId = 1957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1957]) return breakpoint(s, 15, 1957, r0);
  case 15:
    s.smallFont___11649 = (globals.font5___1750);
    s.lastBrkId = 1958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1958]) return breakpoint(s, 16, 1958, r0);
  case 16:
    r0 = pxsim.Math_.idiv(s.arg0, 1000);
    s.seconds___11651 = (r0);
    s.lastBrkId = 1959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1959]) return breakpoint(s, 17, 1959, r0);
  case 17:
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___11647;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 826; s.pc = 18; return s.tmp_2; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 5);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 2);
    s.width___11655 = (r0);
    s.lastBrkId = 1960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1960]) return breakpoint(s, 19, 1960, r0);
  case 19:
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.width___11655 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.left___11660 = (r0);
    s.lastBrkId = 1961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1961]) return breakpoint(s, 20, 1961, r0);
  case 20:
    r0 = globals.infoState___3938.fields["fontColor"];
    s.color1___11670 = (r0);
    s.lastBrkId = 1962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1962]) return breakpoint(s, 21, 1962, r0);
  case 21:
    r0 = globals.infoState___3938.fields["bgColor"];
    s.color2___11674 = (r0);
    s.lastBrkId = 1963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1963]) return breakpoint(s, 22, 1963, r0);
  case 22:
    r0 = (s.seconds___11651 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (s.seconds___11651 & 1);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_1;
    { step = 6; continue; }
  case 5:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1964]) return breakpoint(s, 23, 1964, r0);
  case 23:
    s.temp___11687 = (s.color1___11670);
    s.lastBrkId = 1965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1965]) return breakpoint(s, 24, 1965, r0);
  case 24:
    s.color1___11670 = (s.color2___11674);
    s.lastBrkId = 1966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1966]) return breakpoint(s, 25, 1966, r0);
  case 25:
    s.color2___11674 = (s.temp___11687);
  case 7:
  case 8:
    s.lastBrkId = 1967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1967]) return breakpoint(s, 26, 1967, r0);
  case 26:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = (s.left___11660 - 3);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = (s.width___11655 + 6);
    s.tmp_0.arg3 = r0;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___11647;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 827; s.pc = 28; return s.tmp_2; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___3938.fields["borderColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 828; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 1968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1968]) return breakpoint(s, 29, 1968, r0);
  case 29:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = (s.left___11660 - 2);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = (s.width___11655 + 4);
    s.tmp_0.arg3 = r0;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___11647;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 829; s.pc = 31; return s.tmp_2; }
    }
  case 31:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.color2___11674;
    s.callLocIdx = 830; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 1969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1969]) return breakpoint(s, 32, 1969, r0);
  case 32:
    r0 = (s.seconds___11651 < 60);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1970]) return breakpoint(s, 33, 1970, r0);
  case 33:
    r0 = (s.arg0 % 1000);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 10);
    s.remainder___11723 = (r0);
    s.lastBrkId = 1971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1971]) return breakpoint(s, 34, 1971, r0);
  case 34:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_3 = info_formatDecimal__P3991_mk(s);
    s.tmp_3.arg0 = s.seconds___11651;
    s.callLocIdx = 831; s.pc = 36; return s.tmp_3;
  case 36:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 37);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 37:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, ".");
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___11660;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = s.color1___11670;
    s.tmp_0.arg5 = s.font___11647;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 832; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.lastBrkId = 1972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1972]) return breakpoint(s, 38, 1972, r0);
  case 38:
    s.tmp_0 = r0 = s.left___11660;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___11647;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 833; s.pc = 39; return s.tmp_3; }
    }
  case 39:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (3 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.decimalLeft___11742 = (r0);
    s.lastBrkId = 1973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1973]) return breakpoint(s, 40, 1973, r0);
  case 40:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_1 = info_formatDecimal__P3991_mk(s);
    s.tmp_1.arg0 = s.remainder___11723;
    s.callLocIdx = 834; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.decimalLeft___11742;
    s.tmp_0.arg3 = 3;
    s.tmp_0.arg4 = s.color1___11670;
    s.tmp_0.arg5 = s.smallFont___11649;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 835; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 1974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1974]) return breakpoint(s, 43, 1974, r0);
  case 43:
    r0 = pxsim.Math_.idiv(s.seconds___11651, 60);
    s.minutes___11760 = (r0);
    s.lastBrkId = 1975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1975]) return breakpoint(s, 44, 1975, r0);
  case 44:
    r0 = (s.seconds___11651 % 60);
    s.remainder___11764 = (r0);
    s.lastBrkId = 1976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1976]) return breakpoint(s, 45, 1976, r0);
  case 45:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_5 = info_formatDecimal__P3991_mk(s);
    s.tmp_5.arg0 = s.minutes___11760;
    s.callLocIdx = 836; s.pc = 47; return s.tmp_5;
  case 47:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 48);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 48:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, ":");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 49);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 49:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_8 = info_formatDecimal__P3991_mk(s);
    s.tmp_8.arg0 = s.remainder___11764;
    s.callLocIdx = 837; s.pc = 50; return s.tmp_8;
  case 50:
    r0 = s.retval;
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 51);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 51:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___11660;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = s.color1___11670;
    s.tmp_0.arg5 = s.font___11647;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 838; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_drawTimer__P3989.info = {"start":13488,"length":1328,"line":462,"column":4,"endLine":497,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"drawTimer","argumentNames":["millis"]}

function info_drawTimer__P3989_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_drawTimer__P3989, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  font___11647: undefined,
  smallFont___11649: undefined,
  seconds___11651: undefined,
  width___11655: undefined,
  left___11660: undefined,
  color1___11670: undefined,
  color2___11674: undefined,
  temp___11687: undefined,
  remainder___11723: undefined,
  decimalLeft___11742: undefined,
  minutes___11760: undefined,
  remainder___11764: undefined,
  arg0: undefined,
} }





function info_formatDecimal__P3991(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2132]) return breakpoint(s, 4, 2132, r0);
  case 4:
    r0 = (s.arg0 | 0);
    s.arg0 = (r0);
    s.lastBrkId = 2133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2133]) return breakpoint(s, 5, 2133, r0);
  case 5:
    r0 = (s.arg0 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2134]) return breakpoint(s, 6, 2134, r0);
  case 6:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("0", s.tmp_1);
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2135]) return breakpoint(s, 8, 2135, r0);
  case 8:
    r0 = pxsim_numops.toString(s.arg0);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
info_formatDecimal__P3991.info = {"start":28426,"length":156,"line":916,"column":4,"endLine":922,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"formatDecimal","argumentNames":["val"]}

function info_formatDecimal__P3991_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_formatDecimal__P3991, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function info_InfoState_constructor__P3936(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_InfoState__C3935_VT)) failedCast(r0);
    s.lastBrkId = 1875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1875]) return breakpoint(s, 7, 1875, r0);
  case 7:
    r0 = (s.arg0).fields["visibilityFlag"] = (8);
    s.lastBrkId = 1876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1876]) return breakpoint(s, 8, 1876, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["playerStates"] = (s.tmp_1);
    s.lastBrkId = 1877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1877]) return breakpoint(s, 9, 1877, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = info_defaultHeartImage__P3986_mk(s);
    s.callLocIdx = 790; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["heartImage"] = (s.tmp_1);
    s.lastBrkId = 1878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1878]) return breakpoint(s, 11, 1878, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.image.ofBuffer(_hex12481);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["multiplierImage"] = (s.tmp_1);
    s.lastBrkId = 1879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1879]) return breakpoint(s, 12, 1879, r0);
  case 12:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = 1;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["bgColor"] = (s.tmp_1);
    s.lastBrkId = 1880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1880]) return breakpoint(s, 13, 1880, r0);
  case 13:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 3;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["borderColor"] = (s.tmp_1);
    s.lastBrkId = 1881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1881]) return breakpoint(s, 14, 1881, r0);
  case 14:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 3;
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["fontColor"] = (s.tmp_1);
    s.lastBrkId = 1882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1882]) return breakpoint(s, 15, 1882, r0);
  case 15:
    r0 = (s.arg0).fields["countdownExpired"] = (undefined);
    s.lastBrkId = 1883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1883]) return breakpoint(s, 16, 1883, r0);
  case 16:
    r0 = (s.arg0).fields["countdownEndHandler"] = (undefined);
    s.lastBrkId = 1884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1884]) return breakpoint(s, 17, 1884, r0);
  case 17:
    r0 = (s.arg0).fields["gameEnd"] = (undefined);
    s.lastBrkId = 1885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1885]) return breakpoint(s, 18, 1885, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["playerStates"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_InfoState_constructor__P3936.info = {"start":1045,"length":674,"line":43,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["this"]}

function info_InfoState_constructor__P3936_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_InfoState_constructor__P3936, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }

const _hex12481 = pxsim.BufferMethods.createBufferFromHex("87040500050000000100010010100000000100001010000001000100")




function info_defaultHeartImage__P3986(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1937]) return breakpoint(s, 3, 1937, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex12509);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex12511);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
info_defaultHeartImage__P3986.info = {"start":5080,"length":592,"line":162,"column":4,"endLine":183,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"defaultHeartImage","argumentNames":[]}

function info_defaultHeartImage__P3986_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_defaultHeartImage__P3986, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex12509 = pxsim.BufferMethods.createBufferFromHex("87040800070000001011000001000100010010001000000101001000010001001011000000000000")
const _hex12511 = pxsim.BufferMethods.createBufferFromHex("8704080007000000c0cc00002c220c002222c2002222220c20222202222422004222020020220000")




function game_over__P2542(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scoreInfo___6374 = undefined;
    s.highScore___6378 = undefined;
    s.overDialog___6407 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2679]) return breakpoint(s, 18, 2679, r0);
  case 18:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1111; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2680]) return breakpoint(s, 20, 2680, r0);
  case 20:
    r0 = pxsim_numops_toBoolDecr(globals.__isOver___4063);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2681]) return breakpoint(s, 21, 2681, r0);
  case 21:
    { step = 17; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2682]) return breakpoint(s, 22, 2682, r0);
  case 22:
    globals.__isOver___4063 = (true);
    s.lastBrkId = 2683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2683]) return breakpoint(s, 23, 2683, r0);
  case 23:
    r0 = pxsim_numops_toBoolDecr(globals.__gameOverHandler___4061);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2684]) return breakpoint(s, 24, 2684, r0);
  case 24:
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = globals.__gameOverHandler___4061;
    s.tmp_0.arg0 = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1112; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    { step = 16; continue; }
  case 3:
    s.lastBrkId = 2685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2685]) return breakpoint(s, 26, 2685, r0);
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2686]) return breakpoint(s, 27, 2686, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 4; continue; }
    r0 = globals.winEffect___2530;
    { step = 5; continue; }
  case 4:
    r0 = globals.loseEffect___2531;
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg1 = (s.tmp_2);
  case 6:
  case 7:
    s.lastBrkId = 2687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2687]) return breakpoint(s, 28, 2687, r0);
  case 28:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = globals.player1___2257;
    s.callLocIdx = 1113; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.scoreInfo___6374 = (r0);
    s.lastBrkId = 2688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2688]) return breakpoint(s, 30, 2688, r0);
  case 30:
    s.tmp_0 = info_highScore__P2205_mk(s);
    s.callLocIdx = 1114; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.highScore___6378 = (r0);
    s.lastBrkId = 2689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2689]) return breakpoint(s, 32, 2689, r0);
  case 32:
    r0 = s.scoreInfo___6374.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.highScore___6378);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2690]) return breakpoint(s, 33, 2690, r0);
  case 33:
    s.tmp_2 = info_saveHighScore__P2202_mk(s);
    s.callLocIdx = 1115; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
  case 8:
  case 9:
    s.lastBrkId = 2691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2691]) return breakpoint(s, 35, 2691, r0);
  case 35:
  case 10:
    s.lastBrkId = 2692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2692]) return breakpoint(s, 36, 2692, r0);
  case 36:
    s.tmp_0 = r0 = globals._sceneStack___4057;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = pxsim_Array__length(globals._sceneStack___4057);
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2693]) return breakpoint(s, 37, 2693, r0);
  case 37:
    s.tmp_2 = scene_Scene_destroy__P2445_mk(s);
    s.tmp_2.arg0 = globals._scene___4056;
    s.callLocIdx = 1116; s.pc = 38; return s.tmp_2;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 2694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2694]) return breakpoint(s, 39, 2694, r0);
  case 39:
    s.tmp_0 = game_popScene__P2537_mk(s);
    s.callLocIdx = 1117; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    { step = 10; continue; }
  case 13:
    s.lastBrkId = 2695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2695]) return breakpoint(s, 41, 2695, r0);
  case 41:
    s.tmp_0 = game_pushScene__P2536_mk(s);
    s.callLocIdx = 1118; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 2696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2696]) return breakpoint(s, 43, 2696, r0);
  case 43:
    s.tmp_0 = scene_setBackgroundImage__P2459_mk(s);
    r0 = pxsim_ImageMethods.clone(globals.screen___1802);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1119; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 2697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2697]) return breakpoint(s, 45, 2697, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 2698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2698]) return breakpoint(s, 46, 2698, r0);
  case 46:
    s.tmp_0 = music_Melody_play__P1605_mk(s);
    s.tmp_0.arg0 = globals.winSound___4055;
    s.tmp_0.arg1 = 255;
    s.callLocIdx = 1120; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    { step = 15; continue; }
  case 14:
    s.lastBrkId = 2699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2699]) return breakpoint(s, 48, 2699, r0);
  case 48:
    s.tmp_0 = music_Melody_play__P1605_mk(s);
    s.tmp_0.arg0 = globals.loseSound___4053;
    s.tmp_0.arg1 = 255;
    s.callLocIdx = 1121; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
  case 15:
    s.lastBrkId = 2700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2700]) return breakpoint(s, 50, 2700, r0);
  case 50:
    s.tmp_0 = if_startScreenEffect_1_mk(s);
    s.tmp_0.arg0 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "startScreenEffect"), 1);
      s.callLocIdx = 1122; s.pc = 51; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["startScreenEffect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["startScreenEffect"], 1); s.callLocIdx = 1122; s.pc = 51; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1122; s.pc = 51; return s.tmp_0;; }
     else { s.callLocIdx = 1122; s.pc = 51; return s.tmp_0; }
    }
  case 51:
    r0 = s.retval;
    s.lastBrkId = 2701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2701]) return breakpoint(s, 52, 2701, r0);
  case 52:
    s.tmp_0 = pause__P402_mk(s);
    s.tmp_0.arg0 = 400;
    s.callLocIdx = 1123; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 2702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2702]) return breakpoint(s, 54, 2702, r0);
  case 54:
    r0 = pxsim_pxtcore_mkClassInstance(game_GameOverDialog__C2516_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_GameOverDialog_constructor__P2517_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    r0 = s.scoreInfo___6374.fields["score"];
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.highScore___6378;
    s.callLocIdx = 1124; s.pc = 55; return s.tmp_1;
  case 55:
    r0 = s.retval;
    s.overDialog___6407 = (s.tmp_0);
    s.lastBrkId = 2703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2703]) return breakpoint(s, 56, 2703, r0);
  case 56:
    r0 = pxsim_pxtcore_mkAction(1, inline__P6417);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.overDialog___6407);
    s.tmp_1 = scene_createRenderable__P2383_mk(s);
    s.tmp_1.arg0 = 100;
    s.tmp_1.arg1 = s.tmp_0;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1125; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
    s.lastBrkId = 2706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2706]) return breakpoint(s, 58, 2706, r0);
  case 58:
    s.tmp_0 = pause__P402_mk(s);
    s.tmp_0.arg0 = 500;
    s.callLocIdx = 1126; s.pc = 59; return s.tmp_0;
  case 59:
    r0 = s.retval;
    s.lastBrkId = 2707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2707]) return breakpoint(s, 60, 2707, r0);
  case 60:
    s.tmp_0 = game_GameOverDialog_displayCursor__P2518_mk(s);
    s.tmp_0.arg0 = s.overDialog___6407;
    s.callLocIdx = 1127; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.lastBrkId = 2708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2708]) return breakpoint(s, 62, 2708, r0);
  case 62:
    s.tmp_0 = game_waitAnyButton__P2534_mk(s);
    s.callLocIdx = 1128; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.lastBrkId = 2709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2709]) return breakpoint(s, 64, 2709, r0);
  case 64:
    setupResume(s, 65);
    pxsim.control.reset();
    checkResumeConsumed();
    return;
  case 65:
    r0 = s.retval;
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_over__P2542.info = {"start":5382,"length":1774,"line":181,"column":4,"endLine":232,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"over","argumentNames":["win","effect"]}

function game_over__P2542_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_over__P2542, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scoreInfo___6374: undefined,
  highScore___6378: undefined,
  overDialog___6407: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P6417(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2704]) return breakpoint(s, 1, 2704, r0);
  case 1:
    s.tmp_0 = game_GameOverDialog__C2516_v0_1_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    if (!checkSubtype(s.tmp_0.arg0, game_GameOverDialog__C2516_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.update;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2705]) return breakpoint(s, 3, 2705, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.caps[0].fields["image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_4 = r0;
    r0 = s.caps[0].fields["image"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, 0, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P6417.info = {"start":6721,"length":254,"line":218,"column":48,"endLine":225,"endColumn":13,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["target"]}

function inline__P6417_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P6417, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function game_popScene__P2537(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___8361 = undefined;
    s.lastBrkId = 2668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2668]) return breakpoint(s, 11, 2668, r0);
  case 11:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1105; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.oldScene___8361 = (r0);
    s.lastBrkId = 2669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2669]) return breakpoint(s, 13, 2669, r0);
  case 13:
    s.tmp_0 = r0 = globals._sceneStack___4057;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals._sceneStack___4057);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2670]) return breakpoint(s, 14, 2670, r0);
  case 14:
    r0 = pxsim_Array_.pop(globals._sceneStack___4057);
    globals._scene___4056 = (r0);
    s.lastBrkId = 2671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2671]) return breakpoint(s, 15, 2671, r0);
  case 15:
    s.tmp_0 = control_popEventContext__P399_mk(s);
    s.callLocIdx = 1106; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2672]) return breakpoint(s, 17, 2672, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(globals._scene___4056);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2673]) return breakpoint(s, 18, 2673, r0);
  case 18:
    s.tmp_0 = control_popEventContext__P399_mk(s);
    s.callLocIdx = 1107; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2674]) return breakpoint(s, 20, 2674, r0);
  case 20:
    globals._scene___4056 = (undefined);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 2675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2675]) return breakpoint(s, 21, 2675, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(globals._scene___4056);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2676]) return breakpoint(s, 22, 2676, r0);
  case 22:
    s.tmp_0 = particles_enableAll__P2710_mk(s);
    s.callLocIdx = 1108; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2677]) return breakpoint(s, 24, 2677, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___4059);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2678]) return breakpoint(s, 25, 2678, r0);
  case 25:
    r0 = pxsim_pxtcore_mkAction(1, inline__P8382);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___8361);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_1.arg0 = globals._scenePopHandlers___4059;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1110; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene__P2537.info = {"start":2033,"length":548,"line":75,"column":4,"endLine":93,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"popScene","argumentNames":[]}

function game_popScene__P2537_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene__P2537, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___8361: undefined,
} }





function inline__P8382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1109; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P8382.info = {"start":2545,"length":18,"line":91,"column":38,"endLine":91,"endColumn":56,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function inline__P8382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_enableAll__P2710(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___8386 = undefined;
    s.lastBrkId = 3110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3110]) return breakpoint(s, 3, 3110, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1370; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___8386 = (r0);
    s.lastBrkId = 3111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3111]) return breakpoint(s, 5, 3111, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___8386);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3112]) return breakpoint(s, 6, 3112, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_0.arg0 = s.sources___8386;
    s.tmp_0.arg1 = inline__P8392;
    s.callLocIdx = 1372; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3113]) return breakpoint(s, 8, 3113, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P4416_mk(s);
    s.callLocIdx = 1373; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll__P2710.info = {"start":12632,"length":193,"line":412,"column":4,"endLine":418,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"enableAll","argumentNames":[]}

function particles_enableAll__P2710_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll__P2710, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___8386: undefined,
} }





function inline__P8392(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P2691_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1371; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
inline__P8392.info = {"start":12756,"length":21,"line":415,"column":28,"endLine":415,"endColumn":49,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function inline__P8392_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8392, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function control_popEventContext__P399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___8399 = undefined;
    s.context___8407 = undefined;
    s.lastBrkId = 532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[532]) return breakpoint(s, 8, 532, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___3740);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[533]) return breakpoint(s, 9, 533, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[534]) return breakpoint(s, 10, 534, r0);
  case 10:
    r0 = pxsim_Array_.pop(globals.eventContexts___3740);
    s.ctx___8399 = (r0);
    s.lastBrkId = 535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[535]) return breakpoint(s, 11, 535, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.ctx___8399);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[536]) return breakpoint(s, 12, 536, r0);
  case 12:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[537]) return breakpoint(s, 13, 537, r0);
  case 13:
    s.tmp_2 = control_EventContext_unregister__P391_mk(s);
    s.tmp_2.arg0 = s.ctx___8399;
    s.callLocIdx = 68; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[538]) return breakpoint(s, 15, 538, r0);
  case 15:
    s.tmp_0 = r0 = globals.eventContexts___3740;
    r0 = pxsim_Array__length(globals.eventContexts___3740);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.context___8407 = (r0);
    s.lastBrkId = 539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[539]) return breakpoint(s, 16, 539, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.context___8407);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[540]) return breakpoint(s, 17, 540, r0);
  case 17:
    s.tmp_0 = control_EventContext_register__P390_mk(s);
    s.tmp_0.arg0 = s.context___8407;
    s.callLocIdx = 69; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[541]) return breakpoint(s, 19, 541, r0);
  case 19:
    globals.eventContexts___3740 = (undefined);
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_popEventContext__P399.info = {"start":7568,"length":413,"line":232,"column":4,"endLine":246,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"popEventContext","argumentNames":[]}

function control_popEventContext__P399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_popEventContext__P399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ctx___8399: undefined,
  context___8407: undefined,
} }





function control_EventContext_register__P390(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___8420 = undefined;
    s.unnamed2866___U1 = undefined;
    s.unnamed2867___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C384_VT)) failedCast(r0);
    s.lastBrkId = 491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[491]) return breakpoint(s, 3, 491, r0);
  case 3:
    s.h___8420 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed2866___U1 = (r0);
    s.unnamed2867___U2 = (0);
    s.lastBrkId = 492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[492]) return breakpoint(s, 4, 492, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed2867___U2;
    r0 = pxsim_Array__length(s.unnamed2866___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2866___U1, s.unnamed2867___U2);
    s.h___8420 = (r0);
    s.lastBrkId = 493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[493]) return breakpoint(s, 5, 493, r0);
  case 5:
    s.tmp_2 = control_EventHandler_register__P3733_mk(s);
    s.tmp_2.arg0 = s.h___8420;
    s.callLocIdx = 59; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = (s.unnamed2867___U2 + 1);
    s.unnamed2867___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed2866___U1 = (undefined);
    s.lastBrkId = 494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[494]) return breakpoint(s, 7, 494, r0);
  case 7:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P3738_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 60; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_register__P390.info = {"start":4386,"length":138,"line":131,"column":8,"endLine":135,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventContext_register__P390_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_register__P390, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___8420: undefined,
  unnamed2866___U1: undefined,
  unnamed2867___U2: undefined,
  arg0: undefined,
} }





function game_pushScene__P2536(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___8146 = undefined;
    s.lastBrkId = 2659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2659]) return breakpoint(s, 5, 2659, r0);
  case 5:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1099; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.oldScene___8146 = (r0);
    s.lastBrkId = 2660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2660]) return breakpoint(s, 7, 2660, r0);
  case 7:
    s.tmp_0 = particles_clearAll__P2708_mk(s);
    s.callLocIdx = 1100; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2661]) return breakpoint(s, 9, 2661, r0);
  case 9:
    s.tmp_0 = particles_disableAll__P2709_mk(s);
    s.callLocIdx = 1101; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2662]) return breakpoint(s, 11, 2662, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(globals._sceneStack___4057);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2663]) return breakpoint(s, 12, 2663, r0);
  case 12:
    r0 = pxsim_Array__mk();
    globals._sceneStack___4057 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2664]) return breakpoint(s, 13, 2664, r0);
  case 13:
    r0 = pxsim_Array__push(globals._sceneStack___4057, globals._scene___4056);
    s.lastBrkId = 2665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2665]) return breakpoint(s, 14, 2665, r0);
  case 14:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1102; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2666]) return breakpoint(s, 16, 2666, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___4058);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2667]) return breakpoint(s, 17, 2667, r0);
  case 17:
    r0 = pxsim_pxtcore_mkAction(1, inline__P8163);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___8146);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_1.arg0 = globals._scenePushHandlers___4058;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1104; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene__P2536.info = {"start":1660,"length":367,"line":62,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"pushScene","argumentNames":[]}

function game_pushScene__P2536_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene__P2536, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___8146: undefined,
} }





function inline__P8163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1103; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P8163.info = {"start":1991,"length":18,"line":71,"column":39,"endLine":71,"endColumn":57,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function inline__P8163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_disableAll__P2709(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___8167 = undefined;
    s.lastBrkId = 3106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3106]) return breakpoint(s, 3, 3106, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1366; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___8167 = (r0);
    s.lastBrkId = 3107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3107]) return breakpoint(s, 5, 3107, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___8167);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3108]) return breakpoint(s, 6, 3108, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_0.arg0 = s.sources___8167;
    s.tmp_0.arg1 = inline__P8173;
    s.callLocIdx = 1368; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3109]) return breakpoint(s, 8, 3109, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P4416_mk(s);
    s.callLocIdx = 1369; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll__P2709.info = {"start":12353,"length":195,"line":401,"column":4,"endLine":407,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"disableAll","argumentNames":[]}

function particles_disableAll__P2709_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll__P2709, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___8167: undefined,
} }





function inline__P8173(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P2691_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1367; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
inline__P8173.info = {"start":12478,"length":22,"line":404,"column":28,"endLine":404,"endColumn":50,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function inline__P8173_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8173, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_clearAll__P2708(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___8346 = undefined;
    s.lastBrkId = 3102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3102]) return breakpoint(s, 3, 3102, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P4420_mk(s);
    s.callLocIdx = 1362; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___8346 = (r0);
    s.lastBrkId = 3103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3103]) return breakpoint(s, 5, 3103, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___8346);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3104]) return breakpoint(s, 6, 3104, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    s.tmp_0.arg0 = s.sources___8346;
    s.tmp_0.arg1 = inline__P8352;
    s.callLocIdx = 1364; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3105]) return breakpoint(s, 8, 3105, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P4416_mk(s);
    s.callLocIdx = 1365; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll__P2708.info = {"start":12081,"length":185,"line":390,"column":4,"endLine":396,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"clearAll","argumentNames":[]}

function particles_clearAll__P2708_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll__P2708, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___8346: undefined,
} }





function inline__P8352(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_clear__P2693_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1363; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P8352.info = {"start":12204,"length":14,"line":393,"column":28,"endLine":393,"endColumn":42,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function inline__P8352_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8352, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_waitAnyButton__P2534(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2643]) return breakpoint(s, 3, 2643, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.__waitAnyButton___4060);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2644]) return breakpoint(s, 4, 2644, r0);
  case 4:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__waitAnyButton___4060;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1093; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2645]) return breakpoint(s, 6, 2645, r0);
  case 6:
    s.tmp_0 = pause__P402_mk(s);
    s.tmp_0.arg0 = 3000;
    s.callLocIdx = 1094; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_waitAnyButton__P2534.info = {"start":967,"length":111,"line":35,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"waitAnyButton","argumentNames":[]}

function game_waitAnyButton__P2534_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_waitAnyButton__P2534, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_GameOverDialog_update__P2519(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2516_VT)) failedCast(r0);
    s.lastBrkId = 2619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2619]) return breakpoint(s, 3, 2619, r0);
  case 3:
    s.tmp_0 = game_BaseDialog_clearInterior__P4031_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1086; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2620]) return breakpoint(s, 5, 2620, r0);
  case 5:
    s.tmp_0 = game_GameOverDialog__C2516_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_GameOverDialog__C2516_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawTextCore;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2621]) return breakpoint(s, 7, 2621, r0);
  case 7:
    r0 = s.arg0.fields["cursorOn"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2622]) return breakpoint(s, 8, 2622, r0);
  case 8:
    s.tmp_1 = game_BaseDialog_drawCursorRow__P2493_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1087; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_update__P2519.info = {"start":11365,"length":173,"line":349,"column":8,"endLine":356,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"update","argumentNames":["this"]}

function game_GameOverDialog_update__P2519_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_update__P2519, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_BaseDialog_clearInterior__P4031(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___7006 = undefined;
    s.s___7013 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2588]) return breakpoint(s, 8, 2588, r0);
  case 8:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2589]) return breakpoint(s, 9, 2589, r0);
  case 9:
    s.tmp_2 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = 4;
    s.tmp_2.arg2 = 1;
    s.tmp_2.arg3 = 1;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 2);
    s.tmp_2.arg4 = r0;
    r0 = s.arg0.fields["rows"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 1082; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2590]) return breakpoint(s, 11, 2590, r0);
  case 11:
    s.d___7006 = (1);
    s.lastBrkId = 2591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2591]) return breakpoint(s, 12, 2591, r0);
  case 12:
  case 3:
    s.lastBrkId = 2592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2592]) return breakpoint(s, 13, 2592, r0);
  case 13:
    s.tmp_1 = r0 = s.d___7006;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2593]) return breakpoint(s, 14, 2593, r0);
  case 14:
    s.s___7013 = (1);
    s.lastBrkId = 2594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2594]) return breakpoint(s, 15, 2594, r0);
  case 15:
  case 4:
    s.lastBrkId = 2595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2595]) return breakpoint(s, 16, 2595, r0);
  case 16:
    s.tmp_1 = r0 = s.s___7013;
    r0 = s.arg0.fields["rows"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2596]) return breakpoint(s, 17, 2596, r0);
  case 17:
    s.tmp_4 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 4;
    s.tmp_4.arg2 = s.d___7006;
    s.tmp_4.arg3 = s.s___7013;
    s.callLocIdx = 1083; s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2597]) return breakpoint(s, 19, 2597, r0);
  case 19:
    r0 = (s.s___7013 + 1);
    s.s___7013 = (r0);
    { step = 4; continue; }
  case 5:
    s.lastBrkId = 2598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2598]) return breakpoint(s, 20, 2598, r0);
  case 20:
    r0 = (s.d___7006 + 1);
    s.d___7006 = (r0);
    { step = 3; continue; }
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_clearInterior__P4031.info = {"start":3911,"length":342,"line":132,"column":8,"endLine":141,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"clearInterior","argumentNames":["this"]}

function game_BaseDialog_clearInterior__P4031_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_clearInterior__P4031, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  d___7006: undefined,
  s___7013: undefined,
  arg0: undefined,
} }





function game_BaseDialog_drawPartial__P4032(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___7031 = undefined;
    s.y0___7039 = undefined;
    s.xf___7047 = undefined;
    s.yf___7054 = undefined;
    s.e___7061 = undefined;
    s.t___7067 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2599]) return breakpoint(s, 5, 2599, r0);
  case 5:
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_2 = r0;
    r0 = (s.arg2 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.x0___7031 = (r0);
    s.lastBrkId = 2600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2600]) return breakpoint(s, 6, 2600, r0);
  case 6:
    r0 = s.arg0.fields["innerTop"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_2 = r0;
    r0 = (s.arg3 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.y0___7039 = (r0);
    s.lastBrkId = 2601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2601]) return breakpoint(s, 7, 2601, r0);
  case 7:
    r0 = (s.arg1 % 3);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.xf___7047 = (r0);
    s.lastBrkId = 2602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2602]) return breakpoint(s, 8, 2602, r0);
  case 8:
    r0 = pxsim.Math_.idiv(s.arg1, 3);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.yf___7054 = (r0);
    s.lastBrkId = 2603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2603]) return breakpoint(s, 9, 2603, r0);
  case 9:
    s.e___7061 = (0);
    s.lastBrkId = 2604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2604]) return breakpoint(s, 10, 2604, r0);
  case 10:
  case 1:
    s.lastBrkId = 2605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2605]) return breakpoint(s, 11, 2605, r0);
  case 11:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.e___7061 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2606]) return breakpoint(s, 12, 2606, r0);
  case 12:
    s.t___7067 = (0);
    s.lastBrkId = 2607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2607]) return breakpoint(s, 13, 2607, r0);
  case 13:
  case 2:
    s.lastBrkId = 2608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2608]) return breakpoint(s, 14, 2608, r0);
  case 14:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.t___7067 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2609]) return breakpoint(s, 15, 2609, r0);
  case 15:
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = (s.x0___7031 + s.e___7061);
    s.tmp_3 = r0;
    r0 = (s.y0___7039 + s.t___7067);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["frame"];
    s.tmp_6 = r0;
    r0 = (s.xf___7047 + s.e___7061);
    s.tmp_7 = r0;
    r0 = (s.yf___7054 + s.t___7067);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_6, s.tmp_7, s.tmp_8);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_2, s.tmp_3, s.tmp_4, s.tmp_5);
    s.lastBrkId = 2610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2610]) return breakpoint(s, 16, 2610, r0);
  case 16:
    r0 = (s.t___7067 + 1);
    s.t___7067 = (r0);
    { step = 2; continue; }
  case 3:
    s.lastBrkId = 2611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2611]) return breakpoint(s, 17, 2611, r0);
  case 17:
    r0 = (s.e___7061 + 1);
    s.e___7061 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawPartial__P4032.info = {"start":4263,"length":604,"line":143,"column":8,"endLine":158,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawPartial","argumentNames":["this","index","colTo","rowTo"]}

function game_BaseDialog_drawPartial__P4032_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawPartial__P4032, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  x0___7031: undefined,
  y0___7039: undefined,
  xf___7047: undefined,
  yf___7054: undefined,
  e___7061: undefined,
  t___7067: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_BaseDialog_fastFill__P4030(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.color___7103 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2586]) return breakpoint(s, 1, 2586, r0);
  case 1:
    r0 = s.arg0.fields["frame"];
    s.tmp_0 = r0;
    r0 = (s.arg1 % 3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, 3);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_0, s.tmp_1, s.tmp_2);
    s.color___7103 = (r0);
    s.lastBrkId = 2587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2587]) return breakpoint(s, 2, 2587, r0);
  case 2:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg2);
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg3);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg4;
    s.tmp_0.arg4 = s.arg5;
    s.tmp_0.arg5 = s.color___7103;
    s.callLocIdx = 1081; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_fastFill__P4030.info = {"start":3652,"length":249,"line":127,"column":8,"endLine":130,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"fastFill","argumentNames":["this","index","x","y","w","h"]}

function game_BaseDialog_fastFill__P4030_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_fastFill__P4030, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  color___7103: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_GameOverDialog_drawTextCore__P2520(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scoreColor___6553 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2516_VT)) failedCast(r0);
    s.lastBrkId = 2623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2623]) return breakpoint(s, 11, 2623, r0);
  case 11:
    r0 = s.arg0.fields["win"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "YOU WIN!";
    { step = 2; continue; }
  case 1:
    r0 = "GAME OVER!";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 5;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = helpers_imagePrintCenter__P1759_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.tmp_1;
    s.tmp_4.arg2 = 8;
    s.tmp_4.arg3 = s.tmp_3;
    s.tmp_4.arg4 = globals.font8___1745;
    s.callLocIdx = 1088; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2624]) return breakpoint(s, 13, 2624, r0);
  case 13:
    r0 = s.arg0.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2625]) return breakpoint(s, 14, 2625, r0);
  case 14:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 2;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.scoreColor___6553 = (s.tmp_3);
    s.lastBrkId = 2626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2626]) return breakpoint(s, 15, 2626, r0);
  case 15:
    s.tmp_0 = helpers_imagePrintCenter__P1759_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["score"];
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("Score:", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 23;
    s.tmp_0.arg3 = s.scoreColor___6553;
    s.tmp_0.arg4 = globals.font8___1745;
    s.callLocIdx = 1089; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2627]) return breakpoint(s, 18, 2627, r0);
  case 18:
    r0 = s.arg0.fields["isNewHighScore"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2628]) return breakpoint(s, 19, 2628, r0);
  case 19:
    s.tmp_1 = helpers_imagePrintCenter__P1759_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = "New High Score!";
    s.tmp_1.arg2 = 34;
    s.tmp_1.arg3 = s.scoreColor___6553;
    s.tmp_1.arg4 = globals.font5___1750;
    s.callLocIdx = 1090; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 2629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2629]) return breakpoint(s, 21, 2629, r0);
  case 21:
    s.tmp_0 = helpers_imagePrintCenter__P1759_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["highScore"];
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("HI", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 34;
    s.tmp_0.arg3 = s.scoreColor___6553;
    s.tmp_0.arg4 = globals.font8___1745;
    s.callLocIdx = 1091; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 8:
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_drawTextCore__P2520.info = {"start":11548,"length":1200,"line":358,"column":8,"endLine":395,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_GameOverDialog_drawTextCore__P2520_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_drawTextCore__P2520, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  scoreColor___6553: undefined,
  arg0: undefined,
} }





function helpers_imagePrintCenter__P1759(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___6603 = undefined;
    s.x___6609 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[852]) return breakpoint(s, 3, 852, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[853]) return breakpoint(s, 4, 853, r0);
  case 4:
    s.tmp_2 = image_getFontForText__P1747_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 139; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.arg4 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[854]) return breakpoint(s, 6, 854, r0);
  case 6:
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg4;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 140; s.pc = 7; return s.tmp_2; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.w___6603 = (r0);
    s.lastBrkId = 855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[855]) return breakpoint(s, 8, 855, r0);
  case 8:
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.w___6603);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.x___6609 = (r0);
    s.lastBrkId = 856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[856]) return breakpoint(s, 9, 856, r0);
  case 9:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.x___6609;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.tmp_0.arg5 = s.arg4;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 141; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrintCenter__P1759.info = {"start":15025,"length":295,"line":206,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrintCenter","argumentNames":["img","text","y","color","font"]}

function helpers_imagePrintCenter__P1759_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrintCenter__P1759, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  w___6603: undefined,
  x___6609: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function game_BaseDialog_drawCursorRow__P2493(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.offset___6454 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2552]) return breakpoint(s, 3, 2552, r0);
  case 3:
    s.offset___6454 = (0);
    s.lastBrkId = 2553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2553]) return breakpoint(s, 4, 2553, r0);
  case 4:
    r0 = s.arg0.fields["cursorCount"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 20);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2554]) return breakpoint(s, 5, 2554, r0);
  case 5:
    s.offset___6454 = (1);
  case 1:
  case 2:
    s.lastBrkId = 2555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2555]) return breakpoint(s, 6, 2555, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorCount"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 40);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorCount"] = (s.tmp_1);
    s.lastBrkId = 2556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2556]) return breakpoint(s, 7, 2556, r0);
  case 7:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_6 = r0;
    s.tmp_8 = game_BaseDialog_textAreaWidth__P4035_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 1062; s.pc = 8; return s.tmp_8;
  case 8:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_5 + s.tmp_9);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.offset___6454);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_11 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_11);
    s.tmp_10 = r0;
    r0 = (s.tmp_3 - s.tmp_10);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_16 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_17 = r0;
    r0 = (s.tmp_16 + s.tmp_17);
    s.tmp_15 = r0;
    s.tmp_19 = game_BaseDialog_textAreaHeight__P4036_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 1063; s.pc = 9; return s.tmp_19;
  case 9:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = (s.tmp_15 + s.tmp_18);
    s.tmp_14 = r0;
    r0 = (s.tmp_14 + 1);
    s.tmp_13 = r0;
    s.tmp_21 = game_BaseDialog_cursorRowHeight__P4033_mk(s);
    s.tmp_21.arg0 = s.arg0;
    s.callLocIdx = 1064; s.pc = 10; return s.tmp_21;
  case 10:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = (s.tmp_13 - s.tmp_20);
    s.tmp_12 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_12);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawCursorRow__P2493.info = {"start":1832,"length":479,"line":74,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawCursorRow","argumentNames":["this"]}

function game_BaseDialog_drawCursorRow__P2493_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawCursorRow__P2493, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  offset___6454: undefined,
  arg0: undefined,
} }





function game_BaseDialog_textAreaHeight__P4036(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2614]) return breakpoint(s, 1, 2614, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_textAreaHeight__P4036.info = {"start":5183,"length":117,"line":172,"column":8,"endLine":174,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"textAreaHeight","argumentNames":["this"]}

function game_BaseDialog_textAreaHeight__P4036_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_textAreaHeight__P4036, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function game_BaseDialog_textAreaWidth__P4035(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2613]) return breakpoint(s, 1, 2613, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_2);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 2);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_textAreaWidth__P4035.info = {"start":5057,"length":116,"line":168,"column":8,"endLine":170,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"textAreaWidth","argumentNames":["this"]}

function game_BaseDialog_textAreaWidth__P4035_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_textAreaWidth__P4035, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function game_BaseDialog_cursorRowHeight__P4033(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2612]) return breakpoint(s, 1, 2612, r0);
  case 1:
    r0 = s.arg0.fields["cursor"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_cursorRowHeight__P4033.info = {"start":4877,"length":82,"line":160,"column":8,"endLine":162,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"cursorRowHeight","argumentNames":["this"]}

function game_BaseDialog_cursorRowHeight__P4033_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_cursorRowHeight__P4033, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_GameOverDialog_displayCursor__P2518(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2516_VT)) failedCast(r0);
    s.lastBrkId = 2618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2618]) return breakpoint(s, 1, 2618, r0);
  case 1:
    r0 = (s.arg0).fields["cursorOn"] = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_displayCursor__P2518.info = {"start":11294,"length":61,"line":345,"column":8,"endLine":347,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"displayCursor","argumentNames":["this"]}

function game_GameOverDialog_displayCursor__P2518_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_displayCursor__P2518, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_GameOverDialog_constructor__P2517(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2516_VT)) failedCast(r0);
    r0 = (s.arg0).fields["win"] = (s.arg1);
    r0 = (s.arg0).fields["score"] = (s.arg2);
    r0 = (s.arg0).fields["highScore"] = (s.arg3);
    s.lastBrkId = 2615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2615]) return breakpoint(s, 1, 2615, r0);
  case 1:
    s.tmp_0 = game_BaseDialog_constructor__P2489_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 46;
    s.tmp_1 = game_defaultSplashFrame__P4043_mk(s);
    s.callLocIdx = 1084; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.callLocIdx = 1085; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2616]) return breakpoint(s, 4, 2616, r0);
  case 4:
    r0 = (s.arg0).fields["cursorOn"] = (false);
    s.lastBrkId = 2617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2617]) return breakpoint(s, 5, 2617, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["score"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["highScore"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 > s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["isNewHighScore"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_constructor__P2517.info = {"start":10978,"length":306,"line":335,"column":8,"endLine":343,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","win","score","highScore"]}

function game_GameOverDialog_constructor__P2517_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_constructor__P2517, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_defaultSplashFrame__P4043(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2631]) return breakpoint(s, 3, 2631, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex7146);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex7148);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultSplashFrame__P4043.info = {"start":16870,"length":220,"line":528,"column":4,"endLine":541,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultSplashFrame","argumentNames":[]}

function game_defaultSplashFrame__P4043_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultSplashFrame__P4043, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex7146 = pxsim.BufferMethods.createBufferFromHex("8704030003000000010100000101000001010000")
const _hex7148 = pxsim.BufferMethods.createBufferFromHex("8704030003000000f1010000f1010000f1010000")




function game_BaseDialog_constructor__P2489(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2536]) return breakpoint(s, 13, 2536, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.image.create(s.arg1, s.arg2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["image"] = (s.tmp_1);
    s.lastBrkId = 2537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2537]) return breakpoint(s, 14, 2537, r0);
  case 14:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.dialogFrame___4026;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_1;
    { step = 4; continue; }
  case 3:
    s.tmp_3 = game_defaultFrame__P4042_mk(s);
    s.callLocIdx = 1056; s.pc = 15; return s.tmp_3;
  case 15:
    r0 = s.retval;
    s.tmp_2 = r0;
    globals.dialogFrame___4026 = (r0);
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["frame"] = (s.tmp_4);
    s.lastBrkId = 2538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2538]) return breakpoint(s, 16, 2538, r0);
  case 16:
    s.tmp_0 = r0 = s.arg4;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = globals.font8___1745;
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["font"] = (s.tmp_1);
    s.lastBrkId = 2539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2539]) return breakpoint(s, 17, 2539, r0);
  case 17:
    s.tmp_0 = r0 = s.arg5;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = globals.dialogCursor___4027;
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_1;
    { step = 10; continue; }
  case 9:
    s.tmp_3 = game_defaultCursorImage__P4044_mk(s);
    s.callLocIdx = 1057; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2 = r0;
    globals.dialogCursor___4027 = (r0);
    r0 = s.tmp_2;
  case 10:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["cursor"] = (s.tmp_4);
    s.lastBrkId = 2540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2540]) return breakpoint(s, 19, 2540, r0);
  case 19:
    r0 = (globals.dialogTextColor___4028 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    globals.dialogTextColor___4028 = (15);
    r0 = 15;
    { step = 12; continue; }
  case 11:
    r0 = globals.dialogTextColor___4028;
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["textColor"] = (s.tmp_1);
    s.lastBrkId = 2541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2541]) return breakpoint(s, 20, 2541, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["frame"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["unit"] = (s.tmp_1);
    s.lastBrkId = 2542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2542]) return breakpoint(s, 21, 2542, r0);
  case 21:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["unit"];
    s.tmp_3 = r0;
    r0 = (s.arg1 / s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columns"] = (s.tmp_1);
    s.lastBrkId = 2543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2543]) return breakpoint(s, 22, 2543, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["unit"];
    s.tmp_3 = r0;
    r0 = (s.arg2 / s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rows"] = (s.tmp_1);
    s.lastBrkId = 2544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2544]) return breakpoint(s, 23, 2544, r0);
  case 23:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = r0 = s.arg1;
    r0 = s.arg0.fields["columns"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["innerLeft"] = (s.tmp_1);
    s.lastBrkId = 2545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2545]) return breakpoint(s, 24, 2545, r0);
  case 24:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = r0 = s.arg2;
    r0 = s.arg0.fields["rows"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["innerTop"] = (s.tmp_1);
    s.lastBrkId = 2546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2546]) return breakpoint(s, 25, 2546, r0);
  case 25:
    r0 = (s.arg0).fields["cursorCount"] = (0);
    s.lastBrkId = 2547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2547]) return breakpoint(s, 26, 2547, r0);
  case 26:
    s.tmp_0 = game_BaseDialog_drawBorder__P4029_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1058; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 2548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2548]) return breakpoint(s, 28, 2548, r0);
  case 28:
    s.tmp_0 = game_BaseDialog_clearInterior__P4031_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1059; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_constructor__P2489.info = {"start":634,"length":895,"line":36,"column":8,"endLine":58,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","width","height","frame","font","cursor"]}

function game_BaseDialog_constructor__P2489_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_constructor__P2489, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_defaultCursorImage__P4044(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2632]) return breakpoint(s, 3, 2632, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex7332);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex7334);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultCursorImage__P4044.info = {"start":17096,"length":690,"line":543,"column":4,"endLine":569,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultCursorImage","argumentNames":[]}

function game_defaultCursorImage__P4044_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultCursorImage__P4044, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex7332 = pxsim.BufferMethods.createBufferFromHex("87040a000800000011111101010000010111010111100001011101010100000101000001100010000001010000100000")
const _hex7334 = pxsim.BufferMethods.createBufferFromHex("87040b000b00000000606686080000006076776686000000607777676608000076171111670800007671177766080000767117776608000076711777660800007617111167080000607777676608000060767766860000000060668608000000")




function game_defaultFrame__P4042(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2630]) return breakpoint(s, 3, 2630, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex7338);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex7340);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultFrame__P4042.info = {"start":16308,"length":556,"line":504,"column":4,"endLine":526,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultFrame","argumentNames":[]}

function game_defaultFrame__P4042_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultFrame__P4042, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex7338 = pxsim.BufferMethods.createBufferFromHex("8704030003000000110100000101000011010000")
const _hex7340 = pxsim.BufferMethods.createBufferFromHex("87040c000c0000000000000000000000b0bbbbbbbb0b0000b0bbbbbbbbcb0000b0db1111bdcb0000b01b1111b1cb0000b01b1111b1cb0000b01b1111b1cb0000b01b1111b1cb0000b0db1111bdcb0000b0bbbbbbbbcb0000b0bbbbbbbbcb000000cccccccccc0000")




function game_BaseDialog_drawBorder__P4029(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.y___7263 = undefined;
    s.c___7279 = undefined;
    s.r___7313 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2557]) return breakpoint(s, 12, 2557, r0);
  case 12:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2558]) return breakpoint(s, 13, 2558, r0);
  case 13:
    s.tmp_2 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 0;
    s.tmp_2.arg3 = 0;
    s.tmp_2.arg4 = 1;
    s.tmp_2.arg5 = 1;
    s.callLocIdx = 1065; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2559]) return breakpoint(s, 15, 2559, r0);
  case 15:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = 0;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1066; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2560]) return breakpoint(s, 17, 2560, r0);
  case 17:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1067; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2561]) return breakpoint(s, 19, 2561, r0);
  case 19:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = 1;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1068; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2562]) return breakpoint(s, 21, 2562, r0);
  case 21:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = 1;
    r0 = s.arg0.fields["rows"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 2);
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1069; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 2563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2563]) return breakpoint(s, 23, 2563, r0);
  case 23:
    r0 = s.arg0.fields["rows"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.y___7263 = (r0);
    s.lastBrkId = 2564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2564]) return breakpoint(s, 24, 2564, r0);
  case 24:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = s.y___7263;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1070; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 2565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2565]) return breakpoint(s, 26, 2565, r0);
  case 26:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = s.y___7263;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1071; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 2566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2566]) return breakpoint(s, 28, 2566, r0);
  case 28:
    s.tmp_0 = game_BaseDialog_fastFill__P4030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 8;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.y___7263;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1072; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.lastBrkId = 2567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2567]) return breakpoint(s, 30, 2567, r0);
  case 30:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2568]) return breakpoint(s, 31, 2568, r0);
  case 31:
    s.c___7279 = (0);
    s.lastBrkId = 2569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2569]) return breakpoint(s, 32, 2569, r0);
  case 32:
  case 3:
    s.lastBrkId = 2570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2570]) return breakpoint(s, 33, 2570, r0);
  case 33:
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.c___7279 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2571]) return breakpoint(s, 34, 2571, r0);
  case 34:
    r0 = (s.c___7279 == 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2572]) return breakpoint(s, 35, 2572, r0);
  case 35:
    s.tmp_3 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    s.tmp_3.arg3 = 0;
    s.callLocIdx = 1073; s.pc = 36; return s.tmp_3;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 2573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2573]) return breakpoint(s, 37, 2573, r0);
  case 37:
    s.tmp_0 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 0;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1074; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 2574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2574]) return breakpoint(s, 39, 2574, r0);
  case 39:
    s.tmp_1 = r0 = s.c___7279;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2575]) return breakpoint(s, 40, 2575, r0);
  case 40:
    s.tmp_4 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 2;
    s.tmp_4.arg2 = s.c___7279;
    s.tmp_4.arg3 = 0;
    s.callLocIdx = 1075; s.pc = 41; return s.tmp_4;
  case 41:
    r0 = s.retval;
    s.lastBrkId = 2576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2576]) return breakpoint(s, 42, 2576, r0);
  case 42:
    s.tmp_0 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 8;
    s.tmp_0.arg2 = s.c___7279;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1076; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2577]) return breakpoint(s, 44, 2577, r0);
  case 44:
    s.tmp_0 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = s.c___7279;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 1077; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.lastBrkId = 2578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2578]) return breakpoint(s, 46, 2578, r0);
  case 46:
    s.tmp_0 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7;
    s.tmp_0.arg2 = s.c___7279;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1078; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 2579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2579]) return breakpoint(s, 48, 2579, r0);
  case 48:
    r0 = (s.c___7279 + 1);
    s.c___7279 = (r0);
    { step = 3; continue; }
  case 8:
    s.lastBrkId = 2580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2580]) return breakpoint(s, 49, 2580, r0);
  case 49:
    s.r___7313 = (1);
    s.lastBrkId = 2581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2581]) return breakpoint(s, 50, 2581, r0);
  case 50:
  case 9:
    s.lastBrkId = 2582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2582]) return breakpoint(s, 51, 2582, r0);
  case 51:
    s.tmp_1 = r0 = s.r___7313;
    r0 = s.arg0.fields["rows"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2583]) return breakpoint(s, 52, 2583, r0);
  case 52:
    s.tmp_4 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 3;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.r___7313;
    s.callLocIdx = 1079; s.pc = 53; return s.tmp_4;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 2584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2584]) return breakpoint(s, 54, 2584, r0);
  case 54:
    s.tmp_0 = game_BaseDialog_drawPartial__P4032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.r___7313;
    s.callLocIdx = 1080; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
    s.lastBrkId = 2585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2585]) return breakpoint(s, 56, 2585, r0);
  case 56:
    r0 = (s.r___7313 + 1);
    s.r___7313 = (r0);
    { step = 9; continue; }
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawBorder__P4029.info = {"start":2321,"length":1321,"line":89,"column":8,"endLine":125,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawBorder","argumentNames":["this"]}

function game_BaseDialog_drawBorder__P4029_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawBorder__P4029, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  y___7263: undefined,
  c___7279: undefined,
  r___7313: undefined,
  arg0: undefined,
} }





function scene_setBackgroundImage__P2459(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___8120 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2527]) return breakpoint(s, 1, 2527, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1047; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___8120 = (r0);
    s.lastBrkId = 2528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2528]) return breakpoint(s, 3, 2528, r0);
  case 3:
    s.tmp_0 = scene_Background_image__P2272_mk(s);
    r0 = s.scene___8120.fields["background"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1048; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundImage__P2459.info = {"start":1938,"length":135,"line":78,"column":4,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundImage","argumentNames":["img"]}

function scene_setBackgroundImage__P2459_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundImage__P2459, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___8120: undefined,
  arg0: undefined,
} }





function scene_Background_image__P2272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2265_VT)) failedCast(r0);
    s.lastBrkId = 2143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2143]) return breakpoint(s, 1, 2143, r0);
  case 1:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_image__P2272.info = {"start":1003,"length":68,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this","image"]}

function scene_Background_image__P2272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P2272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_image__P2271(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2265_VT)) failedCast(r0);
    s.lastBrkId = 2140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2140]) return breakpoint(s, 3, 2140, r0);
  case 3:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2141]) return breakpoint(s, 4, 2141, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_6 = r0;
    r0 = pxsim.image.create(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_image"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 2142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2142]) return breakpoint(s, 5, 2142, r0);
  case 5:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Background_image__P2271.info = {"start":811,"length":174,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this"]}
scene_Background_image__P2271.isGetter = true;

function scene_Background_image__P2271_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P2271, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function scene_Scene_destroy__P2445(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2419_VT)) failedCast(r0);
    s.lastBrkId = 2491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2491]) return breakpoint(s, 1, 2491, r0);
  case 1:
    r0 = (s.arg0).fields["eventContext"] = (undefined);
    s.lastBrkId = 2492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2492]) return breakpoint(s, 2, 2492, r0);
  case 2:
    r0 = (s.arg0).fields["background"] = (undefined);
    s.lastBrkId = 2493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2493]) return breakpoint(s, 3, 2493, r0);
  case 3:
    r0 = (s.arg0).fields["tileMap"] = (undefined);
    s.lastBrkId = 2494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2494]) return breakpoint(s, 4, 2494, r0);
  case 4:
    r0 = (s.arg0).fields["allSprites"] = (undefined);
    s.lastBrkId = 2495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2495]) return breakpoint(s, 5, 2495, r0);
  case 5:
    r0 = (s.arg0).fields["spriteNextId"] = (undefined);
    s.lastBrkId = 2496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2496]) return breakpoint(s, 6, 2496, r0);
  case 6:
    r0 = (s.arg0).fields["spritesByKind"] = (undefined);
    s.lastBrkId = 2497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2497]) return breakpoint(s, 7, 2497, r0);
  case 7:
    r0 = (s.arg0).fields["physicsEngine"] = (undefined);
    s.lastBrkId = 2498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2498]) return breakpoint(s, 8, 2498, r0);
  case 8:
    r0 = (s.arg0).fields["camera"] = (undefined);
    s.lastBrkId = 2499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2499]) return breakpoint(s, 9, 2499, r0);
  case 9:
    r0 = (s.arg0).fields["flags"] = (undefined);
    s.lastBrkId = 2500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2500]) return breakpoint(s, 10, 2500, r0);
  case 10:
    r0 = (s.arg0).fields["destroyedHandlers"] = (undefined);
    s.lastBrkId = 2501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2501]) return breakpoint(s, 11, 2501, r0);
  case 11:
    r0 = (s.arg0).fields["createdHandlers"] = (undefined);
    s.lastBrkId = 2502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2502]) return breakpoint(s, 12, 2502, r0);
  case 12:
    r0 = (s.arg0).fields["overlapHandlers"] = (undefined);
    s.lastBrkId = 2503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2503]) return breakpoint(s, 13, 2503, r0);
  case 13:
    r0 = (s.arg0).fields["tileOverlapHandlers"] = (undefined);
    s.lastBrkId = 2504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2504]) return breakpoint(s, 14, 2504, r0);
  case 14:
    r0 = (s.arg0).fields["collisionHandlers"] = (undefined);
    s.lastBrkId = 2505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2505]) return breakpoint(s, 15, 2505, r0);
  case 15:
    r0 = (s.arg0).fields["wallCollisionHandlers"] = (undefined);
    s.lastBrkId = 2506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2506]) return breakpoint(s, 16, 2506, r0);
  case 16:
    r0 = (s.arg0).fields["gameForeverHandlers"] = (undefined);
    s.lastBrkId = 2507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2507]) return breakpoint(s, 17, 2507, r0);
  case 17:
    r0 = (s.arg0).fields["_data"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_destroy__P2445.info = {"start":6997,"length":764,"line":198,"column":8,"endLine":216,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"destroy","argumentNames":["this"]}

function scene_Scene_destroy__P2445_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_destroy__P2445, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function info_highScore__P2205(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1945]) return breakpoint(s, 3, 1945, r0);
  case 3:
    s.tmp_1 = settings_readNumber__P1833_mk(s);
    s.tmp_1.arg0 = "high-score";
    s.callLocIdx = 821; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
info_highScore__P2205.info = {"start":7086,"length":98,"line":240,"column":4,"endLine":242,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"highScore","argumentNames":[]}

function info_highScore__P2205_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_highScore__P2205, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function settings_readNumber__P1833(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___9071 = undefined;
    s.nums___9078 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[981]) return breakpoint(s, 8, 981, r0);
  case 8:
    s.tmp_0 = settings_readBuffer__P1831_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 170; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.buf___9071 = (r0);
    s.lastBrkId = 982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[982]) return breakpoint(s, 10, 982, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.buf___9071);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[983]) return breakpoint(s, 11, 983, r0);
  case 11:
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[984]) return breakpoint(s, 12, 984, r0);
  case 12:
    s.tmp_2 = msgpack_unpackNumberArray__P176_mk(s);
    s.tmp_2.arg0 = s.buf___9071;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 171; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.nums___9078 = (r0);
    s.lastBrkId = 985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[985]) return breakpoint(s, 14, 985, r0);
  case 14:
    s.tmp_0 = r0 = s.nums___9078;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___9078);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[986]) return breakpoint(s, 15, 986, r0);
  case 15:
    r0 = pxsim_Array__getAt(s.nums___9078, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[987]) return breakpoint(s, 16, 987, r0);
  case 16:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P1833.info = {"start":2887,"length":313,"line":114,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P1833_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P1833, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___9071: undefined,
  nums___9078: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P1831(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[976]) return breakpoint(s, 1, 976, r0);
  case 1:
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P1831.info = {"start":2516,"length":72,"line":96,"column":4,"endLine":98,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P1831_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P1831, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P176(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___9091 = undefined;
    s.fmt___9098 = undefined;
    s.v___9107 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[307]) return breakpoint(s, 12, 307, r0);
  case 12:
    r0 = pxsim_Array__mk();
    s.res___9091 = (r0);
    s.lastBrkId = 308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[308]) return breakpoint(s, 13, 308, r0);
  case 13:
  case 1:
    s.lastBrkId = 309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[309]) return breakpoint(s, 14, 309, r0);
  case 14:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[310]) return breakpoint(s, 15, 310, r0);
  case 15:
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P3680_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 24; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
    s.fmt___9098 = (r0);
    s.lastBrkId = 311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[311]) return breakpoint(s, 17, 311, r0);
  case 17:
    r0 = (s.fmt___9098 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[312]) return breakpoint(s, 18, 312, r0);
  case 18:
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___9107 = (r0);
    s.lastBrkId = 313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[313]) return breakpoint(s, 19, 313, r0);
  case 19:
    r0 = (-31 <= s.v___9107);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___9107 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[314]) return breakpoint(s, 20, 314, r0);
  case 20:
    r0 = pxsim_Array__push(s.res___9091, s.v___9107);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[315]) return breakpoint(s, 21, 315, r0);
  case 21:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[316]) return breakpoint(s, 22, 316, r0);
  case 22:
    s.tmp_0 = r0 = s.res___9091;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___9098, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[317]) return breakpoint(s, 23, 317, r0);
  case 23:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P168_mk(s);
    s.tmp_2.arg0 = s.fmt___9098;
    s.callLocIdx = 25; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
    s.lastBrkId = 318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[318]) return breakpoint(s, 25, 318, r0);
  case 25:
  case 8:
    s.lastBrkId = 319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[319]) return breakpoint(s, 26, 319, r0);
  case 26:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[320]) return breakpoint(s, 27, 320, r0);
  case 27:
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    s.lastBrkId = 321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[321]) return breakpoint(s, 28, 321, r0);
  case 28:
    r0 = s.res___9091;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P176.info = {"start":2650,"length":669,"line":91,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P176_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P176, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___9091: undefined,
  fmt___9098: undefined,
  v___9107: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_tagFormat__P3680(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[276]) return breakpoint(s, 10, 276, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[277]) return breakpoint(s, 11, 277, r0);
  case 11:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    s.lastBrkId = 278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[278]) return breakpoint(s, 12, 278, r0);
  case 12:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    s.lastBrkId = 279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[279]) return breakpoint(s, 13, 279, r0);
  case 13:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    s.lastBrkId = 280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[280]) return breakpoint(s, 14, 280, r0);
  case 14:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    s.lastBrkId = 281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[281]) return breakpoint(s, 15, 281, r0);
  case 15:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    s.lastBrkId = 282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[282]) return breakpoint(s, 16, 282, r0);
  case 16:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    s.lastBrkId = 283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[283]) return breakpoint(s, 17, 283, r0);
  case 17:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[284]) return breakpoint(s, 18, 284, r0);
  case 18:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P3680.info = {"start":1145,"length":481,"line":42,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P3680_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P3680, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_sizeOf__P168(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[275]) return breakpoint(s, 1, 275, r0);
  case 1:
    s.tmp_0 = Buffer_sizeOfNumberFormat__P204_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 21; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P168.info = {"start":42,"length":101,"line":2,"column":4,"endLine":4,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P168_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P168, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_sizeOfNumberFormat__P204(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[332]) return breakpoint(s, 19, 332, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[333]) return breakpoint(s, 20, 333, r0);
  case 20:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[334]) return breakpoint(s, 21, 334, r0);
  case 21:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[335]) return breakpoint(s, 22, 335, r0);
  case 22:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    s.lastBrkId = 336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[336]) return breakpoint(s, 23, 336, r0);
  case 23:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    s.lastBrkId = 337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[337]) return breakpoint(s, 24, 337, r0);
  case 24:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
Buffer_sizeOfNumberFormat__P204.info = {"start":12467,"length":856,"line":427,"column":4,"endLine":451,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOfNumberFormat","argumentNames":["format"]}

function Buffer_sizeOfNumberFormat__P204_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_sizeOfNumberFormat__P204, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_saveHighScore__P2202(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hs___8893 = undefined;
    s.curr___8910 = undefined;
    s.lastBrkId = 1939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1939]) return breakpoint(s, 7, 1939, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(globals.players___3939);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_pxtrt.mklocRef();
    s.hs___8893 = (r0);
    s.lastBrkId = 1940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1940]) return breakpoint(s, 8, 1940, r0);
  case 8:
    r0 = pxsim_pxtrt_stlocRef(s.hs___8893, 0);
    s.lastBrkId = 1941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1941]) return breakpoint(s, 9, 1941, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, inline__P8903);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.hs___8893);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_2 = helpers_arrayFilter__P108_mk(s);
    s.tmp_2.arg0 = globals.players___3939;
    s.tmp_2.arg1 = inline__P8897;
    s.callLocIdx = 815; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 818; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1942]) return breakpoint(s, 12, 1942, r0);
  case 12:
    s.tmp_0 = settings_readNumber__P1833_mk(s);
    s.tmp_0.arg0 = "high-score";
    s.callLocIdx = 819; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.curr___8910 = (r0);
    s.lastBrkId = 1943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1943]) return breakpoint(s, 14, 1943, r0);
  case 14:
    r0 = (s.curr___8910 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.hs___8893);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.curr___8910);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1944]) return breakpoint(s, 15, 1944, r0);
  case 15:
    s.tmp_3 = settings_writeNumber__P1829_mk(s);
    s.tmp_3.arg0 = "high-score";
    r0 = pxsim_pxtrt_ldlocRef(s.hs___8893);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 820; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
  case 3:
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_saveHighScore__P2202.info = {"start":6187,"length":383,"line":204,"column":4,"endLine":214,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"saveHighScore","argumentNames":[]}

function info_saveHighScore__P2202_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_saveHighScore__P2202, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  hs___8893: undefined,
  curr___8910: undefined,
} }





function inline__P8897(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = info_PlayerInfo_hasScore__P2244_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 814; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
inline__P8897.info = {"start":6312,"length":22,"line":208,"column":24,"endLine":208,"endColumn":46,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function inline__P8897_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8897, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P8903(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.caps[0];
    s.tmp_2 = Math_max__P125_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2.arg0 = r0;
    s.tmp_3 = info_PlayerInfo_score__P2241_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 816; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 817; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
inline__P8903.info = {"start":6361,"length":33,"line":209,"column":25,"endLine":209,"endColumn":58,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function inline__P8903_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P8903, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function settings_writeNumber__P1829(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[975]) return breakpoint(s, 1, 975, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P1827_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P177_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.callLocIdx = 167; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 168; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P1829.info = {"start":2087,"length":122,"line":82,"column":4,"endLine":84,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P1829_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P1829, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P1827(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[971]) return breakpoint(s, 3, 971, r0);
  case 3:
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[972]) return breakpoint(s, 4, 972, r0);
  case 4:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[973]) return breakpoint(s, 5, 973, r0);
  case 5:
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P1827.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P1827_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P1827, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P177(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.off___8931 = undefined;
    s.n___8933 = undefined;
    s.unnamed2860___U2 = undefined;
    s.unnamed2861___U3 = undefined;
    s.buf___8943 = undefined;
    s.n___8949 = undefined;
    s.unnamed2862___U6 = undefined;
    s.unnamed2863___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[322]) return breakpoint(s, 5, 322, r0);
  case 5:
    s.off___8931 = (0);
    s.lastBrkId = 323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[323]) return breakpoint(s, 6, 323, r0);
  case 6:
    s.n___8933 = (undefined);
    s.unnamed2860___U2 = (s.arg0);
    s.unnamed2861___U3 = (0);
    s.lastBrkId = 324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[324]) return breakpoint(s, 7, 324, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed2861___U3;
    r0 = pxsim_Array__length(s.unnamed2860___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2860___U2, s.unnamed2861___U3);
    s.n___8933 = (r0);
    s.lastBrkId = 325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[325]) return breakpoint(s, 8, 325, r0);
  case 8:
    s.tmp_2 = r0 = s.off___8931;
    s.tmp_4 = msgpack_packNumberCore__P3681_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___8931;
    s.tmp_4.arg2 = s.n___8933;
    s.callLocIdx = 26; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___8931 = (r0);
    r0 = (s.unnamed2861___U3 + 1);
    s.unnamed2861___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed2860___U2 = (undefined);
    s.lastBrkId = 326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[326]) return breakpoint(s, 10, 326, r0);
  case 10:
    r0 = pxsim.control.createBuffer(s.off___8931);
    s.buf___8943 = (r0);
    s.lastBrkId = 327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[327]) return breakpoint(s, 11, 327, r0);
  case 11:
    s.off___8931 = (0);
    s.lastBrkId = 328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[328]) return breakpoint(s, 12, 328, r0);
  case 12:
    s.n___8949 = (undefined);
    s.unnamed2862___U6 = (s.arg0);
    s.unnamed2863___U7 = (0);
    s.lastBrkId = 329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[329]) return breakpoint(s, 13, 329, r0);
  case 13:
  case 3:
    s.tmp_0 = r0 = s.unnamed2863___U7;
    r0 = pxsim_Array__length(s.unnamed2862___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2862___U6, s.unnamed2863___U7);
    s.n___8949 = (r0);
    s.lastBrkId = 330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[330]) return breakpoint(s, 14, 330, r0);
  case 14:
    s.tmp_2 = r0 = s.off___8931;
    s.tmp_4 = msgpack_packNumberCore__P3681_mk(s);
    s.tmp_4.arg0 = s.buf___8943;
    s.tmp_4.arg1 = s.off___8931;
    s.tmp_4.arg2 = s.n___8949;
    s.callLocIdx = 27; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___8931 = (r0);
    r0 = (s.unnamed2863___U7 + 1);
    s.unnamed2863___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed2862___U6 = (undefined);
    s.lastBrkId = 331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[331]) return breakpoint(s, 16, 331, r0);
  case 16:
    r0 = s.buf___8943;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P177.info = {"start":3427,"length":330,"line":117,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P177_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P177, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___8931: undefined,
  n___8933: undefined,
  unnamed2860___U2: undefined,
  unnamed2861___U3: undefined,
  buf___8943: undefined,
  n___8949: undefined,
  unnamed2862___U6: undefined,
  unnamed2863___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P3681(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tag___8963 = undefined;
    s.fmt___9006 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[285]) return breakpoint(s, 24, 285, r0);
  case 24:
    s.tag___8963 = (203);
    s.lastBrkId = 286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[286]) return breakpoint(s, 25, 286, r0);
  case 25:
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[287]) return breakpoint(s, 26, 287, r0);
  case 26:
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[288]) return breakpoint(s, 27, 288, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[289]) return breakpoint(s, 28, 289, r0);
  case 28:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    s.lastBrkId = 290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[290]) return breakpoint(s, 29, 290, r0);
  case 29:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    s.lastBrkId = 291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[291]) return breakpoint(s, 30, 291, r0);
  case 30:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[292]) return breakpoint(s, 31, 292, r0);
  case 31:
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[293]) return breakpoint(s, 32, 293, r0);
  case 32:
    s.tag___8963 = (204);
    { step = 11; continue; }
  case 8:
    s.lastBrkId = 294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[294]) return breakpoint(s, 33, 294, r0);
  case 33:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[295]) return breakpoint(s, 34, 295, r0);
  case 34:
    s.tag___8963 = (205);
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[296]) return breakpoint(s, 35, 296, r0);
  case 35:
    s.tag___8963 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    s.lastBrkId = 297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[297]) return breakpoint(s, 36, 297, r0);
  case 36:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[298]) return breakpoint(s, 37, 298, r0);
  case 37:
    s.tag___8963 = (208);
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[299]) return breakpoint(s, 38, 299, r0);
  case 38:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[300]) return breakpoint(s, 39, 300, r0);
  case 39:
    s.tag___8963 = (209);
    { step = 15; continue; }
  case 14:
    s.lastBrkId = 301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[301]) return breakpoint(s, 40, 301, r0);
  case 40:
    s.tag___8963 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.lastBrkId = 302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[302]) return breakpoint(s, 41, 302, r0);
  case 41:
    s.tmp_0 = msgpack_tagFormat__P3680_mk(s);
    s.tmp_0.arg0 = s.tag___8963;
    s.callLocIdx = 22; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.fmt___9006 = (r0);
    s.lastBrkId = 303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[303]) return breakpoint(s, 43, 303, r0);
  case 43:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[304]) return breakpoint(s, 44, 304, r0);
  case 44:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___8963);
    s.lastBrkId = 305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[305]) return breakpoint(s, 45, 305, r0);
  case 45:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___9006;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.lastBrkId = 306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[306]) return breakpoint(s, 46, 306, r0);
  case 46:
    s.tmp_1 = pins_sizeOf__P168_mk(s);
    s.tmp_1.arg0 = s.fmt___9006;
    s.callLocIdx = 23; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P3681.info = {"start":1632,"length":951,"line":56,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P3681_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P3681, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___8963: undefined,
  fmt___9006: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_Melody_play__P1605(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[600]) return breakpoint(s, 1, 600, r0);
  case 1:
    s.tmp_0 = music_Melody_playCore__P3781_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = false;
    s.callLocIdx = 91; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_play__P1605.info = {"start":8858,"length":71,"line":278,"column":8,"endLine":280,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"play","argumentNames":["this","volume"]}

function music_Melody_play__P1605_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_play__P1605, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_Melody_playCore__P3781(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___7349 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[590]) return breakpoint(s, 1, 590, r0);
  case 1:
    s.tmp_0 = music_Melody_stop__P1603_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 86; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[591]) return breakpoint(s, 3, 591, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(music_MelodyPlayer__C1608_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_MelodyPlayer_constructor__P1611_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 87; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["_player"] = (s.tmp_0);
    s.p___7349 = (s.tmp_0);
    s.lastBrkId = 592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[592]) return breakpoint(s, 5, 592, r0);
  case 5:
    s.tmp_0 = music_Melody_registerMelody__P3779_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 88; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[593]) return breakpoint(s, 7, 593, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(4, inline__P7359);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.p___7349);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.arg2);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_playCore__P3781.info = {"start":7682,"length":434,"line":242,"column":8,"endLine":254,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playCore","argumentNames":["this","volume","loop"]}

function music_Melody_playCore__P3781_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_playCore__P3781, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  p___7349: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P7359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[594]) return breakpoint(s, 5, 594, r0);
  case 5:
  case 1:
    s.lastBrkId = 595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[595]) return breakpoint(s, 6, 595, r0);
  case 6:
    r0 = s.caps[0].fields["_player"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[596]) return breakpoint(s, 7, 596, r0);
  case 7:
    s.tmp_2 = music_MelodyPlayer_play__P1613_mk(s);
    s.tmp_2.arg0 = s.caps[1];
    s.tmp_2.arg1 = s.caps[2];
    s.callLocIdx = 89; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[597]) return breakpoint(s, 9, 597, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.caps[3]);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[598]) return breakpoint(s, 10, 598, r0);
  case 10:
    { step = 4; continue; }
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[599]) return breakpoint(s, 11, 599, r0);
  case 11:
    s.tmp_2 = music_Melody_unregisterMelody__P3780_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 90; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7359.info = {"start":7885,"length":220,"line":246,"column":34,"endLine":253,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function inline__P7359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function music_Melody_unregisterMelody__P3780(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[588]) return breakpoint(s, 3, 588, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.music_Melody_playingMelodies___3782);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[589]) return breakpoint(s, 4, 589, r0);
  case 4:
    r0 = pxsim_Array_.removeElement(globals.music_Melody_playingMelodies___3782, s.arg0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_unregisterMelody__P3780.info = {"start":7471,"length":201,"line":235,"column":8,"endLine":240,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"unregisterMelody","argumentNames":["this"]}

function music_Melody_unregisterMelody__P3780_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_unregisterMelody__P3780, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_registerMelody__P3779(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[582]) return breakpoint(s, 5, 582, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.music_Melody_playingMelodies___3782);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[583]) return breakpoint(s, 6, 583, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals.music_Melody_playingMelodies___3782 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[584]) return breakpoint(s, 7, 584, r0);
  case 7:
    r0 = pxsim_Array__length(globals.music_Melody_playingMelodies___3782);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[585]) return breakpoint(s, 8, 585, r0);
  case 8:
    s.tmp_2 = music_Melody_stop__P1603_mk(s);
    s.tmp_3 = r0 = globals.music_Melody_playingMelodies___3782;
    r0 = pxsim_Array__length(globals.music_Melody_playingMelodies___3782);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 85; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[586]) return breakpoint(s, 10, 586, r0);
  case 10:
    r0 = pxsim_Array_.removeElement(globals.music_Melody_playingMelodies___3782, s.arg0);
    s.lastBrkId = 587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[587]) return breakpoint(s, 11, 587, r0);
  case 11:
    r0 = pxsim_Array__push(globals.music_Melody_playingMelodies___3782, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_registerMelody__P3779.info = {"start":6889,"length":573,"line":223,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"registerMelody","argumentNames":["this"]}

function music_Melody_registerMelody__P3779_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_registerMelody__P3779, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function music_MelodyPlayer_play__P1613(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.notes___7388 = undefined;
    s.pos___7392 = undefined;
    s.duration___7393 = undefined;
    s.octave___7394 = undefined;
    s.tempo___7395 = undefined;
    s.hz___7396 = undefined;
    s.endHz___7397 = undefined;
    s.ms___7400 = undefined;
    s.timePos___7401 = undefined;
    s.startTime___7402 = undefined;
    s.now___7405 = undefined;
    s.envA___7406 = undefined;
    s.envD___7407 = undefined;
    s.envS___7408 = undefined;
    s.envR___7409 = undefined;
    s.soundWave___7410 = undefined;
    s.sndInstr___7411 = undefined;
    s.sndInstrPtr___7417 = undefined;
    s.addForm___7418 = undefined;
    s.scanNextWord___7478 = undefined;
    s.token___7535 = undefined;
    s.tokenKind___7536 = undefined;
    s.consumeToken___7539 = undefined;
    s.currNote___7615 = undefined;
    s.prevNote___7617 = undefined;
    s.timeLeft___7620 = undefined;
    s.note___7634 = undefined;
    s.i___7638 = undefined;
    s.noteChar___7644 = undefined;
    s.keyNumber___7718 = undefined;
    s.currMs___7735 = undefined;
    s.beat___7739 = undefined;
    s.timeLeft___7796 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1608_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[616]) return breakpoint(s, 60, 616, r0);
  case 60:
    r0 = s.arg0.fields["melody"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[617]) return breakpoint(s, 61, 617, r0);
  case 61:
    { step = 59; continue; }
  case 1:
  case 2:
    s.lastBrkId = 618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[618]) return breakpoint(s, 62, 618, r0);
  case 62:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_clamp__P122_mk(s);
    s.tmp_6.arg0 = 0;
    s.tmp_6.arg1 = 255;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_8 = r0;
    s.tmp_10 = music_volume__P1593_mk(s);
    s.callLocIdx = 92; s.pc = 64; return s.tmp_10;
  case 64:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_8 * s.tmp_9);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 >> 8);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 93; s.pc = 63; return s.tmp_6;
  case 63:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_4, s.tmp_5);
    s.lastBrkId = 619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[619]) return breakpoint(s, 65, 619, r0);
  case 65:
    r0 = s.arg0.fields["melody"];
    r0 = r0.fields["_text"];
    s.notes___7388 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.pos___7392 = (r0);
    s.lastBrkId = 620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[620]) return breakpoint(s, 66, 620, r0);
  case 66:
    r0 = pxsim_pxtrt_stlocRef(s.pos___7392, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.duration___7393 = (r0);
    s.lastBrkId = 621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[621]) return breakpoint(s, 67, 621, r0);
  case 67:
    r0 = pxsim_pxtrt_stlocRef(s.duration___7393, 4);
    r0 = pxsim_pxtrt.mklocRef();
    s.octave___7394 = (r0);
    s.lastBrkId = 622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[622]) return breakpoint(s, 68, 622, r0);
  case 68:
    r0 = pxsim_pxtrt_stlocRef(s.octave___7394, 4);
    r0 = pxsim_pxtrt.mklocRef();
    s.tempo___7395 = (r0);
    s.lastBrkId = 623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[623]) return breakpoint(s, 69, 623, r0);
  case 69:
    r0 = pxsim_pxtrt_stlocRef(s.tempo___7395, 120);
    r0 = pxsim_pxtrt.mklocRef();
    s.hz___7396 = (r0);
    s.lastBrkId = 624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[624]) return breakpoint(s, 70, 624, r0);
  case 70:
    r0 = pxsim_pxtrt_stlocRef(s.hz___7396, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.endHz___7397 = (r0);
    s.lastBrkId = 625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[625]) return breakpoint(s, 71, 625, r0);
  case 71:
    r0 = pxsim_pxtrt_stlocRef(s.endHz___7397, -1);
    r0 = pxsim_pxtrt.mklocRef();
    s.ms___7400 = (r0);
    s.lastBrkId = 626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[626]) return breakpoint(s, 72, 626, r0);
  case 72:
    r0 = pxsim_pxtrt_stlocRef(s.ms___7400, 0);
    s.lastBrkId = 627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[627]) return breakpoint(s, 73, 627, r0);
  case 73:
    s.timePos___7401 = (0);
    s.lastBrkId = 628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[628]) return breakpoint(s, 74, 628, r0);
  case 74:
    r0 = pxsim.control.millis();
    s.startTime___7402 = (r0);
    s.lastBrkId = 629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[629]) return breakpoint(s, 75, 629, r0);
  case 75:
    s.now___7405 = (0);
    r0 = pxsim_pxtrt.mklocRef();
    s.envA___7406 = (r0);
    s.lastBrkId = 630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[630]) return breakpoint(s, 76, 630, r0);
  case 76:
    r0 = pxsim_pxtrt_stlocRef(s.envA___7406, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.envD___7407 = (r0);
    s.lastBrkId = 631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[631]) return breakpoint(s, 77, 631, r0);
  case 77:
    r0 = pxsim_pxtrt_stlocRef(s.envD___7407, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.envS___7408 = (r0);
    s.lastBrkId = 632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[632]) return breakpoint(s, 78, 632, r0);
  case 78:
    r0 = pxsim_pxtrt_stlocRef(s.envS___7408, 255);
    r0 = pxsim_pxtrt.mklocRef();
    s.envR___7409 = (r0);
    s.lastBrkId = 633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[633]) return breakpoint(s, 79, 633, r0);
  case 79:
    r0 = pxsim_pxtrt_stlocRef(s.envR___7409, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.soundWave___7410 = (r0);
    s.lastBrkId = 634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[634]) return breakpoint(s, 80, 634, r0);
  case 80:
    r0 = pxsim_pxtrt_stlocRef(s.soundWave___7410, 1);
    s.lastBrkId = 635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[635]) return breakpoint(s, 81, 635, r0);
  case 81:
    r0 = pxsim.control.createBuffer(60);
    s.sndInstr___7411 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.sndInstrPtr___7417 = (r0);
    s.lastBrkId = 636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[636]) return breakpoint(s, 82, 636, r0);
  case 82:
    r0 = pxsim_pxtrt_stlocRef(s.sndInstrPtr___7417, 0);
    s.lastBrkId = 637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[637]) return breakpoint(s, 83, 637, r0);
  case 83:
    r0 = pxsim_pxtcore_mkAction(10, inline__P7419);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.hz___7396);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.endHz___7397);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.ms___7400);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.duration___7393);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.tempo___7395);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.envR___7409);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 6, s.sndInstrPtr___7417);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 7, s.sndInstr___7411);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 8, s.soundWave___7410);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 9, s.arg1);
    s.addForm___7418 = (s.tmp_0);
    s.lastBrkId = 646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[646]) return breakpoint(s, 84, 646, r0);
  case 84:
    r0 = pxsim_pxtcore_mkAction(3, inline__P7479);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.pos___7392);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.notes___7388);
    s.scanNextWord___7478 = (s.tmp_0);
    r0 = pxsim_pxtrt.mklocRef();
    s.token___7535 = (r0);
    s.lastBrkId = 664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[664]) return breakpoint(s, 85, 664, r0);
  case 85:
    s.tmp_0 = r0 = s.token___7535;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.tokenKind___7536 = (r0);
    s.lastBrkId = 665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[665]) return breakpoint(s, 86, 665, r0);
  case 86:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 0);
    s.lastBrkId = 666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[666]) return breakpoint(s, 87, 666, r0);
  case 87:
    r0 = pxsim_pxtcore_mkAction(13, inline__P7540);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.token___7535);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tokenKind___7536);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.octave___7394);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.duration___7393);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.ms___7400);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.tempo___7395);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 6, s.hz___7396);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 7, s.soundWave___7410);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 8, s.envA___7406);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 9, s.envD___7407);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 10, s.envS___7408);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 11, s.envR___7409);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 12, s.endHz___7397);
    s.consumeToken___7539 = (s.tmp_0);
    s.lastBrkId = 698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[698]) return breakpoint(s, 88, 698, r0);
  case 88:
  case 3:
    s.lastBrkId = 699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[699]) return breakpoint(s, 89, 699, r0);
  case 89:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 58; continue; }
    s.lastBrkId = 700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[700]) return breakpoint(s, 90, 700, r0);
  case 90:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.scanNextWord___7478;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 101; s.pc = 91; return s.tmp_0;
  case 91:
    r0 = s.retval;
    s.currNote___7615 = (r0);
    s.lastBrkId = 701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[701]) return breakpoint(s, 92, 701, r0);
  case 92:
    s.prevNote___7617 = (false);
    s.lastBrkId = 702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[702]) return breakpoint(s, 93, 702, r0);
  case 93:
    r0 = pxsim_numops_toBoolDecr(s.currNote___7615);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[703]) return breakpoint(s, 94, 703, r0);
  case 94:
    r0 = (s.timePos___7401 - s.now___7405);
    s.timeLeft___7620 = (r0);
    s.lastBrkId = 704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[704]) return breakpoint(s, 95, 704, r0);
  case 95:
    r0 = (s.timeLeft___7620 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[705]) return breakpoint(s, 96, 705, r0);
  case 96:
    s.tmp_1 = pause__P402_mk(s);
    s.tmp_1.arg0 = s.timeLeft___7620;
    s.callLocIdx = 102; s.pc = 97; return s.tmp_1;
  case 97:
    r0 = s.retval;
  case 4:
  case 5:
    s.lastBrkId = 706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[706]) return breakpoint(s, 98, 706, r0);
  case 98:
    r0 = s.arg0.fields["onPlayFinished"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[707]) return breakpoint(s, 99, 707, r0);
  case 99:
    s.tmp_1 = if_onPlayFinished_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "onPlayFinished"), 1);
      s.callLocIdx = 103; s.pc = 100; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["onPlayFinished"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["onPlayFinished"], 1); s.callLocIdx = 103; s.pc = 100; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 103; s.pc = 100; return s.tmp_1;; }
     else { s.callLocIdx = 103; s.pc = 100; return s.tmp_1; }
    }
  case 100:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[708]) return breakpoint(s, 101, 708, r0);
  case 101:
    { step = 59; continue; }
  case 8:
  case 9:
    s.lastBrkId = 709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[709]) return breakpoint(s, 102, 709, r0);
  case 102:
    r0 = pxsim_pxtrt_stlocRef(s.hz___7396, -1);
    s.lastBrkId = 710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[710]) return breakpoint(s, 103, 710, r0);
  case 103:
    s.note___7634 = (0);
    s.lastBrkId = 711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[711]) return breakpoint(s, 104, 711, r0);
  case 104:
    s.tmp_0 = r0 = s.token___7535;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[712]) return breakpoint(s, 105, 712, r0);
  case 105:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 0);
    s.lastBrkId = 713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[713]) return breakpoint(s, 106, 713, r0);
  case 106:
    s.i___7638 = (0);
    s.lastBrkId = 714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[714]) return breakpoint(s, 107, 714, r0);
  case 107:
  case 10:
    s.lastBrkId = 715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[715]) return breakpoint(s, 108, 715, r0);
  case 108:
    s.tmp_1 = r0 = s.i___7638;
    r0 = pxsim_String_.length(s.currNote___7615);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[716]) return breakpoint(s, 109, 716, r0);
  case 109:
    r0 = pxsim_String_.charAt(s.currNote___7615, s.i___7638);
    s.noteChar___7644 = (r0);
    s.lastBrkId = 717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[717]) return breakpoint(s, 110, 717, r0);
  case 110:
    s.tmp_0 = r0 = s.noteChar___7644;
    r0 = pxsim_pxtcore.switch_eq("c", s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq("C", s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq("d", s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq("D", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("e", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("E", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = pxsim_pxtcore.switch_eq("f", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("F", s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = pxsim_pxtcore.switch_eq("g", s.tmp_0);
    if (r0) { step = 19; continue; }
    r0 = pxsim_pxtcore.switch_eq("G", s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = pxsim_pxtcore.switch_eq("a", s.tmp_0);
    if (r0) { step = 21; continue; }
    r0 = pxsim_pxtcore.switch_eq("A", s.tmp_0);
    if (r0) { step = 22; continue; }
    r0 = pxsim_pxtcore.switch_eq("B", s.tmp_0);
    if (r0) { step = 23; continue; }
    r0 = pxsim_pxtcore.switch_eq("r", s.tmp_0);
    if (r0) { step = 24; continue; }
    r0 = pxsim_pxtcore.switch_eq("R", s.tmp_0);
    if (r0) { step = 25; continue; }
    r0 = pxsim_pxtcore.switch_eq("#", s.tmp_0);
    if (r0) { step = 26; continue; }
    r0 = pxsim_pxtcore.switch_eq("b", s.tmp_0);
    if (r0) { step = 27; continue; }
    r0 = pxsim_pxtcore.switch_eq(",", s.tmp_0);
    if (r0) { step = 30; continue; }
    r0 = pxsim_pxtcore.switch_eq("!", s.tmp_0);
    if (r0) { step = 31; continue; }
    r0 = pxsim_pxtcore.switch_eq("@", s.tmp_0);
    if (r0) { step = 32; continue; }
    r0 = pxsim_pxtcore.switch_eq("~", s.tmp_0);
    if (r0) { step = 33; continue; }
    r0 = pxsim_pxtcore.switch_eq(":", s.tmp_0);
    if (r0) { step = 34; continue; }
    r0 = pxsim_pxtcore.switch_eq("-", s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = pxsim_pxtcore.switch_eq("^", s.tmp_0);
    if (r0) { step = 36; continue; }
    r0 = s.tmp_0;
    { step = 37; continue; }
  case 11:
  case 12:
    s.lastBrkId = 718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[718]) return breakpoint(s, 111, 718, r0);
  case 111:
    s.note___7634 = (1);
    s.lastBrkId = 719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[719]) return breakpoint(s, 112, 719, r0);
  case 112:
    s.prevNote___7617 = (true);
    s.lastBrkId = 720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[720]) return breakpoint(s, 113, 720, r0);
  case 113:
    { step = 40; continue; }
  case 13:
  case 14:
    s.lastBrkId = 721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[721]) return breakpoint(s, 114, 721, r0);
  case 114:
    s.note___7634 = (3);
    s.lastBrkId = 722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[722]) return breakpoint(s, 115, 722, r0);
  case 115:
    s.prevNote___7617 = (true);
    s.lastBrkId = 723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[723]) return breakpoint(s, 116, 723, r0);
  case 116:
    { step = 40; continue; }
  case 15:
  case 16:
    s.lastBrkId = 724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[724]) return breakpoint(s, 117, 724, r0);
  case 117:
    s.note___7634 = (5);
    s.lastBrkId = 725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[725]) return breakpoint(s, 118, 725, r0);
  case 118:
    s.prevNote___7617 = (true);
    s.lastBrkId = 726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[726]) return breakpoint(s, 119, 726, r0);
  case 119:
    { step = 40; continue; }
  case 17:
  case 18:
    s.lastBrkId = 727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[727]) return breakpoint(s, 120, 727, r0);
  case 120:
    s.note___7634 = (6);
    s.lastBrkId = 728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[728]) return breakpoint(s, 121, 728, r0);
  case 121:
    s.prevNote___7617 = (true);
    s.lastBrkId = 729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[729]) return breakpoint(s, 122, 729, r0);
  case 122:
    { step = 40; continue; }
  case 19:
  case 20:
    s.lastBrkId = 730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[730]) return breakpoint(s, 123, 730, r0);
  case 123:
    s.note___7634 = (8);
    s.lastBrkId = 731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[731]) return breakpoint(s, 124, 731, r0);
  case 124:
    s.prevNote___7617 = (true);
    s.lastBrkId = 732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[732]) return breakpoint(s, 125, 732, r0);
  case 125:
    { step = 40; continue; }
  case 21:
  case 22:
    s.lastBrkId = 733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[733]) return breakpoint(s, 126, 733, r0);
  case 126:
    s.note___7634 = (10);
    s.lastBrkId = 734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[734]) return breakpoint(s, 127, 734, r0);
  case 127:
    s.prevNote___7617 = (true);
    s.lastBrkId = 735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[735]) return breakpoint(s, 128, 735, r0);
  case 128:
    { step = 40; continue; }
  case 23:
    s.lastBrkId = 736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[736]) return breakpoint(s, 129, 736, r0);
  case 129:
    s.note___7634 = (12);
    s.lastBrkId = 737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[737]) return breakpoint(s, 130, 737, r0);
  case 130:
    s.prevNote___7617 = (true);
    s.lastBrkId = 738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[738]) return breakpoint(s, 131, 738, r0);
  case 131:
    { step = 40; continue; }
  case 24:
  case 25:
    s.lastBrkId = 739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[739]) return breakpoint(s, 132, 739, r0);
  case 132:
    r0 = pxsim_pxtrt_stlocRef(s.hz___7396, 0);
    s.lastBrkId = 740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[740]) return breakpoint(s, 133, 740, r0);
  case 133:
    s.prevNote___7617 = (false);
    s.lastBrkId = 741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[741]) return breakpoint(s, 134, 741, r0);
  case 134:
    { step = 40; continue; }
  case 26:
    s.lastBrkId = 742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[742]) return breakpoint(s, 135, 742, r0);
  case 135:
    r0 = (s.note___7634 + 1);
    s.note___7634 = (r0);
    s.lastBrkId = 743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[743]) return breakpoint(s, 136, 743, r0);
  case 136:
    s.prevNote___7617 = (false);
    s.lastBrkId = 744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[744]) return breakpoint(s, 137, 744, r0);
  case 137:
    { step = 40; continue; }
  case 27:
    s.lastBrkId = 745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[745]) return breakpoint(s, 138, 745, r0);
  case 138:
    r0 = pxsim_numops_toBoolDecr(s.prevNote___7617);
    if (!r0) { step = 28; continue; }
    s.lastBrkId = 746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[746]) return breakpoint(s, 139, 746, r0);
  case 139:
    r0 = (s.note___7634 - 1);
    s.note___7634 = (r0);
    { step = 29; continue; }
  case 28:
    s.lastBrkId = 747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[747]) return breakpoint(s, 140, 747, r0);
  case 140:
    s.note___7634 = (12);
    s.lastBrkId = 748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[748]) return breakpoint(s, 141, 748, r0);
  case 141:
    s.prevNote___7617 = (true);
  case 29:
    s.lastBrkId = 749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[749]) return breakpoint(s, 142, 749, r0);
  case 142:
    { step = 40; continue; }
  case 30:
    s.lastBrkId = 750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[750]) return breakpoint(s, 143, 750, r0);
  case 143:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 104; s.pc = 144; return s.tmp_0;
  case 144:
    r0 = s.retval;
    s.lastBrkId = 751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[751]) return breakpoint(s, 145, 751, r0);
  case 145:
    s.prevNote___7617 = (false);
    s.lastBrkId = 752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[752]) return breakpoint(s, 146, 752, r0);
  case 146:
    { step = 40; continue; }
  case 31:
    s.lastBrkId = 753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[753]) return breakpoint(s, 147, 753, r0);
  case 147:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 4);
    s.lastBrkId = 754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[754]) return breakpoint(s, 148, 754, r0);
  case 148:
    s.prevNote___7617 = (false);
    s.lastBrkId = 755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[755]) return breakpoint(s, 149, 755, r0);
  case 149:
    { step = 40; continue; }
  case 32:
    s.lastBrkId = 756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[756]) return breakpoint(s, 150, 756, r0);
  case 150:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 105; s.pc = 151; return s.tmp_0;
  case 151:
    r0 = s.retval;
    s.lastBrkId = 757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[757]) return breakpoint(s, 152, 757, r0);
  case 152:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 8);
    s.lastBrkId = 758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[758]) return breakpoint(s, 153, 758, r0);
  case 153:
    s.prevNote___7617 = (false);
    s.lastBrkId = 759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[759]) return breakpoint(s, 154, 759, r0);
  case 154:
    { step = 40; continue; }
  case 33:
    s.lastBrkId = 760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[760]) return breakpoint(s, 155, 760, r0);
  case 155:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 106; s.pc = 156; return s.tmp_0;
  case 156:
    r0 = s.retval;
    s.lastBrkId = 761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[761]) return breakpoint(s, 157, 761, r0);
  case 157:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 7);
    s.lastBrkId = 762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[762]) return breakpoint(s, 158, 762, r0);
  case 158:
    s.prevNote___7617 = (false);
    s.lastBrkId = 763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[763]) return breakpoint(s, 159, 763, r0);
  case 159:
    { step = 40; continue; }
  case 34:
    s.lastBrkId = 764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[764]) return breakpoint(s, 160, 764, r0);
  case 160:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 107; s.pc = 161; return s.tmp_0;
  case 161:
    r0 = s.retval;
    s.lastBrkId = 765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[765]) return breakpoint(s, 162, 765, r0);
  case 162:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 2);
    s.lastBrkId = 766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[766]) return breakpoint(s, 163, 766, r0);
  case 163:
    s.prevNote___7617 = (false);
    s.lastBrkId = 767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[767]) return breakpoint(s, 164, 767, r0);
  case 164:
    { step = 40; continue; }
  case 35:
    s.lastBrkId = 768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[768]) return breakpoint(s, 165, 768, r0);
  case 165:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 108; s.pc = 166; return s.tmp_0;
  case 166:
    r0 = s.retval;
    s.lastBrkId = 769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[769]) return breakpoint(s, 167, 769, r0);
  case 167:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 3);
    s.lastBrkId = 770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[770]) return breakpoint(s, 168, 770, r0);
  case 168:
    s.prevNote___7617 = (false);
    s.lastBrkId = 771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[771]) return breakpoint(s, 169, 771, r0);
  case 169:
    { step = 40; continue; }
  case 36:
    s.lastBrkId = 772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[772]) return breakpoint(s, 170, 772, r0);
  case 170:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 109; s.pc = 171; return s.tmp_0;
  case 171:
    r0 = s.retval;
    s.lastBrkId = 773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[773]) return breakpoint(s, 172, 773, r0);
  case 172:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 5);
    s.lastBrkId = 774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[774]) return breakpoint(s, 173, 774, r0);
  case 173:
    { step = 40; continue; }
  case 37:
    s.lastBrkId = 775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[775]) return breakpoint(s, 174, 775, r0);
  case 174:
    r0 = pxsim_pxtrt_ldlocRef(s.tokenKind___7536);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    s.lastBrkId = 776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[776]) return breakpoint(s, 175, 776, r0);
  case 175:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___7536, 1);
  case 38:
  case 39:
    s.lastBrkId = 777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[777]) return breakpoint(s, 176, 777, r0);
  case 176:
    s.tmp_0 = r0 = s.token___7535;
    r0 = pxsim_pxtrt_ldlocRef(s.token___7535);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 177);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 177:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.noteChar___7644) && (s.noteChar___7644).vtable) {
    setupResume(s, 178);
    pxsim_String__stringConv(s.noteChar___7644);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.noteChar___7644) + ""; }
  case 178:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[778]) return breakpoint(s, 179, 778, r0);
  case 179:
    s.prevNote___7617 = (false);
    s.lastBrkId = 779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[779]) return breakpoint(s, 180, 779, r0);
  case 180:
  case 40:
    s.lastBrkId = 780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[780]) return breakpoint(s, 181, 780, r0);
  case 181:
    r0 = (s.i___7638 + 1);
    s.i___7638 = (r0);
    { step = 10; continue; }
  case 41:
    s.lastBrkId = 781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[781]) return breakpoint(s, 182, 781, r0);
  case 182:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___7539;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 110; s.pc = 183; return s.tmp_0;
  case 183:
    r0 = s.retval;
    s.lastBrkId = 782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[782]) return breakpoint(s, 184, 782, r0);
  case 184:
    s.tmp_0 = r0 = s.note___7634;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 42; continue; }
    r0 = s.tmp_0;
    { step = 43; continue; }
  case 42:
    r0 = pxsim_pxtrt_ldlocRef(s.hz___7396);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
  case 43:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 46; continue; }
    s.lastBrkId = 783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[783]) return breakpoint(s, 185, 783, r0);
  case 185:
    s.tmp_3 = r0 = s.note___7634;
    r0 = pxsim_pxtrt_ldlocRef(s.octave___7394);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = (12 * s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.keyNumber___7718 = (r0);
    s.lastBrkId = 784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[784]) return breakpoint(s, 186, 784, r0);
  case 186:
    s.tmp_1 = r0 = globals.freqs___3767;
    r0 = (s.keyNumber___7718 * 2);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 4, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 44; continue; }
    r0 = s.tmp_0;
    { step = 45; continue; }
  case 44:
    r0 = 0;
  case 45:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.hz___7396, s.tmp_3);
  case 46:
  case 47:
    s.lastBrkId = 785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[785]) return breakpoint(s, 187, 785, r0);
  case 187:
    r0 = pxsim_pxtrt_ldlocRef(s.ms___7400);
    s.currMs___7735 = (r0);
    s.lastBrkId = 786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[786]) return breakpoint(s, 188, 786, r0);
  case 188:
    r0 = (s.currMs___7735 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 48; continue; }
    s.lastBrkId = 787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[787]) return breakpoint(s, 189, 787, r0);
  case 189:
    r0 = pxsim_pxtrt_ldlocRef(s.tempo___7395);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(15000, s.tmp_1);
    s.beat___7739 = (r0);
    s.lastBrkId = 788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[788]) return breakpoint(s, 190, 788, r0);
  case 190:
    r0 = pxsim_pxtrt_ldlocRef(s.duration___7393);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.beat___7739);
    s.currMs___7735 = (r0);
  case 48:
  case 49:
    s.lastBrkId = 789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[789]) return breakpoint(s, 191, 789, r0);
  case 191:
    r0 = pxsim_pxtrt_ldlocRef(s.hz___7396);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 50; continue; }
    { step = 55; continue; }
  case 50:
    s.lastBrkId = 790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[790]) return breakpoint(s, 192, 790, r0);
  case 192:
    r0 = pxsim_pxtrt_ldlocRef(s.hz___7396);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 51; continue; }
    s.lastBrkId = 791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[791]) return breakpoint(s, 193, 791, r0);
  case 193:
    r0 = (s.timePos___7401 + s.currMs___7735);
    s.timePos___7401 = (r0);
    { step = 54; continue; }
  case 51:
    s.lastBrkId = 792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[792]) return breakpoint(s, 194, 792, r0);
  case 194:
    r0 = pxsim_pxtrt_ldlocRef(s.endHz___7397);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 52; continue; }
    s.lastBrkId = 793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[793]) return breakpoint(s, 195, 793, r0);
  case 195:
    s.tmp_2 = r0 = s.endHz___7397;
    r0 = pxsim_pxtrt_ldlocRef(s.hz___7396);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
  case 52:
  case 53:
    s.lastBrkId = 794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[794]) return breakpoint(s, 196, 794, r0);
  case 196:
    r0 = pxsim_pxtrt_stlocRef(s.sndInstrPtr___7417, 0);
    s.lastBrkId = 795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[795]) return breakpoint(s, 197, 795, r0);
  case 197:
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___7418;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___7406);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 255;
    s.tmp_0.arg3 = 0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 111; s.pc = 198; return s.tmp_0;
  case 198:
    r0 = s.retval;
    s.lastBrkId = 796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[796]) return breakpoint(s, 199, 796, r0);
  case 199:
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___7418;
    r0 = pxsim_pxtrt_ldlocRef(s.envD___7407);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 255;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___7408);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___7406);
    s.tmp_0.arg3 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 112; s.pc = 200; return s.tmp_0;
  case 200:
    r0 = s.retval;
    s.lastBrkId = 797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[797]) return breakpoint(s, 201, 797, r0);
  case 201:
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___7418;
    s.tmp_1 = r0 = s.currMs___7735;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___7406);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envD___7407);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___7408);
    s.tmp_0.arg1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___7408);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envD___7407);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___7406);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 113; s.pc = 202; return s.tmp_0;
  case 202:
    r0 = s.retval;
    s.lastBrkId = 798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[798]) return breakpoint(s, 203, 798, r0);
  case 203:
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___7418;
    r0 = pxsim_pxtrt_ldlocRef(s.envR___7409);
    s.tmp_0.arg0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___7408);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = s.currMs___7735;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 114; s.pc = 204; return s.tmp_0;
  case 204:
    r0 = s.retval;
    s.lastBrkId = 799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[799]) return breakpoint(s, 205, 799, r0);
  case 205:
    s.tmp_0 = music_MelodyPlayer_queuePlayInstructions__P3784_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.timePos___7401 - s.now___7405);
    s.tmp_0.arg1 = r0;
    s.tmp_1 = r0 = s.sndInstr___7411;
    r0 = pxsim_pxtrt_ldlocRef(s.sndInstrPtr___7417);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_1, 0, s.tmp_2);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 115; s.pc = 206; return s.tmp_0;
  case 206:
    r0 = s.retval;
    s.lastBrkId = 800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[800]) return breakpoint(s, 207, 800, r0);
  case 207:
    r0 = pxsim_pxtrt_stlocRef(s.endHz___7397, -1);
    s.lastBrkId = 801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[801]) return breakpoint(s, 208, 801, r0);
  case 208:
    r0 = (s.timePos___7401 + s.currMs___7735);
    s.timePos___7401 = (r0);
  case 54:
  case 55:
    s.lastBrkId = 802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[802]) return breakpoint(s, 209, 802, r0);
  case 209:
    r0 = (s.timePos___7401 - s.now___7405);
    s.timeLeft___7796 = (r0);
    s.lastBrkId = 803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[803]) return breakpoint(s, 210, 803, r0);
  case 210:
    r0 = (s.timeLeft___7796 > 200);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 56; continue; }
    s.lastBrkId = 804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[804]) return breakpoint(s, 211, 804, r0);
  case 211:
    s.tmp_1 = pause__P402_mk(s);
    r0 = (s.timeLeft___7796 - 100);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 116; s.pc = 212; return s.tmp_1;
  case 212:
    r0 = s.retval;
    s.lastBrkId = 805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[805]) return breakpoint(s, 213, 805, r0);
  case 213:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.startTime___7402);
    s.now___7405 = (r0);
  case 56:
  case 57:
    { step = 3; continue; }
  case 58:
  case 59:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_play__P1613.info = {"start":10980,"length":9006,"line":341,"column":8,"endLine":572,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"play","argumentNames":["this","volume"]}

function music_MelodyPlayer_play__P1613_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_play__P1613, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  notes___7388: undefined,
  pos___7392: undefined,
  duration___7393: undefined,
  octave___7394: undefined,
  tempo___7395: undefined,
  hz___7396: undefined,
  endHz___7397: undefined,
  ms___7400: undefined,
  timePos___7401: undefined,
  startTime___7402: undefined,
  now___7405: undefined,
  envA___7406: undefined,
  envD___7407: undefined,
  envS___7408: undefined,
  envR___7409: undefined,
  soundWave___7410: undefined,
  sndInstr___7411: undefined,
  sndInstrPtr___7417: undefined,
  addForm___7418: undefined,
  scanNextWord___7478: undefined,
  token___7535: undefined,
  tokenKind___7536: undefined,
  consumeToken___7539: undefined,
  currNote___7615: undefined,
  prevNote___7617: undefined,
  timeLeft___7620: undefined,
  note___7634: undefined,
  i___7638: undefined,
  noteChar___7644: undefined,
  keyNumber___7718: undefined,
  currMs___7735: undefined,
  beat___7739: undefined,
  timeLeft___7796: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P7419(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.freqStart___7424 = undefined;
    s.freqEnd___7426 = undefined;
    s.envelopeWidth___7428 = undefined;
    s.slope___7446 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[638]) return breakpoint(s, 7, 638, r0);
  case 7:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.freqStart___7424 = (r0);
    s.lastBrkId = 639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[639]) return breakpoint(s, 8, 639, r0);
  case 8:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.freqEnd___7426 = (r0);
    s.lastBrkId = 640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[640]) return breakpoint(s, 9, 640, r0);
  case 9:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(15000, s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[5]);
    s.tmp_6 = r0;
    r0 = (s.tmp_2 + s.tmp_6);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.envelopeWidth___7428 = (s.tmp_7);
    s.lastBrkId = 641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[641]) return breakpoint(s, 10, 641, r0);
  case 10:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (s.envelopeWidth___7428 != 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[642]) return breakpoint(s, 11, 642, r0);
  case 11:
    r0 = (s.freqEnd___7426 - s.freqStart___7424);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / s.envelopeWidth___7428);
    s.slope___7446 = (r0);
    s.lastBrkId = 643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[643]) return breakpoint(s, 12, 643, r0);
  case 12:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    r0 = (s.slope___7446 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.freqStart___7424 = (r0);
    s.lastBrkId = 644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[644]) return breakpoint(s, 13, 644, r0);
  case 13:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    s.tmp_2 = r0 = s.slope___7446;
    r0 = (s.arg3 + s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.freqEnd___7426 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[645]) return breakpoint(s, 14, 645, r0);
  case 14:
    s.tmp_0 = r0 = s.caps[6];
    s.tmp_2 = music_addNote__P3783_mk(s);
    s.tmp_2.arg0 = s.caps[7];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[6]);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.arg0;
    s.tmp_2.arg3 = s.arg1;
    s.tmp_2.arg4 = s.arg2;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[8]);
    s.tmp_2.arg5 = r0;
    s.tmp_2.arg6 = s.freqStart___7424;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[9]);
    s.tmp_2.arg7 = r0;
    s.tmp_2.arg8 = s.freqEnd___7426;
    s.callLocIdx = 94; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7419.info = {"start":11788,"length":643,"line":367,"column":28,"endLine":378,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["formDuration","beg","end","msOff"]}

function inline__P7419_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7419, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  freqStart___7424: undefined,
  freqEnd___7426: undefined,
  envelopeWidth___7428: undefined,
  slope___7446: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P7479(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___7488 = undefined;
    s.note___7505 = undefined;
    s.c___7511 = undefined;
    s.lastBrkId = 647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[647]) return breakpoint(s, 24, 647, r0);
  case 24:
    r0 = s.caps[0].fields["melody"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[648]) return breakpoint(s, 25, 648, r0);
  case 25:
    r0 = pxsim_String_.mkEmpty();
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[649]) return breakpoint(s, 26, 649, r0);
  case 26:
  case 3:
    s.lastBrkId = 650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[650]) return breakpoint(s, 27, 650, r0);
  case 27:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_String_.length(s.caps[2]);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[651]) return breakpoint(s, 28, 651, r0);
  case 28:
    s.tmp_6 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_7 = r0;
    r0 = pxsim_String_.charAt(s.tmp_6, s.tmp_7);
    s.c___7488 = (r0);
    s.lastBrkId = 652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[652]) return breakpoint(s, 29, 652, r0);
  case 29:
    r0 = (s.c___7488 != " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = (s.c___7488 != "\r");
  case 5:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___7488 != "\n");
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_2;
    { step = 9; continue; }
  case 8:
    r0 = (s.c___7488 != "\t");
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[653]) return breakpoint(s, 30, 653, r0);
  case 30:
    { step = 12; continue; }
  case 10:
  case 11:
    s.lastBrkId = 654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[654]) return breakpoint(s, 31, 654, r0);
  case 31:
    s.tmp_4 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_4, s.tmp_5);
    { step = 3; continue; }
  case 12:
    s.lastBrkId = 655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[655]) return breakpoint(s, 32, 655, r0);
  case 32:
    r0 = pxsim_String_.mkEmpty();
    s.note___7505 = (r0);
    s.lastBrkId = 656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[656]) return breakpoint(s, 33, 656, r0);
  case 33:
  case 13:
    s.lastBrkId = 657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[657]) return breakpoint(s, 34, 657, r0);
  case 34:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_String_.length(s.caps[2]);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[658]) return breakpoint(s, 35, 658, r0);
  case 35:
    s.tmp_3 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.c___7511 = (r0);
    s.lastBrkId = 659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[659]) return breakpoint(s, 36, 659, r0);
  case 36:
    r0 = (s.c___7511 == " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = s.tmp_0;
    { step = 15; continue; }
  case 14:
    r0 = (s.c___7511 == "\r");
  case 15:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 16; continue; }
    r0 = s.tmp_1;
    { step = 17; continue; }
  case 16:
    r0 = (s.c___7511 == "\n");
  case 17:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_2;
    { step = 19; continue; }
  case 18:
    r0 = (s.c___7511 == "\t");
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[660]) return breakpoint(s, 37, 660, r0);
  case 37:
    { step = 22; continue; }
  case 20:
  case 21:
    s.lastBrkId = 661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[661]) return breakpoint(s, 38, 661, r0);
  case 38:
    if ((s.note___7505) && (s.note___7505).vtable) {
    setupResume(s, 39);
    pxsim_String__stringConv(s.note___7505);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.note___7505) + ""; }
  case 39:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.c___7511) && (s.c___7511).vtable) {
    setupResume(s, 40);
    pxsim_String__stringConv(s.c___7511);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.c___7511) + ""; }
  case 40:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.note___7505 = (r0);
    s.lastBrkId = 662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[662]) return breakpoint(s, 41, 662, r0);
  case 41:
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 13; continue; }
  case 22:
    s.lastBrkId = 663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[663]) return breakpoint(s, 42, 663, r0);
  case 42:
    r0 = s.note___7505;
  case 23:
    return leave(s, r0)
  default: oops()
} } }
inline__P7479.info = {"start":12466,"length":708,"line":380,"column":33,"endLine":402,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function inline__P7479_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7479, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  c___7488: undefined,
  note___7505: undefined,
  c___7511: undefined,
} }





function inline__P7540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___7546 = undefined;
    s.lastBrkId = 667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[667]) return breakpoint(s, 17, 667, r0);
  case 17:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[668]) return breakpoint(s, 18, 668, r0);
  case 18:
    s.tmp_3 = parseInt__P95_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = undefined;
    s.callLocIdx = 95; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.d___7546 = (r0);
    s.lastBrkId = 669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[669]) return breakpoint(s, 20, 669, r0);
  case 20:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = s.tmp_0;
    { step = 14; continue; }
  case 3:
    s.lastBrkId = 670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[670]) return breakpoint(s, 21, 670, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.caps[2], s.d___7546);
    s.lastBrkId = 671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[671]) return breakpoint(s, 22, 671, r0);
  case 22:
    { step = 14; continue; }
  case 4:
    s.lastBrkId = 672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[672]) return breakpoint(s, 23, 672, r0);
  case 23:
    s.tmp_0 = r0 = s.caps[3];
    s.tmp_2 = Math_max__P125_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_3 = Math_min__P126_mk(s);
    s.tmp_3.arg0 = 16;
    s.tmp_3.arg1 = s.d___7546;
    s.callLocIdx = 96; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 97; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[673]) return breakpoint(s, 26, 673, r0);
  case 26:
    r0 = pxsim_pxtrt_stlocRef(s.caps[4], -1);
    s.lastBrkId = 674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[674]) return breakpoint(s, 27, 674, r0);
  case 27:
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[675]) return breakpoint(s, 28, 675, r0);
  case 28:
    s.tmp_0 = r0 = s.caps[5];
    s.tmp_2 = Math_max__P125_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.d___7546;
    s.callLocIdx = 98; s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[676]) return breakpoint(s, 30, 676, r0);
  case 30:
    { step = 14; continue; }
  case 6:
    s.lastBrkId = 677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[677]) return breakpoint(s, 31, 677, r0);
  case 31:
    r0 = pxsim_pxtrt_stlocRef(s.caps[6], s.d___7546);
    s.lastBrkId = 678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[678]) return breakpoint(s, 32, 678, r0);
  case 32:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 6);
    s.lastBrkId = 679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[679]) return breakpoint(s, 33, 679, r0);
  case 33:
    { step = 14; continue; }
  case 7:
    s.lastBrkId = 680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[680]) return breakpoint(s, 34, 680, r0);
  case 34:
    r0 = pxsim_pxtrt_stlocRef(s.caps[4], s.d___7546);
    s.lastBrkId = 681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[681]) return breakpoint(s, 35, 681, r0);
  case 35:
    { step = 14; continue; }
  case 8:
    s.lastBrkId = 682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[682]) return breakpoint(s, 36, 682, r0);
  case 36:
    s.tmp_0 = r0 = s.caps[7];
    s.tmp_2 = Math_clamp__P122_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = 15;
    s.tmp_2.arg2 = s.d___7546;
    s.callLocIdx = 99; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[683]) return breakpoint(s, 38, 683, r0);
  case 38:
    { step = 14; continue; }
  case 9:
    s.lastBrkId = 684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[684]) return breakpoint(s, 39, 684, r0);
  case 39:
    r0 = pxsim_pxtrt_stlocRef(s.caps[8], s.d___7546);
    s.lastBrkId = 685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[685]) return breakpoint(s, 40, 685, r0);
  case 40:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 9);
    s.lastBrkId = 686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[686]) return breakpoint(s, 41, 686, r0);
  case 41:
    { step = 14; continue; }
  case 10:
    s.lastBrkId = 687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[687]) return breakpoint(s, 42, 687, r0);
  case 42:
    r0 = pxsim_pxtrt_stlocRef(s.caps[9], s.d___7546);
    s.lastBrkId = 688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[688]) return breakpoint(s, 43, 688, r0);
  case 43:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 10);
    s.lastBrkId = 689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[689]) return breakpoint(s, 44, 689, r0);
  case 44:
    { step = 14; continue; }
  case 11:
    s.lastBrkId = 690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[690]) return breakpoint(s, 45, 690, r0);
  case 45:
    s.tmp_0 = r0 = s.caps[10];
    s.tmp_2 = Math_clamp__P122_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = 255;
    s.tmp_2.arg2 = s.d___7546;
    s.callLocIdx = 100; s.pc = 46; return s.tmp_2;
  case 46:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[691]) return breakpoint(s, 47, 691, r0);
  case 47:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 11);
    s.lastBrkId = 692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[692]) return breakpoint(s, 48, 692, r0);
  case 48:
    { step = 14; continue; }
  case 12:
    s.lastBrkId = 693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[693]) return breakpoint(s, 49, 693, r0);
  case 49:
    r0 = pxsim_pxtrt_stlocRef(s.caps[11], s.d___7546);
    s.lastBrkId = 694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[694]) return breakpoint(s, 50, 694, r0);
  case 50:
    { step = 14; continue; }
  case 13:
    s.lastBrkId = 695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[695]) return breakpoint(s, 51, 695, r0);
  case 51:
    r0 = pxsim_pxtrt_stlocRef(s.caps[12], s.d___7546);
    s.lastBrkId = 696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[696]) return breakpoint(s, 52, 696, r0);
  case 52:
  case 14:
    s.lastBrkId = 697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[697]) return breakpoint(s, 53, 697, r0);
  case 53:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 15:
  case 16:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7540.info = {"start":14207,"length":1189,"line":438,"column":33,"endLine":459,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function inline__P7540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  d___7546: undefined,
} }





function music_MelodyPlayer_queuePlayInstructions__P3784(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1608_VT)) failedCast(r0);
    s.lastBrkId = 615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[615]) return breakpoint(s, 1, 615, r0);
  case 1:
    r0 = pxsim.music.queuePlayInstructions(s.arg1, s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_queuePlayInstructions__P3784.info = {"start":10845,"length":125,"line":337,"column":8,"endLine":339,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"queuePlayInstructions","argumentNames":["this","timeDelta","buf"]}

function music_MelodyPlayer_queuePlayInstructions__P3784_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_queuePlayInstructions__P3784, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_addNote__P3783(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[602]) return breakpoint(s, 3, 602, r0);
  case 3:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[603]) return breakpoint(s, 4, 603, r0);
  case 4:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, s.arg5);
    s.lastBrkId = 604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[604]) return breakpoint(s, 5, 604, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 1);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 2, s.tmp_1, 0);
    s.lastBrkId = 605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[605]) return breakpoint(s, 6, 605, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 2);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg6);
    s.lastBrkId = 606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[606]) return breakpoint(s, 7, 606, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 4);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg2);
    s.lastBrkId = 607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[607]) return breakpoint(s, 8, 607, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 6);
    s.tmp_1 = r0;
    r0 = (s.arg3 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[608]) return breakpoint(s, 9, 608, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.arg4 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[609]) return breakpoint(s, 10, 609, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 10);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg8);
    s.lastBrkId = 610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[610]) return breakpoint(s, 11, 610, r0);
  case 11:
    r0 = (s.arg1 + 12);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[611]) return breakpoint(s, 12, 611, r0);
  case 12:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, 0);
    s.lastBrkId = 612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[612]) return breakpoint(s, 13, 612, r0);
  case 13:
    r0 = s.arg1;
    return leave(s, r0)
  default: oops()
} } }
music_addNote__P3783.info = {"start":9705,"length":904,"line":308,"column":4,"endLine":321,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"addNote","argumentNames":["sndInstr","sndInstrPtr","ms","beg","end","soundWave","hz","volume","endHz"]}

function music_addNote__P3783_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_addNote__P3783, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function music_volume__P1593(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[552]) return breakpoint(s, 1, 552, r0);
  case 1:
    s.tmp_0 = music_initVolume__P3775_mk(s);
    s.callLocIdx = 74; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[553]) return breakpoint(s, 3, 553, r0);
  case 3:
    r0 = globals.globalVolume___3771;
    return leave(s, r0)
  default: oops()
} } }
music_volume__P1593.info = {"start":1781,"length":90,"line":61,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"volume","argumentNames":[]}

function music_volume__P1593_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_volume__P1593, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_initVolume__P3775(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[547]) return breakpoint(s, 3, 547, r0);
  case 3:
    r0 = (globals.globalVolume___3771 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[548]) return breakpoint(s, 4, 548, r0);
  case 4:
    globals.globalVolume___3771 = (0);
    s.lastBrkId = 549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[549]) return breakpoint(s, 5, 549, r0);
  case 5:
    s.tmp_0 = music_setVolume__P1592_mk(s);
    r0 = pxsim_pxtcore.getConfig(59, 128);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 71; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_initVolume__P3775.info = {"start":1014,"length":180,"line":33,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"initVolume","argumentNames":[]}

function music_initVolume__P3775_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_initVolume__P3775, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_setVolume__P1592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[550]) return breakpoint(s, 3, 550, r0);
  case 3:
    s.tmp_0 = Math_clamp__P122_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 255;
    r0 = (s.arg0 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 72; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.globalVolume___3771 = (r0);
    s.lastBrkId = 551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[551]) return breakpoint(s, 5, 551, r0);
  case 5:
    r0 = (globals.globalVolume___3771 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = music_enableAmp__P3774_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.callLocIdx = 73; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_setVolume__P1592.info = {"start":1533,"length":153,"line":51,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"setVolume","argumentNames":["volume"]}

function music_setVolume__P1592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_setVolume__P1592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function music_enableAmp__P3774(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[546]) return breakpoint(s, 1, 546, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_enableAmp__P3774.info = {"start":944,"length":64,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"enableAmp","argumentNames":["en"]}

function music_enableAmp__P3774_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_enableAmp__P3774, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function parseInt__P95(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.start___7833 = undefined;
    s.sign___7863 = undefined;
    s.output___7908 = undefined;
    s.hasDigit___7909 = undefined;
    s.i___7910 = undefined;
    s.code___7917 = undefined;
    s.val___7924 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1]) return breakpoint(s, 47, 1, r0);
  case 47:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    r0 = (s.arg1 != null);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 2:
    r0 = (s.arg1 < 2);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg1 > 36);
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 5:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
  case 6:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2]) return breakpoint(s, 48, 2, r0);
  case 48:
    r0 = NaN;
    { step = 46; continue; }
  case 7:
  case 8:
    s.lastBrkId = 3;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3]) return breakpoint(s, 49, 3, r0);
  case 49:
    s.start___7833 = (0);
    s.lastBrkId = 4;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4]) return breakpoint(s, 50, 4, r0);
  case 50:
  case 9:
    s.lastBrkId = 5;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[5]) return breakpoint(s, 51, 5, r0);
  case 51:
    s.tmp_1 = r0 = s.start___7833;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_3 = helpers_isWhitespace__P119_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.start___7833);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 0; s.pc = 52; return s.tmp_3;
  case 52:
    r0 = s.retval;
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 6;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[6]) return breakpoint(s, 53, 6, r0);
  case 53:
    r0 = (s.start___7833 + 1);
    s.start___7833 = (r0);
    { step = 9; continue; }
  case 12:
    s.lastBrkId = 7;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[7]) return breakpoint(s, 54, 7, r0);
  case 54:
    s.tmp_1 = r0 = s.start___7833;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 8;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[8]) return breakpoint(s, 55, 8, r0);
  case 55:
    r0 = NaN;
    { step = 46; continue; }
  case 13:
  case 14:
    s.lastBrkId = 9;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[9]) return breakpoint(s, 56, 9, r0);
  case 56:
    s.sign___7863 = (1);
    s.lastBrkId = 10;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[10]) return breakpoint(s, 57, 10, r0);
  case 57:
    r0 = pxsim_String_.charAt(s.arg0, s.start___7833);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("-", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("+", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 15:
    s.lastBrkId = 11;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[11]) return breakpoint(s, 58, 11, r0);
  case 58:
    s.sign___7863 = (-1);
  case 16:
    s.lastBrkId = 12;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[12]) return breakpoint(s, 59, 12, r0);
  case 59:
    r0 = (s.start___7833 + 1);
    s.start___7833 = (r0);
  case 17:
    s.lastBrkId = 13;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[13]) return breakpoint(s, 60, 13, r0);
  case 60:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = (s.arg1 == 16);
  case 19:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_2;
    { step = 21; continue; }
  case 20:
    r0 = pxsim_String_.charAt(s.arg0, s.start___7833);
    s.tmp_3 = r0;
    r0 = ("0" === s.tmp_3);
  case 21:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 22; continue; }
    r0 = s.tmp_4;
    { step = 25; continue; }
  case 22:
    s.tmp_7 = r0 = s.arg0;
    r0 = (s.start___7833 + 1);
    s.tmp_8 = r0;
    r0 = pxsim_String_.charAt(s.tmp_7, s.tmp_8);
    s.tmp_6 = r0;
    r0 = ("x" === s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 23; continue; }
    r0 = s.tmp_5;
    { step = 24; continue; }
  case 23:
    s.tmp_10 = r0 = s.arg0;
    r0 = (s.start___7833 + 1);
    s.tmp_11 = r0;
    r0 = pxsim_String_.charAt(s.tmp_10, s.tmp_11);
    s.tmp_9 = r0;
    r0 = ("X" === s.tmp_9);
  case 24:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = s.tmp_12;
  case 25:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 14;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[14]) return breakpoint(s, 61, 14, r0);
  case 61:
    s.arg1 = (16);
    s.lastBrkId = 15;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[15]) return breakpoint(s, 62, 15, r0);
  case 62:
    r0 = (s.start___7833 + 2);
    s.start___7833 = (r0);
    { step = 29; continue; }
  case 26:
    s.lastBrkId = 16;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[16]) return breakpoint(s, 63, 16, r0);
  case 63:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.lastBrkId = 17;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[17]) return breakpoint(s, 64, 17, r0);
  case 64:
    s.arg1 = (10);
  case 27:
  case 28:
  case 29:
    s.lastBrkId = 18;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[18]) return breakpoint(s, 65, 18, r0);
  case 65:
    s.output___7908 = (0);
    s.lastBrkId = 19;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[19]) return breakpoint(s, 66, 19, r0);
  case 66:
    s.hasDigit___7909 = (false);
    s.lastBrkId = 20;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[20]) return breakpoint(s, 67, 20, r0);
  case 67:
    s.i___7910 = (s.start___7833);
    s.lastBrkId = 21;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[21]) return breakpoint(s, 68, 21, r0);
  case 68:
  case 30:
    s.lastBrkId = 22;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[22]) return breakpoint(s, 69, 22, r0);
  case 69:
    s.tmp_1 = r0 = s.i___7910;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    s.lastBrkId = 23;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[23]) return breakpoint(s, 70, 23, r0);
  case 70:
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___7910);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 32);
    s.code___7917 = (r0);
    s.lastBrkId = 24;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[24]) return breakpoint(s, 71, 24, r0);
  case 71:
    s.val___7924 = (undefined);
    s.lastBrkId = 25;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[25]) return breakpoint(s, 72, 25, r0);
  case 72:
    r0 = (s.code___7917 >= 48);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 31; continue; }
    r0 = s.tmp_0;
    { step = 32; continue; }
  case 31:
    r0 = (s.code___7917 < 58);
  case 32:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 26;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[26]) return breakpoint(s, 73, 26, r0);
  case 73:
    r0 = (s.code___7917 - 48);
    s.val___7924 = (r0);
    { step = 38; continue; }
  case 33:
    s.lastBrkId = 27;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[27]) return breakpoint(s, 74, 27, r0);
  case 74:
    r0 = (s.code___7917 >= 97);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 34; continue; }
    r0 = s.tmp_0;
    { step = 35; continue; }
  case 34:
    r0 = (s.code___7917 < 123);
  case 35:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 28;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[28]) return breakpoint(s, 75, 28, r0);
  case 75:
    r0 = (10 + s.code___7917);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 97);
    s.val___7924 = (r0);
  case 36:
  case 37:
  case 38:
    s.lastBrkId = 29;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[29]) return breakpoint(s, 76, 29, r0);
  case 76:
    r0 = (s.val___7924 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 40; continue; }
  case 39:
    r0 = (s.val___7924 >= s.arg1);
  case 40:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 43; continue; }
    s.lastBrkId = 30;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[30]) return breakpoint(s, 77, 30, r0);
  case 77:
    r0 = pxsim_numops_toBoolDecr(s.hasDigit___7909);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 31;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[31]) return breakpoint(s, 78, 31, r0);
  case 78:
    r0 = NaN;
    { step = 46; continue; }
  case 41:
  case 42:
    s.lastBrkId = 32;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[32]) return breakpoint(s, 79, 32, r0);
  case 79:
    { step = 45; continue; }
  case 43:
  case 44:
    s.lastBrkId = 33;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[33]) return breakpoint(s, 80, 33, r0);
  case 80:
    s.hasDigit___7909 = (true);
    s.lastBrkId = 34;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[34]) return breakpoint(s, 81, 34, r0);
  case 81:
    r0 = (s.output___7908 * s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.val___7924);
    s.output___7908 = (r0);
    s.lastBrkId = 35;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[35]) return breakpoint(s, 82, 35, r0);
  case 82:
    r0 = (s.i___7910 + 1);
    s.i___7910 = (r0);
    { step = 30; continue; }
  case 45:
    s.lastBrkId = 36;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[36]) return breakpoint(s, 83, 36, r0);
  case 83:
    r0 = (s.sign___7863 * s.output___7908);
  case 46:
    return leave(s, r0)
  default: oops()
} } }
parseInt__P95.info = {"start":1064,"length":1690,"line":44,"column":0,"endLine":103,"endColumn":1,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"parseInt","argumentNames":["text","radix"]}

function parseInt__P95_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: parseInt__P95, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  start___7833: undefined,
  sign___7863: undefined,
  output___7908: undefined,
  hasDigit___7909: undefined,
  i___7910: undefined,
  code___7917: undefined,
  val___7924: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_isWhitespace__P119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[236]) return breakpoint(s, 13, 236, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(32, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(160, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(65279, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8232, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(8233, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[237]) return breakpoint(s, 14, 237, r0);
  case 14:
    r0 = true;
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[238]) return breakpoint(s, 15, 238, r0);
  case 15:
    r0 = false;
    { step = 12; continue; }
    r0 = undefined;
  case 12:
    return leave(s, r0)
  default: oops()
} } }
helpers_isWhitespace__P119.info = {"start":13875,"length":674,"line":476,"column":4,"endLine":493,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"isWhitespace","argumentNames":["c"]}

function helpers_isWhitespace__P119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_isWhitespace__P119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_MelodyPlayer_constructor__P1611(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1608_VT)) failedCast(r0);
    s.lastBrkId = 613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[613]) return breakpoint(s, 1, 613, r0);
  case 1:
    r0 = (s.arg0).fields["melody"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_constructor__P1611.info = {"start":10714,"length":62,"line":329,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["this","m"]}

function music_MelodyPlayer_constructor__P1611_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_constructor__P1611, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function music_Melody_stop__P1603(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[578]) return breakpoint(s, 3, 578, r0);
  case 3:
    r0 = s.arg0.fields["_player"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[579]) return breakpoint(s, 4, 579, r0);
  case 4:
    s.tmp_1 = music_MelodyPlayer_stop__P1612_mk(s);
    r0 = s.arg0.fields["_player"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 83; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[580]) return breakpoint(s, 6, 580, r0);
  case 6:
    r0 = (s.arg0).fields["_player"] = (null);
  case 1:
  case 2:
    s.lastBrkId = 581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[581]) return breakpoint(s, 7, 581, r0);
  case 7:
    s.tmp_0 = music_Melody_unregisterMelody__P3780_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 84; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_stop__P1603.info = {"start":6706,"length":173,"line":215,"column":8,"endLine":221,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"stop","argumentNames":["this"]}

function music_Melody_stop__P1603_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_stop__P1603, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_MelodyPlayer_stop__P1612(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1608_VT)) failedCast(r0);
    s.lastBrkId = 614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[614]) return breakpoint(s, 1, 614, r0);
  case 1:
    r0 = (s.arg0).fields["melody"] = (null);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_stop__P1612.info = {"start":10786,"length":49,"line":333,"column":8,"endLine":335,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"stop","argumentNames":["this"]}

function music_MelodyPlayer_stop__P1612_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_stop__P1612, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_createRenderable__P2383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.renderable___12453 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2436]) return breakpoint(s, 3, 2436, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Renderable__C2378_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = inline__P12459;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = scene_Renderable_constructor__P2379_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = s.arg0;
    s.callLocIdx = 1013; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.renderable___12453 = (s.tmp_0);
    s.lastBrkId = 2437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2437]) return breakpoint(s, 5, 2437, r0);
  case 5:
    r0 = s.renderable___12453;
    return leave(s, r0)
  default: oops()
} } }
scene_createRenderable__P2383.info = {"start":608,"length":339,"line":24,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/renderable.ts","functionName":"createRenderable","argumentNames":["z","handler","shouldBeVisible"]}

function scene_createRenderable__P2383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_createRenderable__P2383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  renderable___12453: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P12459(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
inline__P12459.info = {"start":875,"length":10,"line":31,"column":32,"endLine":31,"endColumn":42,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":[]}

function inline__P12459_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P12459, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_Renderable_constructor__P2379(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2378_VT)) failedCast(r0);
    r0 = (s.arg0).fields["handler"] = (s.arg1);
    r0 = (s.arg0).fields["shouldBeVisible"] = (s.arg2);
    s.lastBrkId = 2433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2433]) return breakpoint(s, 1, 2433, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P1860_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 1010; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable_constructor__P2379.info = {"start":83,"length":212,"line":2,"column":8,"endLine":8,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":["this","handler","shouldBeVisible","z"]}

function scene_Renderable_constructor__P2379_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable_constructor__P2379, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function info_PlayerInfo_drawLives__P2253(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___11804 = undefined;
    s.font___11810 = undefined;
    s.i___11853 = undefined;
    s.num___11875 = undefined;
    s.textWidth___11882 = undefined;
    s.mult___11934 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2111]) return breakpoint(s, 8, 2111, r0);
  case 8:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 884; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.state___11804 = (r0);
    s.lastBrkId = 2112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2112]) return breakpoint(s, 10, 2112, r0);
  case 10:
    r0 = s.state___11804.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2113]) return breakpoint(s, 11, 2113, r0);
  case 11:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2114]) return breakpoint(s, 12, 2114, r0);
  case 12:
    s.font___11810 = (globals.font8___1745);
    s.lastBrkId = 2115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2115]) return breakpoint(s, 13, 2115, r0);
  case 13:
    r0 = s.state___11804.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2116]) return breakpoint(s, 14, 2116, r0);
  case 14:
    s.tmp_2 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_2.arg0 = globals.screen___1802;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 0;
    r0 = s.state___11804.fields["life"];
    s.tmp_4 = r0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 3);
    s.tmp_2.arg3 = r0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 4);
    s.tmp_2.arg4 = r0;
    r0 = globals.infoState___3938.fields["borderColor"];
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 885; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2117]) return breakpoint(s, 16, 2117, r0);
  case 16:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    r0 = s.state___11804.fields["life"];
    s.tmp_2 = r0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.tmp_0.arg3 = r0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___3938.fields["bgColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 886; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2118]) return breakpoint(s, 18, 2118, r0);
  case 18:
    s.i___11853 = (0);
    s.lastBrkId = 2119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2119]) return breakpoint(s, 19, 2119, r0);
  case 19:
  case 3:
    s.lastBrkId = 2120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2120]) return breakpoint(s, 20, 2120, r0);
  case 20:
    r0 = s.state___11804.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.i___11853 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2121]) return breakpoint(s, 21, 2121, r0);
  case 21:
    s.tmp_2 = r0 = globals.screen___1802;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_3 = r0;
    s.tmp_6 = r0 = s.i___11853;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (1 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_2, s.tmp_3, s.tmp_4, 1);
    s.lastBrkId = 2122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2122]) return breakpoint(s, 22, 2122, r0);
  case 22:
    r0 = (s.i___11853 + 1);
    s.i___11853 = (r0);
    { step = 3; continue; }
  case 4:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2123]) return breakpoint(s, 23, 2123, r0);
  case 23:
    r0 = s.state___11804.fields["life"];
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_2);
    s.num___11875 = (r0);
    s.lastBrkId = 2124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2124]) return breakpoint(s, 25, 2124, r0);
  case 25:
    r0 = pxsim_String_.length(s.num___11875);
    s.tmp_1 = r0;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___11810;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 887; s.pc = 26; return s.tmp_3; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.textWidth___11882 = (r0);
    s.lastBrkId = 2125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2125]) return breakpoint(s, 27, 2125, r0);
  case 27:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 + s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.textWidth___11882);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg3 = r0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 4);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___3938.fields["borderColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 888; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 2126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2126]) return breakpoint(s, 29, 2126, r0);
  case 29:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 + s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.textWidth___11882);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 4);
    s.tmp_0.arg3 = r0;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___3938.fields["bgColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 889; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 2127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2127]) return breakpoint(s, 31, 2127, r0);
  case 31:
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___1802, s.tmp_0, 1, 1);
    s.lastBrkId = 2128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2128]) return breakpoint(s, 32, 2128, r0);
  case 32:
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.mult___11934 = (r0);
    s.lastBrkId = 2129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2129]) return breakpoint(s, 33, 2129, r0);
  case 33:
    r0 = globals.infoState___3938.fields["fontColor"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.mult___11934, 1, s.tmp_0);
    s.lastBrkId = 2130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2130]) return breakpoint(s, 34, 2130, r0);
  case 34:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_1 = r0 = s.mult___11934;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_8.arg0 = s.font___11810;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 890; s.pc = 35; return s.tmp_8; }
    }
  case 35:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_10 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_10);
    s.tmp_9 = r0;
    r0 = (s.tmp_7 - s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_5);
    s.lastBrkId = 2131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2131]) return breakpoint(s, 36, 2131, r0);
  case 36:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.num___11875;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 3);
    s.tmp_1 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_1 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    r0 = globals.infoState___3938.fields["fontColor"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11810;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 891; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_drawLives__P2253.info = {"start":25956,"length":2458,"line":847,"column":8,"endLine":913,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"drawLives","argumentNames":["this"]}

function info_PlayerInfo_drawLives__P2253_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_drawLives__P2253, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  state___11804: undefined,
  font___11810: undefined,
  i___11853: undefined,
  num___11875: undefined,
  textWidth___11882: undefined,
  mult___11934: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_drawScore__P2252(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___11990 = undefined;
    s.font___11994 = undefined;
    s.offsetY___11995 = undefined;
    s.num___12004 = undefined;
    s.width___12008 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2100]) return breakpoint(s, 3, 2100, r0);
  case 3:
    s.tmp_1 = info_PlayerInfo_score__P2241_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 877; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.s___11990 = (r0);
    s.lastBrkId = 2101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2101]) return breakpoint(s, 5, 2101, r0);
  case 5:
    r0 = (s.s___11990 >= 1000000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2102]) return breakpoint(s, 6, 2102, r0);
  case 6:
    s.offsetY___11995 = (2);
    s.lastBrkId = 2103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2103]) return breakpoint(s, 7, 2103, r0);
  case 7:
    s.font___11994 = (globals.font5___1750);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2104]) return breakpoint(s, 8, 2104, r0);
  case 8:
    s.offsetY___11995 = (1);
    s.lastBrkId = 2105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2105]) return breakpoint(s, 9, 2105, r0);
  case 9:
    s.font___11994 = (globals.font8___1745);
  case 2:
    s.lastBrkId = 2106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2106]) return breakpoint(s, 10, 2106, r0);
  case 10:
    r0 = pxsim_numops.toString(s.s___11990);
    s.num___12004 = (r0);
    s.lastBrkId = 2107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2107]) return breakpoint(s, 11, 2107, r0);
  case 11:
    r0 = pxsim_String_.length(s.num___12004);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___11994;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 878; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.width___12008 = (r0);
    s.lastBrkId = 2108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2108]) return breakpoint(s, 13, 2108, r0);
  case 13:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.width___12008);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_0.arg3 = r0;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = globals.font8___1745;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 879; s.pc = 15; return s.tmp_4; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___3938.fields["borderColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 880; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2109]) return breakpoint(s, 16, 2109, r0);
  case 16:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.width___12008);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_0.arg3 = r0;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = globals.font8___1745;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 881; s.pc = 18; return s.tmp_4; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___3938.fields["bgColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 882; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2110]) return breakpoint(s, 19, 2110, r0);
  case 19:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.num___12004;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.width___12008);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.offsetY___11995;
    r0 = globals.infoState___3938.fields["fontColor"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11994;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 883; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_drawScore__P2252.info = {"start":24898,"length":1048,"line":807,"column":8,"endLine":845,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"drawScore","argumentNames":["this"]}

function info_PlayerInfo_drawScore__P2252_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_drawScore__P2252, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___11990: undefined,
  font___11994: undefined,
  offsetY___11995: undefined,
  num___12004: undefined,
  width___12008: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_drawPlayer__P2251(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___12088 = undefined;
    s.font___12091 = undefined;
    s.score___12093 = undefined;
    s.life___12094 = undefined;
    s.height___12095 = undefined;
    s.scoreWidth___12096 = undefined;
    s.lifeWidth___12097 = undefined;
    s.offsetY___12100 = undefined;
    s.showScore___12101 = undefined;
    s.showLife___12109 = undefined;
    s.width___12177 = undefined;
    s.x___12187 = undefined;
    s.y___12194 = undefined;
    s.bump___12227 = undefined;
    s.xLoc___12252 = undefined;
    s.mult___12263 = undefined;
    s.pNum___12325 = undefined;
    s.iconWidth___12332 = undefined;
    s.iconHeight___12340 = undefined;
    s.iconX___12348 = undefined;
    s.iconY___12360 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2053]) return breakpoint(s, 43, 2053, r0);
  case 43:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 860; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.state___12088 = (r0);
    s.lastBrkId = 2054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2054]) return breakpoint(s, 45, 2054, r0);
  case 45:
    s.font___12091 = (globals.font5___1750);
    s.lastBrkId = 2055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2055]) return breakpoint(s, 46, 2055, r0);
  case 46:
    s.height___12095 = (4);
    s.lastBrkId = 2056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2056]) return breakpoint(s, 47, 2056, r0);
  case 47:
    s.scoreWidth___12096 = (0);
    s.lastBrkId = 2057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2057]) return breakpoint(s, 48, 2057, r0);
  case 48:
    s.lifeWidth___12097 = (0);
    s.lastBrkId = 2058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2058]) return breakpoint(s, 49, 2058, r0);
  case 49:
    s.offsetY___12100 = (2);
    s.lastBrkId = 2059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2059]) return breakpoint(s, 50, 2059, r0);
  case 50:
    r0 = s.arg0.fields["showScore"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.state___12088.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.showScore___12101 = (s.tmp_2);
    s.lastBrkId = 2060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2060]) return breakpoint(s, 51, 2060, r0);
  case 51:
    r0 = s.arg0.fields["showLife"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.state___12088.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.showLife___12109 = (s.tmp_2);
    s.lastBrkId = 2061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2061]) return breakpoint(s, 52, 2061, r0);
  case 52:
    r0 = pxsim_numops_toBoolDecr(s.showScore___12101);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2062]) return breakpoint(s, 53, 2062, r0);
  case 53:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_0 = r0;
    r0 = s.state___12088.fields["score"];
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 54);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 54:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.score___12093 = (r0);
    s.lastBrkId = 2063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2063]) return breakpoint(s, 55, 2063, r0);
  case 55:
    r0 = pxsim_String_.length(s.score___12093);
    s.tmp_1 = r0;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___12091;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 861; s.pc = 56; return s.tmp_3; }
    }
  case 56:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 3);
    s.scoreWidth___12096 = (r0);
    s.lastBrkId = 2064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2064]) return breakpoint(s, 57, 2064, r0);
  case 57:
    s.tmp_0 = r0 = s.height___12095;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___12091;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 862; s.pc = 58; return s.tmp_2; }
    }
  case 58:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.height___12095 = (r0);
    s.lastBrkId = 2065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2065]) return breakpoint(s, 59, 2065, r0);
  case 59:
    s.tmp_0 = r0 = s.offsetY___12100;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = s.font___12091;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 863; s.pc = 60; return s.tmp_3; }
    }
  case 60:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.offsetY___12100 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 2066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2066]) return breakpoint(s, 61, 2066, r0);
  case 61:
    r0 = pxsim_numops_toBoolDecr(s.showLife___12109);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2067]) return breakpoint(s, 62, 2067, r0);
  case 62:
    r0 = s.state___12088.fields["life"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = 0;
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 63);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 63:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_3);
    s.life___12094 = (r0);
    s.lastBrkId = 2068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2068]) return breakpoint(s, 64, 2068, r0);
  case 64:
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_String_.length(s.life___12094);
    s.tmp_7 = r0;
    s.tmp_9 = if_charWidth_1_mk(s);
    s.tmp_9.arg0 = s.font___12091;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "charWidth");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["charWidth"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["charWidth"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 864; s.pc = 65; return s.tmp_9; }
    }
  case 65:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_1 + s.tmp_6);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 3);
    s.lifeWidth___12097 = (r0);
    s.lastBrkId = 2069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2069]) return breakpoint(s, 66, 2069, r0);
  case 66:
    s.tmp_0 = r0 = s.height___12095;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.height___12095 = (r0);
  case 9:
  case 10:
    s.lastBrkId = 2070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2070]) return breakpoint(s, 67, 2070, r0);
  case 67:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = s.scoreWidth___12096;
    s.tmp_0.arg1 = s.lifeWidth___12097;
    s.callLocIdx = 865; s.pc = 68; return s.tmp_0;
  case 68:
    r0 = s.retval;
    s.width___12177 = (r0);
    s.lastBrkId = 2071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2071]) return breakpoint(s, 69, 2071, r0);
  case 69:
    s.tmp_0 = r0 = s.showScore___12101;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = s.showLife___12109;
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2072]) return breakpoint(s, 70, 2072, r0);
  case 70:
    r0 = (s.height___12095 + 1);
    s.height___12095 = (r0);
  case 13:
  case 14:
    s.lastBrkId = 2073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2073]) return breakpoint(s, 71, 2073, r0);
  case 71:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = s.width___12177;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.tmp_1);
    s.x___12187 = (r0);
    s.lastBrkId = 2074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2074]) return breakpoint(s, 72, 2074, r0);
  case 72:
    r0 = s.arg0.fields["up"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.height___12095;
    { step = 18; continue; }
  case 17:
    r0 = 0;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.tmp_1);
    s.y___12194 = (r0);
    s.lastBrkId = 2075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2075]) return breakpoint(s, 73, 2075, r0);
  case 73:
    s.tmp_0 = r0 = s.showScore___12101;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_0;
    { step = 20; continue; }
  case 19:
    r0 = s.showLife___12109;
  case 20:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 2076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2076]) return breakpoint(s, 74, 2076, r0);
  case 74:
    s.tmp_2 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_2.arg0 = globals.screen___1802;
    s.tmp_2.arg1 = s.x___12187;
    s.tmp_2.arg2 = s.y___12194;
    s.tmp_2.arg3 = s.width___12177;
    s.tmp_2.arg4 = s.height___12095;
    r0 = s.arg0.fields["border"];
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 866; s.pc = 75; return s.tmp_2;
  case 75:
    r0 = s.retval;
    s.lastBrkId = 2077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2077]) return breakpoint(s, 76, 2077, r0);
  case 76:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = (s.x___12187 + 1);
    s.tmp_0.arg1 = r0;
    r0 = (s.y___12194 + 1);
    s.tmp_0.arg2 = r0;
    r0 = (s.width___12177 - 2);
    s.tmp_0.arg3 = r0;
    r0 = (s.height___12095 - 2);
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["bg"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 867; s.pc = 77; return s.tmp_0;
  case 77:
    r0 = s.retval;
  case 21:
  case 22:
    s.lastBrkId = 2078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2078]) return breakpoint(s, 78, 2078, r0);
  case 78:
    r0 = pxsim_numops_toBoolDecr(s.showScore___12101);
    if (!r0) { step = 25; continue; }
    s.lastBrkId = 2079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2079]) return breakpoint(s, 79, 2079, r0);
  case 79:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    r0 = (s.width___12177 - s.scoreWidth___12096);
    { step = 24; continue; }
  case 23:
    r0 = 0;
  case 24:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.bump___12227 = (s.tmp_1);
    s.lastBrkId = 2080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2080]) return breakpoint(s, 80, 2080, r0);
  case 80:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.score___12093;
    r0 = (s.x___12187 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.bump___12227);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    s.tmp_0.arg2 = r0;
    r0 = (s.y___12194 + 2);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["fc"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___12091;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 868; s.pc = 81; return s.tmp_0;
  case 81:
    r0 = s.retval;
  case 25:
  case 26:
    s.lastBrkId = 2081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2081]) return breakpoint(s, 82, 2081, r0);
  case 82:
    r0 = pxsim_numops_toBoolDecr(s.showLife___12109);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 2082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2082]) return breakpoint(s, 83, 2082, r0);
  case 83:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    r0 = (s.width___12177 - s.lifeWidth___12097);
    { step = 28; continue; }
  case 27:
    r0 = 0;
  case 28:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___12187 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.tmp_1);
    s.xLoc___12252 = (r0);
    s.lastBrkId = 2083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2083]) return breakpoint(s, 84, 2083, r0);
  case 84:
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.mult___12263 = (r0);
    s.lastBrkId = 2084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2084]) return breakpoint(s, 85, 2084, r0);
  case 85:
    r0 = s.arg0.fields["fc"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.mult___12263, 1, s.tmp_0);
    s.lastBrkId = 2085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2085]) return breakpoint(s, 86, 2085, r0);
  case 86:
    s.tmp_0 = r0 = globals.screen___1802;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_1 = r0;
    s.tmp_2 = r0 = s.xLoc___12252;
    r0 = (s.y___12194 + s.offsetY___12100);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_3);
    s.lastBrkId = 2086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2086]) return breakpoint(s, 87, 2086, r0);
  case 87:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_1 = r0 = s.mult___12263;
    s.tmp_3 = r0 = s.xLoc___12252;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.y___12194 + s.offsetY___12100);
    s.tmp_9 = r0;
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.font___12091;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 869; s.pc = 88; return s.tmp_11; }
    }
  case 88:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 + s.tmp_10);
    s.tmp_8 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_13);
    s.tmp_12 = r0;
    r0 = (s.tmp_8 - s.tmp_12);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_6);
    s.lastBrkId = 2087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2087]) return breakpoint(s, 89, 2087, r0);
  case 89:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.life___12094;
    s.tmp_3 = r0 = s.xLoc___12252;
    r0 = globals.infoState___3938.fields["heartImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = globals.infoState___3938.fields["multiplierImage"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_2 + s.tmp_6);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    s.tmp_0.arg2 = r0;
    r0 = (s.y___12194 + s.offsetY___12100);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["fc"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___12091;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 870; s.pc = 90; return s.tmp_0;
  case 90:
    r0 = s.retval;
  case 29:
  case 30:
    s.lastBrkId = 2088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2088]) return breakpoint(s, 91, 2088, r0);
  case 91:
    r0 = s.arg0.fields["showPlayer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 2089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2089]) return breakpoint(s, 92, 2089, r0);
  case 92:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 93);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 93:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.pNum___12325 = (r0);
    s.lastBrkId = 2090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2090]) return breakpoint(s, 94, 2090, r0);
  case 94:
    r0 = pxsim_String_.length(s.pNum___12325);
    s.tmp_1 = r0;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___12091;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 871; s.pc = 95; return s.tmp_3; }
    }
  case 95:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.iconWidth___12332 = (r0);
    s.lastBrkId = 2091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2091]) return breakpoint(s, 96, 2091, r0);
  case 96:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = s.height___12095;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___12091;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 872; s.pc = 98; return s.tmp_2; }
    }
  case 98:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 873; s.pc = 97; return s.tmp_0;
  case 97:
    r0 = s.retval;
    s.iconHeight___12340 = (r0);
    s.lastBrkId = 2092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2092]) return breakpoint(s, 99, 2092, r0);
  case 99:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = (s.x___12187 - s.iconWidth___12332);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    { step = 32; continue; }
  case 31:
    r0 = (s.x___12187 + s.width___12177);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
  case 32:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.iconX___12348 = (s.tmp_3);
    s.lastBrkId = 2093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2093]) return breakpoint(s, 100, 2093, r0);
  case 100:
    s.iconY___12360 = (s.y___12194);
    s.lastBrkId = 2094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2094]) return breakpoint(s, 101, 2094, r0);
  case 101:
    r0 = pxsim_numops_toBoolDecr(s.showScore___12101);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 33; continue; }
    r0 = s.tmp_0;
    { step = 34; continue; }
  case 33:
    r0 = pxsim_numops_toBoolDecr(s.showLife___12109);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 34:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 39; continue; }
    s.lastBrkId = 2095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2095]) return breakpoint(s, 102, 2095, r0);
  case 102:
    r0 = s.arg0.fields["left"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 35; continue; }
    r0 = -1;
    { step = 36; continue; }
  case 35:
    r0 = 1;
  case 36:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.iconX___12348 + s.tmp_5);
    s.iconX___12348 = (r0);
    s.lastBrkId = 2096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2096]) return breakpoint(s, 103, 2096, r0);
  case 103:
    r0 = s.arg0.fields["up"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 2097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2097]) return breakpoint(s, 104, 2097, r0);
  case 104:
    r0 = (s.iconY___12360 - 3);
    s.iconY___12360 = (r0);
  case 37:
  case 38:
  case 39:
  case 40:
    s.lastBrkId = 2098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2098]) return breakpoint(s, 105, 2098, r0);
  case 105:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.iconX___12348;
    s.tmp_0.arg2 = s.iconY___12360;
    s.tmp_0.arg3 = s.iconWidth___12332;
    s.tmp_0.arg4 = s.iconHeight___12340;
    r0 = s.arg0.fields["border"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 874; s.pc = 106; return s.tmp_0;
  case 106:
    r0 = s.retval;
    s.lastBrkId = 2099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2099]) return breakpoint(s, 107, 2099, r0);
  case 107:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.pNum___12325;
    r0 = (s.iconX___12348 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_2 = r0 = s.iconY___12360;
    r0 = (s.iconHeight___12340 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    s.tmp_6 = if_charHeight_1_mk(s);
    s.tmp_6.arg0 = s.font___12091;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charHeight");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charHeight"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charHeight"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 875; s.pc = 109; return s.tmp_6; }
    }
  case 109:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["bg"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___12091;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 876; s.pc = 108; return s.tmp_0;
  case 108:
    r0 = s.retval;
  case 41:
  case 42:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_drawPlayer__P2251.info = {"start":21253,"length":3635,"line":702,"column":8,"endLine":805,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"drawPlayer","argumentNames":["this"]}

function info_PlayerInfo_drawPlayer__P2251_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_drawPlayer__P2251, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  state___12088: undefined,
  font___12091: undefined,
  score___12093: undefined,
  life___12094: undefined,
  height___12095: undefined,
  scoreWidth___12096: undefined,
  lifeWidth___12097: undefined,
  offsetY___12100: undefined,
  showScore___12101: undefined,
  showLife___12109: undefined,
  width___12177: undefined,
  x___12187: undefined,
  y___12194: undefined,
  bump___12227: undefined,
  xLoc___12252: undefined,
  mult___12263: undefined,
  pNum___12325: undefined,
  iconWidth___12332: undefined,
  iconHeight___12340: undefined,
  iconX___12348: undefined,
  iconY___12360: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_raiseLifeZero__P2250(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___12066 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2046]) return breakpoint(s, 9, 2046, r0);
  case 9:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 857; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.state___12066 = (r0);
    s.lastBrkId = 2047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2047]) return breakpoint(s, 11, 2047, r0);
  case 11:
    r0 = s.state___12066.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.state___12066.fields["life"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2048]) return breakpoint(s, 12, 2048, r0);
  case 12:
    r0 = (s.state___12066).fields["life"] = (null);
    s.lastBrkId = 2049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2049]) return breakpoint(s, 13, 2049, r0);
  case 13:
    r0 = s.state___12066.fields["lifeZeroHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2050]) return breakpoint(s, 14, 2050, r0);
  case 14:
    s.tmp_1 = if_lifeZeroHandler_1_mk(s);
    s.tmp_1.arg0 = s.state___12066;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "lifeZeroHandler"), 1);
      s.callLocIdx = 858; s.pc = 15; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["lifeZeroHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["lifeZeroHandler"], 1); s.callLocIdx = 858; s.pc = 15; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 858; s.pc = 15; return s.tmp_1;; }
     else { s.callLocIdx = 858; s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2051]) return breakpoint(s, 16, 2051, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2052]) return breakpoint(s, 17, 2052, r0);
  case 17:
    s.tmp_0 = game_over__P2542_mk(s);
    s.tmp_0.arg0 = false;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 859; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_raiseLifeZero__P2250.info = {"start":20869,"length":374,"line":690,"column":8,"endLine":700,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"raiseLifeZero","argumentNames":["this","gameOver"]}

function info_PlayerInfo_raiseLifeZero__P2250_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_raiseLifeZero__P2250, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  state___12066: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_PlayerInfo_hasLife__P2248(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___11977 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2044]) return breakpoint(s, 3, 2044, r0);
  case 3:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 856; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.state___11977 = (r0);
    s.lastBrkId = 2045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2045]) return breakpoint(s, 5, 2045, r0);
  case 5:
    r0 = s.state___11977.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.state___11977.fields["life"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== null);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_hasLife__P2248.info = {"start":20346,"length":141,"line":673,"column":8,"endLine":676,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"hasLife","argumentNames":["this"]}

function info_PlayerInfo_hasLife__P2248_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_hasLife__P2248, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  state___11977: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_hasScore__P2244(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___12057 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2029]) return breakpoint(s, 1, 2029, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 849; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.state___12057 = (r0);
    s.lastBrkId = 2030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2030]) return breakpoint(s, 3, 2030, r0);
  case 3:
    r0 = s.state___12057.fields["score"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 !== undefined);
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_hasScore__P2244.info = {"start":18619,"length":111,"line":616,"column":8,"endLine":619,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"hasScore","argumentNames":["this"]}

function info_PlayerInfo_hasScore__P2244_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_hasScore__P2244, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  state___12057: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_getState__P2239(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2013]) return breakpoint(s, 1, 2013, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_init__P3990_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 842; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2014]) return breakpoint(s, 3, 2014, r0);
  case 3:
    r0 = globals.infoState___3938.fields["playerStates"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_getState__P2239.info = {"start":17088,"length":121,"line":562,"column":8,"endLine":565,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"getState","argumentNames":["this"]}

function info_PlayerInfo_getState__P2239_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_getState__P2239, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_init__P3990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2008]) return breakpoint(s, 5, 2008, r0);
  case 5:
    s.tmp_0 = info_initHUD__P3984_mk(s);
    s.callLocIdx = 839; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2009]) return breakpoint(s, 7, 2009, r0);
  case 7:
    r0 = s.arg0.fields["_player"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2010]) return breakpoint(s, 8, 2010, r0);
  case 8:
    s.tmp_2 = info_initMultiHUD__P3985_mk(s);
    s.callLocIdx = 840; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2011]) return breakpoint(s, 10, 2011, r0);
  case 10:
    r0 = globals.infoState___3938.fields["playerStates"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2012]) return breakpoint(s, 11, 2012, r0);
  case 11:
    r0 = pxsim_pxtcore_mkClassInstance(info_PlayerState__C2197_VT);
    s.tmp_6 = r0;
    s.tmp_7 = info_PlayerState_constructor__P2201_mk(s);
    s.tmp_7.arg0 = s.tmp_6;
    s.callLocIdx = 841; s.pc = 12; return s.tmp_7;
  case 12:
    r0 = s.retval;
    r0 = globals.infoState___3938.fields["playerStates"];
    s.tmp_8 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_10 = r0;
    r0 = (s.tmp_10 - 1);
    s.tmp_9 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_8, s.tmp_9, s.tmp_6);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_init__P3990.info = {"start":16826,"length":252,"line":554,"column":8,"endLine":560,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"init","argumentNames":["this"]}

function info_PlayerInfo_init__P3990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_init__P3990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function info_initMultiHUD__P3985(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1931]) return breakpoint(s, 6, 1931, r0);
  case 6:
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1932]) return breakpoint(s, 7, 1932, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1933]) return breakpoint(s, 8, 1933, r0);
  case 8:
    s.tmp_2 = r0 = globals.infoState___3938;
    r0 = s.tmp_2.fields["visibilityFlag"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["visibilityFlag"] = (s.tmp_3);
    s.lastBrkId = 1934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1934]) return breakpoint(s, 9, 1934, r0);
  case 9:
    r0 = globals.infoState___3938.fields["visibilityFlag"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 32);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1935]) return breakpoint(s, 10, 1935, r0);
  case 10:
    s.tmp_4 = r0 = globals.infoState___3938;
    s.tmp_6 = info_defaultMultiplayerHeartImage__P3987_mk(s);
    s.callLocIdx = 813; s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["heartImage"] = (s.tmp_5);
  case 3:
  case 4:
    s.lastBrkId = 1936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1936]) return breakpoint(s, 12, 1936, r0);
  case 12:
    s.tmp_0 = r0 = globals.infoState___3938;
    r0 = pxsim.image.ofBuffer(_hex6248);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["multiplierImage"] = (s.tmp_1);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initMultiHUD__P3985.info = {"start":4681,"length":393,"line":149,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"initMultiHUD","argumentNames":[]}

function info_initMultiHUD__P3985_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initMultiHUD__P3985, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }

const _hex6248 = pxsim.BufferMethods.createBufferFromHex("8704030003000000010100001000000001010000")




function info_defaultMultiplayerHeartImage__P3987(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1938]) return breakpoint(s, 3, 1938, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex6252);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex6254);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
info_defaultMultiplayerHeartImage__P3987.info = {"start":5678,"length":503,"line":185,"column":4,"endLine":202,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"defaultMultiplayerHeartImage","argumentNames":[]}

function info_defaultMultiplayerHeartImage__P3987_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_defaultMultiplayerHeartImage__P3987, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex6252 = pxsim.BufferMethods.createBufferFromHex("870407000500000000000000100100000110000010000100011000001001000000000000")
const _hex6254 = pxsim.BufferMethods.createBufferFromHex("870407000500000000000000100100002112000010240100411200001001000000000000")




function info_PlayerState_constructor__P2201(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerState__C2197_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerState_constructor__P2201.info = {"start":608,"length":17,"line":27,"column":8,"endLine":27,"endColumn":25,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["this"]}

function info_PlayerState_constructor__P2201_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerState_constructor__P2201, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function info_PlayerInfo_score__P2241(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___6183 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2016]) return breakpoint(s, 7, 2016, r0);
  case 7:
    r0 = s.arg0.fields["showScore"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2017]) return breakpoint(s, 8, 2017, r0);
  case 8:
    r0 = (s.arg0).fields["showScore"] = (true);
  case 1:
  case 2:
    s.lastBrkId = 2018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2018]) return breakpoint(s, 9, 2018, r0);
  case 9:
    r0 = s.arg0.fields["showPlayer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2019]) return breakpoint(s, 10, 2019, r0);
  case 10:
    r0 = (s.arg0).fields["showPlayer"] = (true);
  case 3:
  case 4:
    s.lastBrkId = 2020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2020]) return breakpoint(s, 11, 2020, r0);
  case 11:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 843; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.state___6183 = (r0);
    s.lastBrkId = 2021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2021]) return breakpoint(s, 13, 2021, r0);
  case 13:
    r0 = s.state___6183.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2022]) return breakpoint(s, 14, 2022, r0);
  case 14:
    r0 = (s.state___6183).fields["score"] = (0);
  case 5:
  case 6:
    s.lastBrkId = 2023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2023]) return breakpoint(s, 15, 2023, r0);
  case 15:
    r0 = s.state___6183.fields["score"];
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_score__P2241.info = {"start":17492,"length":314,"line":578,"column":8,"endLine":587,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"score","argumentNames":["this"]}

function info_PlayerInfo_score__P2241_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_score__P2241, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  state___6183: undefined,
  arg0: undefined,
} }





function StatusBarSprite_attachToSprite__P3585(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StatusBarSprite__C3579_VT)) failedCast(r0);
    s.lastBrkId = 3451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3451]) return breakpoint(s, 1, 3451, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(4, inline__P12547);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg2);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.arg3);
    s.tmp_1 = StatusBarSprite_applyChange__P5765_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1571; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StatusBarSprite_attachToSprite__P3585.info = {"start":3129,"length":778,"line":105,"column":4,"endLine":121,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"attachToSprite","argumentNames":["this","toFollow","padding","offset"]}

function StatusBarSprite_attachToSprite__P3585_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarSprite_attachToSprite__P3585, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P12547(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3452]) return breakpoint(s, 15, 3452, r0);
  case 15:
    s.tmp_0 = Sprite_setFlag__P2079_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = 512;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1569; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 3453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3453]) return breakpoint(s, 17, 3453, r0);
  case 17:
    r0 = (s.arg0).fields["spriteToFollow"] = (s.caps[1]);
    s.lastBrkId = 3454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3454]) return breakpoint(s, 18, 3454, r0);
  case 18:
    r0 = s.arg0.fields["followPadding"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.caps[2] !== undefined);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3455]) return breakpoint(s, 19, 3455, r0);
  case 19:
    s.tmp_3 = r0 = s.caps[2];
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["followPadding"] = (s.tmp_4);
  case 5:
  case 6:
    s.lastBrkId = 3456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3456]) return breakpoint(s, 20, 3456, r0);
  case 20:
    r0 = s.arg0.fields["followOffset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = (s.caps[2] !== undefined);
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3457]) return breakpoint(s, 21, 3457, r0);
  case 21:
    s.tmp_3 = r0 = s.caps[3];
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_3;
    { step = 10; continue; }
  case 9:
    r0 = 0;
  case 10:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["followOffset"] = (s.tmp_4);
  case 11:
  case 12:
    s.lastBrkId = 3458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3458]) return breakpoint(s, 22, 3458, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.caps[1]);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3459]) return breakpoint(s, 23, 3459, r0);
  case 23:
    s.tmp_0 = statusbars_StatusBar_positionNextTo__P3612_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    s.callLocIdx = 1570; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
  case 13:
  case 14:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P12547.info = {"start":3224,"length":675,"line":106,"column":25,"endLine":120,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["sb"]}

function inline__P12547_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P12547, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function StatusBarSprite_applyChange__P5765(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sb___12794 = undefined;
    s.output___12799 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StatusBarSprite__C3579_VT)) failedCast(r0);
    s.lastBrkId = 3461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3461]) return breakpoint(s, 4, 3461, r0);
  case 4:
    r0 = s.arg0.fields["_statusBar"];
    s.sb___12794 = (r0);
    s.lastBrkId = 3462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3462]) return breakpoint(s, 5, 3462, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sb___12794);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3463]) return breakpoint(s, 6, 3463, r0);
  case 6:
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg1;
    s.tmp_0.arg0 = s.sb___12794;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1573; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.output___12799 = (r0);
    s.lastBrkId = 3464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3464]) return breakpoint(s, 8, 3464, r0);
  case 8:
    s.tmp_0 = statusbars_StatusBar_updateDisplay__P3624_mk(s);
    s.tmp_0.arg0 = s.sb___12794;
    s.callLocIdx = 1574; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 3465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3465]) return breakpoint(s, 10, 3465, r0);
  case 10:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.sb___12794;
    s.callLocIdx = 1575; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1576; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3466]) return breakpoint(s, 13, 3466, r0);
  case 13:
    r0 = s.output___12799;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3467]) return breakpoint(s, 14, 3467, r0);
  case 14:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
StatusBarSprite_applyChange__P5765.info = {"start":9633,"length":301,"line":284,"column":4,"endLine":295,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"applyChange","argumentNames":["this","action"]}

function StatusBarSprite_applyChange__P5765_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarSprite_applyChange__P5765, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sb___12794: undefined,
  output___12799: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function statusbars_StatusBar_updateDisplay__P3624(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.fillWidth___12818 = undefined;
    s.fillHeight___12826 = undefined;
    s.barIsVertical___12834 = undefined;
    s.borderColor___12837 = undefined;
    s.barLeft___12847 = undefined;
    s.barTop___12848 = undefined;
    s.textWidth___12850 = undefined;
    s.textHeight___12858 = undefined;
    s.labelEnd___12862 = undefined;
    s.textX___12867 = undefined;
    s.textY___12868 = undefined;
    s.showTarget___12974 = undefined;
    s.invertDir___12981 = undefined;
    s.drainPercent___12988 = undefined;
    s.dw___12998 = undefined;
    s.dh___13007 = undefined;
    s.dx___13016 = undefined;
    s.dy___13030 = undefined;
    s.percent___13053 = undefined;
    s.tw___13062 = undefined;
    s.th___13071 = undefined;
    s.tx___13080 = undefined;
    s.ty___13094 = undefined;
    s.handler___13117 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3555]) return breakpoint(s, 53, 3555, r0);
  case 53:
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1633; s.pc = 54; return s.tmp_1;
  case 54:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, 0);
    s.lastBrkId = 3556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3556]) return breakpoint(s, 55, 3556, r0);
  case 55:
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_2 = r0;
    r0 = (2 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.fillWidth___12818 = (r0);
    s.lastBrkId = 3557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3557]) return breakpoint(s, 56, 3557, r0);
  case 56:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_2 = r0;
    r0 = (2 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.fillHeight___12826 = (r0);
    s.lastBrkId = 3558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3558]) return breakpoint(s, 57, 3558, r0);
  case 57:
    s.tmp_0 = statusbars_StatusBar_isVerticalBar__P5793_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1634; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    s.barIsVertical___12834 = (r0);
    s.lastBrkId = 3559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3559]) return breakpoint(s, 59, 3559, r0);
  case 59:
    s.tmp_1 = statusbars_util_isNullOrUndefined__P5806_mk(s);
    r0 = s.arg0.fields["borderColor"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1635; s.pc = 60; return s.tmp_1;
  case 60:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["offColor"];
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["borderColor"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.borderColor___12837 = (s.tmp_2);
    s.lastBrkId = 3560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3560]) return breakpoint(s, 61, 3560, r0);
  case 61:
    s.barLeft___12847 = (0);
    s.lastBrkId = 3561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3561]) return breakpoint(s, 62, 3561, r0);
  case 62:
    s.barTop___12848 = (0);
    s.lastBrkId = 3562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3562]) return breakpoint(s, 63, 3562, r0);
  case 63:
    s.tmp_1 = statusbars_StatusBar_label__P3614_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1636; s.pc = 64; return s.tmp_1;
  case 64:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 3563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3563]) return breakpoint(s, 65, 3563, r0);
  case 65:
    s.tmp_3 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1637; s.pc = 66; return s.tmp_3; }
    }
  case 66:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = statusbars_StatusBar_label__P3614_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 1638; s.pc = 67; return s.tmp_6;
  case 67:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String_.length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 * s.tmp_4);
    s.textWidth___12850 = (r0);
    s.lastBrkId = 3564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3564]) return breakpoint(s, 68, 3564, r0);
  case 68:
    s.tmp_0 = if_charHeight_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "charHeight");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["charHeight"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["charHeight"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 1639; s.pc = 69; return s.tmp_0; }
    }
  case 69:
    r0 = s.retval;
    s.textHeight___12858 = (r0);
    s.lastBrkId = 3565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3565]) return breakpoint(s, 70, 3565, r0);
  case 70:
    r0 = s.arg0.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 2);
    s.labelEnd___12862 = (r0);
    s.lastBrkId = 3566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3566]) return breakpoint(s, 71, 3566, r0);
  case 71:
    s.textX___12867 = (0);
    s.lastBrkId = 3567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3567]) return breakpoint(s, 72, 3567, r0);
  case 72:
    s.textY___12868 = (0);
    s.lastBrkId = 3568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3568]) return breakpoint(s, 73, 3568, r0);
  case 73:
    r0 = pxsim_numops_toBoolDecr(s.barIsVertical___12834);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3569]) return breakpoint(s, 74, 3569, r0);
  case 74:
    r0 = pxsim_numops_toBoolDecr(s.labelEnd___12862);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3570]) return breakpoint(s, 75, 3570, r0);
  case 75:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.textY___12868 = (r0);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3571]) return breakpoint(s, 76, 3571, r0);
  case 76:
    s.tmp_0 = r0 = s.barTop___12848;
    r0 = (s.textHeight___12858 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.barTop___12848 = (r0);
  case 4:
    s.lastBrkId = 3572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3572]) return breakpoint(s, 77, 3572, r0);
  case 77:
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.textWidth___12850);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3573]) return breakpoint(s, 78, 3573, r0);
  case 78:
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.textWidth___12850);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.textX___12867 = (r0);
    { step = 8; continue; }
  case 5:
    s.lastBrkId = 3574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3574]) return breakpoint(s, 79, 3574, r0);
  case 79:
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.textWidth___12850);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3575]) return breakpoint(s, 80, 3575, r0);
  case 80:
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_4 = r0;
    r0 = (s.textWidth___12850 - s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.barLeft___12847 = (r0);
  case 6:
  case 7:
  case 8:
    { step = 16; continue; }
  case 9:
    s.lastBrkId = 3576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3576]) return breakpoint(s, 81, 3576, r0);
  case 81:
    r0 = pxsim_numops_toBoolDecr(s.labelEnd___12862);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 3577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3577]) return breakpoint(s, 82, 3577, r0);
  case 82:
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.textX___12867 = (r0);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 3578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3578]) return breakpoint(s, 83, 3578, r0);
  case 83:
    r0 = (s.barLeft___12847 + s.textWidth___12850);
    s.barLeft___12847 = (r0);
  case 11:
    s.lastBrkId = 3579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3579]) return breakpoint(s, 84, 3579, r0);
  case 84:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.textHeight___12858);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 3580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3580]) return breakpoint(s, 85, 3580, r0);
  case 85:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.textHeight___12858);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.textY___12868 = (r0);
    { step = 15; continue; }
  case 12:
    s.lastBrkId = 3581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3581]) return breakpoint(s, 86, 3581, r0);
  case 86:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.textHeight___12858);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3582]) return breakpoint(s, 87, 3582, r0);
  case 87:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_3 = r0;
    r0 = (s.textHeight___12858 - s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.barTop___12848 = (r0);
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 3583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3583]) return breakpoint(s, 88, 3583, r0);
  case 88:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1640; s.pc = 90; return s.tmp_1;
  case 90:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = statusbars_StatusBar_label__P3614_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1641; s.pc = 91; return s.tmp_2;
  case 91:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.textX___12867;
    s.tmp_0.arg3 = s.textY___12868;
    r0 = s.arg0.fields["labelColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1642; s.pc = 89; return s.tmp_0;
  case 89:
    r0 = s.retval;
  case 17:
  case 18:
    s.lastBrkId = 3584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3584]) return breakpoint(s, 92, 3584, r0);
  case 92:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1643; s.pc = 94; return s.tmp_1;
  case 94:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.barLeft___12847;
    s.tmp_0.arg2 = s.barTop___12848;
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.borderColor___12837;
    s.callLocIdx = 1644; s.pc = 93; return s.tmp_0;
  case 93:
    r0 = s.retval;
    s.lastBrkId = 3585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3585]) return breakpoint(s, 95, 3585, r0);
  case 95:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1645; s.pc = 97; return s.tmp_1;
  case 97:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_2 = r0;
    r0 = (s.barLeft___12847 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_3 = r0;
    r0 = (s.barTop___12848 + s.tmp_3);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.fillWidth___12818;
    s.tmp_0.arg4 = s.fillHeight___12826;
    r0 = s.arg0.fields["offColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1646; s.pc = 96; return s.tmp_0;
  case 96:
    r0 = s.retval;
    s.lastBrkId = 3586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3586]) return breakpoint(s, 98, 3586, r0);
  case 98:
    r0 = s.arg0.fields["displayValue"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    s.lastBrkId = 3587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3587]) return breakpoint(s, 99, 3587, r0);
  case 99:
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 16);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.showTarget___12974 = (r0);
    s.lastBrkId = 3588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3588]) return breakpoint(s, 100, 3588, r0);
  case 100:
    r0 = s.arg0.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 8);
    s.invertDir___12981 = (r0);
    s.lastBrkId = 3589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3589]) return breakpoint(s, 101, 3589, r0);
  case 101:
    r0 = pxsim_numops_toBoolDecr(s.showTarget___12974);
    if (!r0) { step = 31; continue; }
    s.lastBrkId = 3590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3590]) return breakpoint(s, 102, 3590, r0);
  case 102:
    s.tmp_0 = Math_constrain__P272_mk(s);
    r0 = s.arg0.fields["displayValue"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_max"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 1647; s.pc = 103; return s.tmp_0;
  case 103:
    r0 = s.retval;
    s.drainPercent___12988 = (r0);
    s.lastBrkId = 3591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3591]) return breakpoint(s, 104, 3591, r0);
  case 104:
    r0 = pxsim_numops_toBoolDecr(s.barIsVertical___12834);
    if (!r0) { step = 19; continue; }
    r0 = s.fillWidth___12818;
    { step = 20; continue; }
  case 19:
    r0 = (s.fillWidth___12818 * s.drainPercent___12988);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
  case 20:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.dw___12998 = (s.tmp_1);
    s.lastBrkId = 3592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3592]) return breakpoint(s, 105, 3592, r0);
  case 105:
    r0 = pxsim_numops_toBoolDecr(s.barIsVertical___12834);
    if (!r0) { step = 21; continue; }
    r0 = (s.fillHeight___12826 * s.drainPercent___12988);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    { step = 22; continue; }
  case 21:
    r0 = s.fillHeight___12826;
  case 22:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.dh___13007 = (s.tmp_1);
    s.lastBrkId = 3593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3593]) return breakpoint(s, 106, 3593, r0);
  case 106:
    s.tmp_0 = r0 = s.barIsVertical___12834;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 23; continue; }
    r0 = s.tmp_0;
    { step = 24; continue; }
  case 23:
    r0 = pxsim_numops_toBoolDecr(s.invertDir___12981);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 24:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 25; continue; }
    r0 = 0;
    { step = 26; continue; }
  case 25:
    r0 = (s.fillWidth___12818 - s.dw___12998);
  case 26:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_5 = r0;
    r0 = (s.barLeft___12847 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.tmp_3);
    s.dx___13016 = (r0);
    s.lastBrkId = 3594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3594]) return breakpoint(s, 107, 3594, r0);
  case 107:
    s.tmp_0 = r0 = s.barIsVertical___12834;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 27; continue; }
    r0 = s.tmp_0;
    { step = 28; continue; }
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.invertDir___12981);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 28:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 29; continue; }
    r0 = (s.fillHeight___12826 - s.dh___13007);
    { step = 30; continue; }
  case 29:
    r0 = 0;
  case 30:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_5 = r0;
    r0 = (s.barTop___12848 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.tmp_3);
    s.dy___13030 = (r0);
    s.lastBrkId = 3595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3595]) return breakpoint(s, 108, 3595, r0);
  case 108:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1648; s.pc = 110; return s.tmp_1;
  case 110:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.dx___13016;
    s.tmp_0.arg2 = s.dy___13030;
    s.tmp_0.arg3 = s.dw___12998;
    s.tmp_0.arg4 = s.dh___13007;
    r0 = s.arg0.fields["drainColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1649; s.pc = 109; return s.tmp_0;
  case 109:
    r0 = s.retval;
  case 31:
  case 32:
    s.lastBrkId = 3596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3596]) return breakpoint(s, 111, 3596, r0);
  case 111:
    s.tmp_0 = Math_constrain__P272_mk(s);
    r0 = s.arg0.fields["target"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_max"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 1650; s.pc = 112; return s.tmp_0;
  case 112:
    r0 = s.retval;
    s.percent___13053 = (r0);
    s.lastBrkId = 3597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3597]) return breakpoint(s, 113, 3597, r0);
  case 113:
    r0 = pxsim_numops_toBoolDecr(s.barIsVertical___12834);
    if (!r0) { step = 33; continue; }
    r0 = s.fillWidth___12818;
    { step = 34; continue; }
  case 33:
    r0 = (s.fillWidth___12818 * s.percent___13053);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
  case 34:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tw___13062 = (s.tmp_1);
    s.lastBrkId = 3598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3598]) return breakpoint(s, 114, 3598, r0);
  case 114:
    r0 = pxsim_numops_toBoolDecr(s.barIsVertical___12834);
    if (!r0) { step = 35; continue; }
    r0 = (s.fillHeight___12826 * s.percent___13053);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    { step = 36; continue; }
  case 35:
    r0 = s.fillHeight___12826;
  case 36:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.th___13071 = (s.tmp_1);
    s.lastBrkId = 3599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3599]) return breakpoint(s, 115, 3599, r0);
  case 115:
    s.tmp_0 = r0 = s.barIsVertical___12834;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 37; continue; }
    r0 = s.tmp_0;
    { step = 38; continue; }
  case 37:
    r0 = pxsim_numops_toBoolDecr(s.invertDir___12981);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 38:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 39; continue; }
    r0 = 0;
    { step = 40; continue; }
  case 39:
    r0 = (s.fillWidth___12818 - s.tw___13062);
  case 40:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_5 = r0;
    r0 = (s.barLeft___12847 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.tmp_3);
    s.tx___13080 = (r0);
    s.lastBrkId = 3600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3600]) return breakpoint(s, 116, 3600, r0);
  case 116:
    s.tmp_0 = r0 = s.barIsVertical___12834;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 41; continue; }
    r0 = s.tmp_0;
    { step = 42; continue; }
  case 41:
    r0 = pxsim_numops_toBoolDecr(s.invertDir___12981);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 42:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 43; continue; }
    r0 = (s.fillHeight___12826 - s.th___13071);
    { step = 44; continue; }
  case 43:
    r0 = 0;
  case 44:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_5 = r0;
    r0 = (s.barTop___12848 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.tmp_3);
    s.ty___13094 = (r0);
    s.lastBrkId = 3601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3601]) return breakpoint(s, 117, 3601, r0);
  case 117:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1651; s.pc = 119; return s.tmp_1;
  case 119:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.tx___13080;
    s.tmp_0.arg2 = s.ty___13094;
    s.tmp_0.arg3 = s.tw___13062;
    s.tmp_0.arg4 = s.th___13071;
    r0 = s.arg0.fields["onColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1652; s.pc = 118; return s.tmp_0;
  case 118:
    r0 = s.retval;
  case 45:
  case 46:
    s.lastBrkId = 3602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3602]) return breakpoint(s, 120, 3602, r0);
  case 120:
    s.tmp_1 = statusbars_getPostProcessHandlers__P5805_mk(s);
    s.callLocIdx = 1653; s.pc = 121; return s.tmp_1;
  case 121:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 47; continue; }
    r0 = s.tmp_0;
    { step = 48; continue; }
  case 47:
    r0 = pxsim_Array__mk();
  case 48:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.arg0.fields["kind"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.handler___13117 = (r0);
    s.lastBrkId = 3603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3603]) return breakpoint(s, 122, 3603, r0);
  case 122:
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 49; continue; }
    r0 = s.tmp_0;
    { step = 50; continue; }
  case 49:
    r0 = s.handler___13117;
  case 50:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 51; continue; }
    s.lastBrkId = 3604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3604]) return breakpoint(s, 123, 3604, r0);
  case 123:
    s.tmp_2 = lambda_3_mk(s);
    s.tmp_2.argL = s.handler___13117;
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1654; s.pc = 125; return s.tmp_3;
  case 125:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 1655; s.pc = 124; return s.tmp_2;
  case 124:
    r0 = s.retval;
  case 51:
  case 52:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_updateDisplay__P3624.info = {"start":18344,"length":4237,"line":550,"column":8,"endLine":651,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"updateDisplay","argumentNames":["this"]}

function statusbars_StatusBar_updateDisplay__P3624_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_updateDisplay__P3624, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  fillWidth___12818: undefined,
  fillHeight___12826: undefined,
  barIsVertical___12834: undefined,
  borderColor___12837: undefined,
  barLeft___12847: undefined,
  barTop___12848: undefined,
  textWidth___12850: undefined,
  textHeight___12858: undefined,
  labelEnd___12862: undefined,
  textX___12867: undefined,
  textY___12868: undefined,
  showTarget___12974: undefined,
  invertDir___12981: undefined,
  drainPercent___12988: undefined,
  dw___12998: undefined,
  dh___13007: undefined,
  dx___13016: undefined,
  dy___13030: undefined,
  percent___13053: undefined,
  tw___13062: undefined,
  th___13071: undefined,
  tx___13080: undefined,
  ty___13094: undefined,
  handler___13117: undefined,
  arg0: undefined,
} }





function statusbars_util_isNullOrUndefined__P5806(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3679]) return breakpoint(s, 3, 3679, r0);
  case 3:
    r0 = (s.arg0 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
statusbars_util_isNullOrUndefined__P5806.info = {"start":31204,"length":126,"line":923,"column":8,"endLine":925,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"isNullOrUndefined","argumentNames":["v"]}

function statusbars_util_isNullOrUndefined__P5806_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_util_isNullOrUndefined__P5806, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function statusbars_getPostProcessHandlers__P5805(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3678]) return breakpoint(s, 1, 3678, r0);
  case 1:
    s.tmp_0 = statusbars_getSceneData__P5801_mk(s);
    s.tmp_0.arg0 = globals.POST_PROCESS_HANDLERS_KEY___5788;
    s.callLocIdx = 1692; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
statusbars_getPostProcessHandlers__P5805.info = {"start":31030,"length":143,"line":918,"column":4,"endLine":920,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"getPostProcessHandlers","argumentNames":[]}

function statusbars_getPostProcessHandlers__P5805_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_getPostProcessHandlers__P5805, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function statusbars_getSceneData__P5801(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3674]) return breakpoint(s, 1, 3674, r0);
  case 1:
    s.tmp_1 = scene_Scene_data__P2442_mk(s);
    s.tmp_2 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1687; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1688; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_0, s.arg0);
    return leave(s, r0)
  default: oops()
} } }
statusbars_getSceneData__P5801.info = {"start":30592,"length":88,"line":902,"column":4,"endLine":904,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"getSceneData","argumentNames":["key"]}

function statusbars_getSceneData__P5801_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_getSceneData__P5801, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function statusbars_StatusBar_isVerticalBar__P5793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3524]) return breakpoint(s, 1, 3524, r0);
  case 1:
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 > s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_isVerticalBar__P5793.info = {"start":16153,"length":90,"line":491,"column":8,"endLine":493,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"isVerticalBar","argumentNames":["this"]}

function statusbars_StatusBar_isVerticalBar__P5793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_isVerticalBar__P5793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function statusbars_StatusBar_label__P3614(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3502]) return breakpoint(s, 1, 3502, r0);
  case 1:
    r0 = s.arg0.fields["_label"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
statusbars_StatusBar_label__P3614.info = {"start":14061,"length":55,"line":418,"column":8,"endLine":420,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"label","argumentNames":["this"]}
statusbars_StatusBar_label__P3614.isGetter = true;

function statusbars_StatusBar_label__P3614_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_label__P3614, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Math_constrain__P272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[338]) return breakpoint(s, 5, 338, r0);
  case 5:
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg1;
    { step = 4; continue; }
  case 1:
    r0 = (s.arg0 > s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = s.arg2;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
Math_constrain__P272.info = {"start":1679,"length":147,"line":34,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/math.ts","functionName":"constrain","argumentNames":["value","low","high"]}

function Math_constrain__P272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_constrain__P272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function statusbars_StatusBar_image__P3621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3523]) return breakpoint(s, 1, 3523, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
statusbars_StatusBar_image__P3621.info = {"start":15992,"length":55,"line":483,"column":8,"endLine":485,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"image","argumentNames":["this"]}
statusbars_StatusBar_image__P3621.isGetter = true;

function statusbars_StatusBar_image__P3621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_image__P3621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function statusbars_StatusBar_positionNextTo__P3612(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.padding___12585 = undefined;
    s.alignment___12588 = undefined;
    s.position___12591 = undefined;
    s.toFollowIsRelativeToCamera___12617 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3485]) return breakpoint(s, 19, 3485, r0);
  case 19:
    r0 = s.arg0.fields["followPadding"];
    s.padding___12585 = (r0);
    s.lastBrkId = 3486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3486]) return breakpoint(s, 20, 3486, r0);
  case 20:
    r0 = s.arg0.fields["followOffset"];
    s.alignment___12588 = (r0);
    s.lastBrkId = 3487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3487]) return breakpoint(s, 21, 3487, r0);
  case 21:
    r0 = s.arg0.fields["explicitlySetDirection"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["explicitlySetDirection"];
    { step = 4; continue; }
  case 1:
    s.tmp_3 = statusbars_StatusBar_isVerticalBar__P5793_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1580; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = 0;
    { step = 3; continue; }
  case 2:
    r0 = 1;
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.position___12591 = (s.tmp_5);
    s.lastBrkId = 3488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3488]) return breakpoint(s, 23, 3488, r0);
  case 23:
    r0 = s.arg2.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3489]) return breakpoint(s, 24, 3489, r0);
  case 24:
    s.tmp_6 = Sprite_destroy__P2087_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.tmp_6.arg1 = undefined;
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1581; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 3490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3490]) return breakpoint(s, 26, 3490, r0);
  case 26:
    r0 = s.arg2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 512);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    s.toFollowIsRelativeToCamera___12617 = (r0);
    s.lastBrkId = 3491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3491]) return breakpoint(s, 27, 3491, r0);
  case 27:
    r0 = s.arg1.fields["flags"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 & 512);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.toFollowIsRelativeToCamera___12617);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3492]) return breakpoint(s, 28, 3492, r0);
  case 28:
    s.tmp_7 = Sprite_setFlag__P2079_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.tmp_7.arg1 = 512;
    s.tmp_7.arg2 = s.toFollowIsRelativeToCamera___12617;
    s.callLocIdx = 1582; s.pc = 29; return s.tmp_7;
  case 29:
    r0 = s.retval;
  case 9:
  case 10:
    s.lastBrkId = 3493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3493]) return breakpoint(s, 30, 3493, r0);
  case 30:
    r0 = (s.position___12591 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = (s.position___12591 === 2);
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 3494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3494]) return breakpoint(s, 31, 3494, r0);
  case 31:
    s.tmp_2 = Sprite_y__P2028_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_4 = Sprite_y__P2027_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1583; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + s.alignment___12588);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1584; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 3495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3495]) return breakpoint(s, 34, 3495, r0);
  case 34:
    r0 = (s.position___12591 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3496]) return breakpoint(s, 35, 3496, r0);
  case 35:
    s.tmp_1 = Sprite_left__P2063_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_3 = Sprite_right__P2064_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.callLocIdx = 1585; s.pc = 37; return s.tmp_3;
  case 37:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___12585);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1586; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    { step = 14; continue; }
  case 13:
    s.lastBrkId = 3497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3497]) return breakpoint(s, 38, 3497, r0);
  case 38:
    s.tmp_0 = Sprite_right__P2065_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_2 = Sprite_left__P2062_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1587; s.pc = 40; return s.tmp_2;
  case 40:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.padding___12585);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1588; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
  case 14:
    { step = 18; continue; }
  case 15:
    s.lastBrkId = 3498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3498]) return breakpoint(s, 41, 3498, r0);
  case 41:
    s.tmp_0 = Sprite_x__P2026_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_2 = Sprite_x__P2025_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1589; s.pc = 43; return s.tmp_2;
  case 43:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.alignment___12588);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1590; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 3499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3499]) return breakpoint(s, 44, 3499, r0);
  case 44:
    r0 = (s.position___12591 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 3500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3500]) return breakpoint(s, 45, 3500, r0);
  case 45:
    s.tmp_1 = Sprite_top__P2067_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_3 = Sprite_bottom__P2068_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.callLocIdx = 1591; s.pc = 47; return s.tmp_3;
  case 47:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___12585);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1592; s.pc = 46; return s.tmp_1;
  case 46:
    r0 = s.retval;
    { step = 17; continue; }
  case 16:
    s.lastBrkId = 3501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3501]) return breakpoint(s, 48, 3501, r0);
  case 48:
    s.tmp_0 = Sprite_bottom__P2069_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_2 = Sprite_top__P2066_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1593; s.pc = 50; return s.tmp_2;
  case 50:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.padding___12585);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1594; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
  case 17:
  case 18:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_positionNextTo__P3612.info = {"start":12471,"length":1505,"line":382,"column":8,"endLine":412,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"positionNextTo","argumentNames":["this","status","target"]}

function statusbars_StatusBar_positionNextTo__P3612_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_positionNextTo__P3612, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  padding___12585: undefined,
  alignment___12588: undefined,
  position___12591: undefined,
  toFollowIsRelativeToCamera___12617: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_bottom__P2069(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1304]) return breakpoint(s, 1, 1304, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2067_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_height__P2061_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 352; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 353; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_bottom__P2069.info = {"start":10235,"length":73,"line":374,"column":4,"endLine":376,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this","value"]}

function Sprite_bottom__P2069_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2069, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_height__P2061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1294]) return breakpoint(s, 1, 1294, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_height__P2061.info = {"start":8639,"length":54,"line":314,"column":4,"endLine":316,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"height","argumentNames":["this"]}
Sprite_height__P2061.isGetter = true;

function Sprite_height__P2061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_height__P2061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_bottom__P2068(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1303]) return breakpoint(s, 1, 1303, r0);
  case 1:
    s.tmp_1 = Sprite_top__P2066_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 350; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_height__P2061_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 351; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_bottom__P2068.info = {"start":10083,"length":59,"line":369,"column":4,"endLine":371,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this"]}
Sprite_bottom__P2068.isGetter = true;

function Sprite_bottom__P2068_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2068, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_top__P2067(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___12704 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1301]) return breakpoint(s, 1, 1301, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 347; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___12704 = (r0);
    s.lastBrkId = 1302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1302]) return breakpoint(s, 3, 1302, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2159_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___12704;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = 0;
    s.tmp_1 = Fx_sub__P154_mk(s);
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 348; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 349; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_top__P2067.info = {"start":9733,"length":256,"line":355,"column":4,"endLine":365,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this","value"]}

function Sprite_top__P2067_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2067, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___12704: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_moveSprite__P2163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2159_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_moveSprite__P2163.info = {"start":230,"length":43,"line":13,"column":4,"endLine":13,"endColumn":47,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function PhysicsEngine_moveSprite__P2163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_moveSprite__P2163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_top__P2066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1300]) return breakpoint(s, 1, 1300, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 346; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_top__P2066.info = {"start":9590,"length":53,"line":350,"column":4,"endLine":352,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this"]}
Sprite_top__P2066.isGetter = true;

function Sprite_top__P2066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_right__P2065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1299]) return breakpoint(s, 1, 1299, r0);
  case 1:
    s.tmp_0 = Sprite_left__P2063_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_width__P2060_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 344; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 345; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_right__P2065.info = {"start":9428,"length":71,"line":344,"column":4,"endLine":346,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this","value"]}

function Sprite_right__P2065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_width__P2060(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1293]) return breakpoint(s, 1, 1293, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_width__P2060.info = {"start":8494,"length":52,"line":309,"column":4,"endLine":311,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"width","argumentNames":["this"]}
Sprite_width__P2060.isGetter = true;

function Sprite_width__P2060_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_width__P2060, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_right__P2064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1298]) return breakpoint(s, 1, 1298, r0);
  case 1:
    s.tmp_1 = Sprite_left__P2062_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 342; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_width__P2060_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 343; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_right__P2064.info = {"start":9279,"length":57,"line":339,"column":4,"endLine":341,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this"]}
Sprite_right__P2064.isGetter = true;

function Sprite_right__P2064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_left__P2063(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___12759 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1296]) return breakpoint(s, 1, 1296, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 339; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___12759 = (r0);
    s.lastBrkId = 1297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1297]) return breakpoint(s, 3, 1297, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2159_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___12759;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_1 = Fx_sub__P154_mk(s);
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 340; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 341; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_left__P2063.info = {"start":8929,"length":257,"line":325,"column":4,"endLine":335,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this","value"]}

function Sprite_left__P2063_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2063, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___12759: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1295]) return breakpoint(s, 1, 1295, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 338; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_left__P2062.info = {"start":8785,"length":53,"line":320,"column":4,"endLine":322,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this"]}
Sprite_left__P2062.isGetter = true;

function Sprite_left__P2062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_y__P2028(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1230]) return breakpoint(s, 1, 1230, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2067_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 294; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_y__P2028.info = {"start":2022,"length":72,"line":86,"column":4,"endLine":88,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this","v"]}

function Sprite_y__P2028_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2028, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_x__P2026(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1228]) return breakpoint(s, 1, 1228, r0);
  case 1:
    s.tmp_0 = Sprite_left__P2063_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 292; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_x__P2026.info = {"start":1673,"length":72,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this","v"]}

function Sprite_x__P2026_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2026, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function statusbars_create__P3635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.onColor___13171 = undefined;
    s.offColor___13172 = undefined;
    s.drainColor___13173 = undefined;
    s.sb___13186 = undefined;
    s.output___13195 = undefined;
    s.cs___13202 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3614]) return breakpoint(s, 5, 3614, r0);
  case 5:
    s.onColor___13171 = (7);
    s.lastBrkId = 3615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3615]) return breakpoint(s, 6, 3615, r0);
  case 6:
    s.offColor___13172 = (2);
    s.lastBrkId = 3616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3616]) return breakpoint(s, 7, 3616, r0);
  case 7:
    s.drainColor___13173 = (3);
    s.lastBrkId = 3617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3617]) return breakpoint(s, 8, 3617, r0);
  case 8:
    r0 = (s.arg2 === globals.Energy___3576);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3618]) return breakpoint(s, 9, 3618, r0);
  case 9:
    s.onColor___13171 = (5);
    s.lastBrkId = 3619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3619]) return breakpoint(s, 10, 3619, r0);
  case 10:
    s.offColor___13172 = (11);
    s.lastBrkId = 3620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3620]) return breakpoint(s, 11, 3620, r0);
  case 11:
    s.drainColor___13173 = (4);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 3621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3621]) return breakpoint(s, 12, 3621, r0);
  case 12:
    r0 = (s.arg2 === globals.Magic___3577);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3622]) return breakpoint(s, 13, 3622, r0);
  case 13:
    s.onColor___13171 = (8);
    s.lastBrkId = 3623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3623]) return breakpoint(s, 14, 3623, r0);
  case 14:
    s.offColor___13172 = (11);
    s.lastBrkId = 3624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3624]) return breakpoint(s, 15, 3624, r0);
  case 15:
    s.drainColor___13173 = (9);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 3625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3625]) return breakpoint(s, 16, 3625, r0);
  case 16:
    r0 = pxsim_pxtcore_mkClassInstance(statusbars_StatusBar__C3596_VT);
    s.tmp_0 = r0;
    s.tmp_1 = statusbars_StatusBar_constructor__P3607_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.onColor___13171;
    s.tmp_1.arg4 = s.offColor___13172;
    s.tmp_1.arg5 = s.drainColor___13173;
    s.tmp_1.arg6 = 100;
    s.tmp_1.arg7 = s.arg2;
    s.callLocIdx = 1656; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.sb___13186 = (s.tmp_0);
    s.lastBrkId = 3626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3626]) return breakpoint(s, 18, 3626, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(StatusBarSprite__C3579_VT);
    s.tmp_0 = r0;
    s.tmp_1 = StatusBarSprite_constructor__P3580_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.sb___13186;
    s.callLocIdx = 1657; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.output___13195 = (s.tmp_0);
    s.lastBrkId = 3627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3627]) return breakpoint(s, 20, 3627, r0);
  case 20:
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.output___13195;
    s.tmp_0.arg1 = globals.StatusBar___3571;
    s.callLocIdx = 1658; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 3628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3628]) return breakpoint(s, 22, 3628, r0);
  case 22:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1659; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.cs___13202 = (r0);
    s.lastBrkId = 3629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3629]) return breakpoint(s, 24, 3629, r0);
  case 24:
    s.tmp_0 = PhysicsEngine__C2159_v0_2_mk(s);
    r0 = s.cs___13202.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.output___13195;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3630]) return breakpoint(s, 26, 3630, r0);
  case 26:
    r0 = pxsim_pxtcore_mkAction(1, inline__P13213);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg2);
    r0 = pxsim_pxtcore_mkAction(1, inline__P13220);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.output___13195);
    s.tmp_2 = helpers_arrayForEach__P107_mk(s);
    s.tmp_3 = helpers_arrayFilter__P108_mk(s);
    r0 = s.cs___13202.fields["createdHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 1660; s.pc = 28; return s.tmp_3;
  case 28:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1662; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 3631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3631]) return breakpoint(s, 29, 3631, r0);
  case 29:
    r0 = (s.sb___13186).fields["sprite"] = (s.output___13195);
    s.lastBrkId = 3632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3632]) return breakpoint(s, 30, 3632, r0);
  case 30:
    s.tmp_0 = Sprite_setFlag__P2079_mk(s);
    s.tmp_0.arg0 = s.output___13195;
    s.tmp_0.arg1 = 512;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1663; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 3633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3633]) return breakpoint(s, 32, 3633, r0);
  case 32:
    s.tmp_0 = Sprite_setFlag__P2079_mk(s);
    s.tmp_0.arg0 = s.output___13195;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1664; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.lastBrkId = 3634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3634]) return breakpoint(s, 34, 3634, r0);
  case 34:
    s.tmp_1 = Sprite_data__P2041_mk(s);
    s.tmp_1.arg0 = s.output___13195;
    s.callLocIdx = 1665; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_0, globals.STATUS_BAR_DATA_KEY___5766, s.sb___13186);
    s.lastBrkId = 3635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3635]) return breakpoint(s, 36, 3635, r0);
  case 36:
    s.tmp_0 = if_z_2_mk(s);
    s.tmp_0.arg0 = s.output___13195;
    s.tmp_0.arg1 = 95;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1666; s.pc = 37; return s.tmp_0; }
    }
  case 37:
    r0 = s.retval;
    s.lastBrkId = 3636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3636]) return breakpoint(s, 38, 3636, r0);
  case 38:
    s.tmp_0 = statusbars_init__P5799_mk(s);
    s.tmp_0.arg0 = s.output___13195;
    s.callLocIdx = 1667; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.lastBrkId = 3637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3637]) return breakpoint(s, 40, 3637, r0);
  case 40:
    r0 = s.output___13195;
    return leave(s, r0)
  default: oops()
} } }
statusbars_create__P3635.info = {"start":24582,"length":1328,"line":720,"column":4,"endLine":770,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"create","argumentNames":["width","height","kind"]}

function statusbars_create__P3635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_create__P3635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  onColor___13171: undefined,
  offColor___13172: undefined,
  drainColor___13173: undefined,
  sb___13186: undefined,
  output___13195: undefined,
  cs___13202: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P13213(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
inline__P13213.info = {"start":25571,"length":19,"line":757,"column":20,"endLine":757,"endColumn":39,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["h"]}

function inline__P13213_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P13213, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P13220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 1661; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 1661; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1661; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 1661; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P13220.info = {"start":25613,"length":22,"line":758,"column":21,"endLine":758,"endColumn":43,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["h"]}

function inline__P13220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P13220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function statusbars_init__P5799(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.managedSprites___13249 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3646]) return breakpoint(s, 3, 3646, r0);
  case 3:
    s.tmp_0 = statusbars_getManagedSprites__P5802_mk(s);
    s.callLocIdx = 1674; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.managedSprites___13249 = (r0);
    s.lastBrkId = 3647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3647]) return breakpoint(s, 5, 3647, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.managedSprites___13249);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3648]) return breakpoint(s, 6, 3648, r0);
  case 6:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    s.managedSprites___13249 = (r0);
    s.tmp_4 = scene_Scene_data__P2442_mk(s);
    s.tmp_5 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1675; s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1676; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, globals.MANAGED_SPRITES_KEY___5770, s.tmp_2);
    s.lastBrkId = 3649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3649]) return breakpoint(s, 9, 3649, r0);
  case 9:
    s.tmp_0 = control_EventContext_registerFrameHandler__P392_mk(s);
    s.tmp_1 = game_eventContext__P2535_mk(s);
    s.callLocIdx = 1677; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 25;
    s.tmp_0.arg2 = inline__P13264;
    s.callLocIdx = 1682; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 3666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3666]) return breakpoint(s, 12, 3666, r0);
  case 12:
    r0 = pxsim_Array__push(s.managedSprites___13249, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_init__P5799.info = {"start":29026,"length":1174,"line":857,"column":4,"endLine":886,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"init","argumentNames":["s"]}

function statusbars_init__P5799_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_init__P5799, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  managedSprites___13249: undefined,
  arg0: undefined,
} }





function inline__P13264(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.managed___13265 = undefined;
    s.i___13268 = undefined;
    s.spr___13275 = undefined;
    s.sb___13279 = undefined;
    s.spriteToFollow___13286 = undefined;
    s.lastBrkId = 3650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3650]) return breakpoint(s, 10, 3650, r0);
  case 10:
    s.tmp_0 = statusbars_getManagedSprites__P5802_mk(s);
    s.callLocIdx = 1678; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.managed___13265 = (r0);
    s.lastBrkId = 3651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3651]) return breakpoint(s, 12, 3651, r0);
  case 12:
    r0 = pxsim_Array__length(s.managed___13265);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.i___13268 = (r0);
    s.lastBrkId = 3652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3652]) return breakpoint(s, 13, 3652, r0);
  case 13:
  case 1:
    s.lastBrkId = 3653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3653]) return breakpoint(s, 14, 3653, r0);
  case 14:
    r0 = (s.i___13268 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3654]) return breakpoint(s, 15, 3654, r0);
  case 15:
    r0 = pxsim_Array__getAt(s.managed___13265, s.i___13268);
    s.spr___13275 = (r0);
    s.lastBrkId = 3655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3655]) return breakpoint(s, 16, 3655, r0);
  case 16:
    r0 = s.spr___13275.fields["_statusBar"];
    s.sb___13279 = (r0);
    s.lastBrkId = 3656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3656]) return breakpoint(s, 17, 3656, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.sb___13279);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3657]) return breakpoint(s, 18, 3657, r0);
  case 18:
    s.tmp_0 = statusbars_StatusBar_updateState__P3623_mk(s);
    s.tmp_0.arg0 = s.sb___13279;
    s.callLocIdx = 1679; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 3658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3658]) return breakpoint(s, 20, 3658, r0);
  case 20:
    s.tmp_0 = if_spriteToFollow_1_mk(s);
    s.tmp_0.arg0 = s.sb___13279;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "spriteToFollow");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["spriteToFollow"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["spriteToFollow"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 1680; s.pc = 21; return s.tmp_0; }
    }
  case 21:
    r0 = s.retval;
    s.spriteToFollow___13286 = (r0);
    s.lastBrkId = 3659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3659]) return breakpoint(s, 22, 3659, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.spriteToFollow___13286);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3660]) return breakpoint(s, 23, 3660, r0);
  case 23:
    s.tmp_0 = statusbars_StatusBar_positionNextTo__P3612_mk(s);
    s.tmp_0.arg0 = s.sb___13279;
    s.tmp_0.arg1 = s.spr___13275;
    s.tmp_0.arg2 = s.spriteToFollow___13286;
    s.callLocIdx = 1681; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
  case 2:
  case 3:
  case 4:
  case 5:
    s.lastBrkId = 3661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3661]) return breakpoint(s, 25, 3661, r0);
  case 25:
    r0 = s.spr___13275.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3662]) return breakpoint(s, 26, 3662, r0);
  case 26:
    r0 = (s.sb___13279).fields["sprite"] = (undefined);
    s.lastBrkId = 3663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3663]) return breakpoint(s, 27, 3663, r0);
  case 27:
    r0 = pxsim_Array_.removeAt(s.managed___13265, s.i___13268);
    s.lastBrkId = 3664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3664]) return breakpoint(s, 28, 3664, r0);
  case 28:
    { step = 8; continue; }
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 3665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3665]) return breakpoint(s, 29, 3665, r0);
  case 29:
    r0 = (s.i___13268 - 1);
    s.i___13268 = (r0);
    { step = 1; continue; }
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P13264.info = {"start":29325,"length":817,"line":861,"column":80,"endLine":882,"endColumn":13,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":[]}

function inline__P13264_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P13264, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  managed___13265: undefined,
  i___13268: undefined,
  spr___13275: undefined,
  sb___13279: undefined,
  spriteToFollow___13286: undefined,
} }





function statusbars_getManagedSprites__P5802(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3675]) return breakpoint(s, 1, 3675, r0);
  case 1:
    s.tmp_0 = statusbars_getSceneData__P5801_mk(s);
    s.tmp_0.arg0 = globals.MANAGED_SPRITES_KEY___5770;
    s.callLocIdx = 1689; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
statusbars_getManagedSprites__P5802.info = {"start":30686,"length":107,"line":906,"column":4,"endLine":908,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"getManagedSprites","argumentNames":[]}

function statusbars_getManagedSprites__P5802_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_getManagedSprites__P5802, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function statusbars_StatusBar_updateState__P3623(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.target___13312 = undefined;
    s.displayValue___13313 = undefined;
    s.currTime___13328 = undefined;
    s.change___13343 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3538]) return breakpoint(s, 12, 3538, r0);
  case 12:
    s.tmp_0 = if_target_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "target");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["target"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["target"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 1619; s.pc = 13; return s.tmp_0; }
    }
  case 13:
    r0 = s.retval;
    s.target___13312 = (r0);
    s.lastBrkId = 3539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3539]) return breakpoint(s, 14, 3539, r0);
  case 14:
    s.tmp_2 = if_displayValue_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "displayValue");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["displayValue"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["displayValue"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1620; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.displayValue___13313 = (r0);
    s.lastBrkId = 3540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3540]) return breakpoint(s, 16, 3540, r0);
  case 16:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3541]) return breakpoint(s, 17, 3541, r0);
  case 17:
    s.tmp_2 = r0 = s.arg0;
    s.tmp_4 = Math_constrain__P272_mk(s);
    s.tmp_4.arg0 = s.target___13312;
    s.tmp_4.arg1 = 0;
    s.tmp_5 = statusbars_StatusBar_max__P3616_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 1621; s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1622; s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["target"] = (s.tmp_3);
    s.lastBrkId = 3542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3542]) return breakpoint(s, 20, 3542, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_constrain__P272_mk(s);
    s.tmp_2.arg0 = s.displayValue___13313;
    s.tmp_2.arg1 = 0;
    s.tmp_3 = statusbars_StatusBar_max__P3616_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1623; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1624; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["displayValue"] = (s.tmp_1);
  case 1:
  case 2:
    s.lastBrkId = 3543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3543]) return breakpoint(s, 23, 3543, r0);
  case 23:
    s.tmp_0 = scene_Scene_millis__P2443_mk(s);
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1625; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1626; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.currTime___13328 = (r0);
    s.lastBrkId = 3544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3544]) return breakpoint(s, 26, 3544, r0);
  case 26:
    s.tmp_2 = Math_abs__P123_mk(s);
    r0 = s.arg0.fields["lastUpdate"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.currTime___13328);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1627; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["throttleAmount"];
    s.tmp_4 = r0;
    r0 = (s.tmp_1 < s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3545]) return breakpoint(s, 28, 3545, r0);
  case 28:
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3546]) return breakpoint(s, 29, 3546, r0);
  case 29:
    s.tmp_6 = statusbars_StatusBar_max__P3616_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 1628; s.pc = 30; return s.tmp_6;
  case 30:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_9 = Math_max__P125_mk(s);
    r0 = s.arg0.fields["_barWidth"];
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["_barHeight"];
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 1629; s.pc = 31; return s.tmp_9;
  case 31:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_11 = r0;
    r0 = (s.tmp_11 * 2);
    s.tmp_10 = r0;
    r0 = (s.tmp_8 - s.tmp_10);
    s.tmp_7 = r0;
    r0 = (s.tmp_5 / s.tmp_7);
    s.change___13343 = (r0);
    s.lastBrkId = 3547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3547]) return breakpoint(s, 32, 3547, r0);
  case 32:
    r0 = s.arg0.fields["target"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["displayValue"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3548]) return breakpoint(s, 33, 3548, r0);
  case 33:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = Math_min__P126_mk(s);
    r0 = (s.displayValue___13313 + s.change___13343);
    s.tmp_5.arg0 = r0;
    r0 = s.arg0.fields["target"];
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 1630; s.pc = 34; return s.tmp_5;
  case 34:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["displayValue"] = (s.tmp_4);
    s.lastBrkId = 3549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3549]) return breakpoint(s, 35, 3549, r0);
  case 35:
    r0 = (s.arg0).fields["lastUpdate"] = (s.currTime___13328);
    { step = 8; continue; }
  case 5:
    s.lastBrkId = 3550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3550]) return breakpoint(s, 36, 3550, r0);
  case 36:
    r0 = s.arg0.fields["target"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["displayValue"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3551]) return breakpoint(s, 37, 3551, r0);
  case 37:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = Math_max__P125_mk(s);
    r0 = (s.displayValue___13313 - s.change___13343);
    s.tmp_5.arg0 = r0;
    r0 = s.arg0.fields["target"];
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 1631; s.pc = 38; return s.tmp_5;
  case 38:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["displayValue"] = (s.tmp_4);
    s.lastBrkId = 3552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3552]) return breakpoint(s, 39, 3552, r0);
  case 39:
    r0 = (s.arg0).fields["lastUpdate"] = (s.currTime___13328);
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 3553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3553]) return breakpoint(s, 40, 3553, r0);
  case 40:
    r0 = s.arg0.fields["displayValue"];
    s.tmp_1 = r0;
    r0 = (s.displayValue___13313 !== s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3554]) return breakpoint(s, 41, 3554, r0);
  case 41:
    s.tmp_2 = statusbars_StatusBar_updateDisplay__P3624_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1632; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_updateState__P3623.info = {"start":17267,"length":1067,"line":524,"column":8,"endLine":548,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"updateState","argumentNames":["this"]}

function statusbars_StatusBar_updateState__P3623_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_updateState__P3623, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  target___13312: undefined,
  displayValue___13313: undefined,
  currTime___13328: undefined,
  change___13343: undefined,
  arg0: undefined,
} }





function statusbars_StatusBar_max__P3616(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3503]) return breakpoint(s, 1, 3503, r0);
  case 1:
    r0 = s.arg0.fields["_max"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
statusbars_StatusBar_max__P3616.info = {"start":14238,"length":51,"line":427,"column":8,"endLine":429,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"max","argumentNames":["this"]}
statusbars_StatusBar_max__P3616.isGetter = true;

function statusbars_StatusBar_max__P3616_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_max__P3616, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function statusbars_StatusBar_constructor__P3607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_barWidth"] = (s.arg1);
    r0 = (s.arg0).fields["_barHeight"] = (s.arg2);
    r0 = (s.arg0).fields["onColor"] = (s.arg3);
    r0 = (s.arg0).fields["offColor"] = (s.arg4);
    r0 = (s.arg0).fields["drainColor"] = (s.arg5);
    r0 = (s.arg0).fields["_max"] = (s.arg6);
    r0 = (s.arg0).fields["kind"] = (s.arg7);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Scene_millis__P2443_mk(s);
    s.tmp_3 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1577; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1578; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastUpdate"] = (s.tmp_1);
    r0 = (s.arg0).fields["throttleAmount"] = (100);
    s.lastBrkId = 3473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3473]) return breakpoint(s, 3, 3473, r0);
  case 3:
    r0 = (s.arg0).fields["borderWidth"] = (0);
    s.lastBrkId = 3474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3474]) return breakpoint(s, 4, 3474, r0);
  case 4:
    r0 = (s.arg0).fields["borderColor"] = (undefined);
    s.lastBrkId = 3475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3475]) return breakpoint(s, 5, 3475, r0);
  case 5:
    r0 = (s.arg0).fields["flags"] = (4);
    s.lastBrkId = 3476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3476]) return breakpoint(s, 6, 3476, r0);
  case 6:
    r0 = (s.arg0).fields["_label"] = (undefined);
    s.lastBrkId = 3477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3477]) return breakpoint(s, 7, 3477, r0);
  case 7:
    r0 = (s.arg0).fields["labelColor"] = (1);
    s.lastBrkId = 3478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3478]) return breakpoint(s, 8, 3478, r0);
  case 8:
    r0 = (s.arg0).fields["font"] = (globals.font5___1750);
    s.lastBrkId = 3479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3479]) return breakpoint(s, 9, 3479, r0);
  case 9:
    r0 = (s.arg0).fields["followPadding"] = (0);
    s.lastBrkId = 3480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3480]) return breakpoint(s, 10, 3480, r0);
  case 10:
    r0 = (s.arg0).fields["followOffset"] = (0);
    s.lastBrkId = 3481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3481]) return breakpoint(s, 11, 3481, r0);
  case 11:
    r0 = (s.arg0).fields["hasHitZero"] = (false);
    s.lastBrkId = 3482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3482]) return breakpoint(s, 12, 3482, r0);
  case 12:
    r0 = (s.arg0).fields["displayValue"] = (s.arg6);
    s.lastBrkId = 3483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3483]) return breakpoint(s, 13, 3483, r0);
  case 13:
    r0 = (s.arg0).fields["target"] = (s.arg6);
    s.lastBrkId = 3484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3484]) return breakpoint(s, 14, 3484, r0);
  case 14:
    s.tmp_0 = statusbars_StatusBar_rebuildImage__P5795_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1579; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_constructor__P3607.info = {"start":11261,"length":834,"line":337,"column":8,"endLine":362,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["this","_barWidth","_barHeight","onColor","offColor","drainColor","_max","kind"]}

function statusbars_StatusBar_constructor__P3607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_constructor__P3607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function statusbars_StatusBar_rebuildImage__P5795(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.width___13543 = undefined;
    s.height___13546 = undefined;
    s.labelWidth___13550 = undefined;
    s.newImg___13592 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3525]) return breakpoint(s, 11, 3525, r0);
  case 11:
    r0 = s.arg0.fields["_barWidth"];
    s.width___13543 = (r0);
    s.lastBrkId = 3526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3526]) return breakpoint(s, 12, 3526, r0);
  case 12:
    r0 = s.arg0.fields["_barHeight"];
    s.height___13546 = (r0);
    s.lastBrkId = 3527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3527]) return breakpoint(s, 13, 3527, r0);
  case 13:
    s.tmp_1 = statusbars_StatusBar_label__P3614_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1607; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3528]) return breakpoint(s, 15, 3528, r0);
  case 15:
    s.tmp_3 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1608; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = statusbars_StatusBar_label__P3614_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 1609; s.pc = 17; return s.tmp_6;
  case 17:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String_.length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 * s.tmp_4);
    s.labelWidth___13550 = (r0);
    s.lastBrkId = 3529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3529]) return breakpoint(s, 18, 3529, r0);
  case 18:
    s.tmp_1 = statusbars_StatusBar_isVerticalBar__P5793_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1610; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3530]) return breakpoint(s, 20, 3530, r0);
  case 20:
    s.tmp_2 = Math_max__P125_mk(s);
    s.tmp_2.arg0 = s.width___13543;
    s.tmp_2.arg1 = s.labelWidth___13550;
    s.callLocIdx = 1611; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.width___13543 = (r0);
    s.lastBrkId = 3531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3531]) return breakpoint(s, 22, 3531, r0);
  case 22:
    s.tmp_0 = r0 = s.height___13546;
    s.tmp_3 = if_charHeight_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1612; s.pc = 23; return s.tmp_3; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.height___13546 = (r0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3532]) return breakpoint(s, 24, 3532, r0);
  case 24:
    r0 = (s.width___13543 + s.labelWidth___13550);
    s.width___13543 = (r0);
    s.lastBrkId = 3533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3533]) return breakpoint(s, 25, 3533, r0);
  case 25:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = s.height___13546;
    s.tmp_1 = if_charHeight_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1613; s.pc = 27; return s.tmp_1; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1614; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.height___13546 = (r0);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 3534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3534]) return breakpoint(s, 28, 3534, r0);
  case 28:
    s.tmp_3 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1615; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_4 = r0 = s.width___13543;
    s.tmp_7 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 1616; s.pc = 30; return s.tmp_7;
  case 30:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 !== s.tmp_5);
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBool(s.tmp_8);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_8;
    { step = 8; continue; }
  case 7:
    s.tmp_9 = r0 = s.height___13546;
    s.tmp_12 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_12.arg0 = s.arg0;
    s.callLocIdx = 1617; s.pc = 31; return s.tmp_12;
  case 31:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_11);
    s.tmp_10 = r0;
    r0 = (s.tmp_9 !== s.tmp_10);
  case 8:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3535]) return breakpoint(s, 32, 3535, r0);
  case 32:
    r0 = pxsim.image.create(s.width___13543, s.height___13546);
    s.newImg___13592 = (r0);
    s.lastBrkId = 3536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3536]) return breakpoint(s, 33, 3536, r0);
  case 33:
    r0 = (s.arg0).fields["_image"] = (s.newImg___13592);
  case 9:
  case 10:
    s.lastBrkId = 3537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3537]) return breakpoint(s, 34, 3537, r0);
  case 34:
    s.tmp_0 = statusbars_StatusBar_updateDisplay__P3624_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1618; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_rebuildImage__P5795.info = {"start":16369,"length":790,"line":499,"column":8,"endLine":520,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"rebuildImage","argumentNames":["this"]}

function statusbars_StatusBar_rebuildImage__P5795_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_rebuildImage__P5795, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  width___13543: undefined,
  height___13546: undefined,
  labelWidth___13550: undefined,
  newImg___13592: undefined,
  arg0: undefined,
} }





function StatusBarSprite_constructor__P3580(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StatusBarSprite__C3579_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_statusBar"] = (s.arg1);
    s.lastBrkId = 3447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3447]) return breakpoint(s, 1, 3447, r0);
  case 1:
    s.tmp_0 = Sprite_constructor__P2053_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 1563; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1564; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StatusBarSprite_constructor__P3580.info = {"start":2182,"length":93,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["this","_statusBar"]}

function StatusBarSprite_constructor__P3580_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarSprite_constructor__P3580, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_constructor__P2053(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1247]) return breakpoint(s, 1, 1247, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P1860_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 309; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1248]) return breakpoint(s, 3, 1248, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 310; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1249]) return breakpoint(s, 5, 1249, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 311; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1250]) return breakpoint(s, 7, 1250, r0);
  case 7:
    r0 = s.arg0.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1251]) return breakpoint(s, 8, 1251, r0);
  case 8:
    r0 = s.arg0.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1252]) return breakpoint(s, 9, 1252, r0);
  case 9:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 312; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1253]) return breakpoint(s, 11, 1253, r0);
  case 11:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 313; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1254]) return breakpoint(s, 13, 1254, r0);
  case 13:
    s.tmp_0 = Sprite_ax__P2034_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 314; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 1255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1255]) return breakpoint(s, 15, 1255, r0);
  case 15:
    s.tmp_0 = Sprite_ay__P2036_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 315; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1256]) return breakpoint(s, 17, 1256, r0);
  case 17:
    s.tmp_0 = Sprite_fx__P2038_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 316; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1257]) return breakpoint(s, 19, 1257, r0);
  case 19:
    s.tmp_0 = Sprite_fy__P2040_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 317; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1258]) return breakpoint(s, 21, 1258, r0);
  case 21:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1259]) return breakpoint(s, 22, 1259, r0);
  case 22:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 318; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 1260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1260]) return breakpoint(s, 24, 1260, r0);
  case 24:
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 319; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 1261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1261]) return breakpoint(s, 26, 1261, r0);
  case 26:
    r0 = (s.arg0).fields["layer"] = (1);
    s.lastBrkId = 1262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1262]) return breakpoint(s, 27, 1262, r0);
  case 27:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1263]) return breakpoint(s, 28, 1263, r0);
  case 28:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_overlappers"] = (s.tmp_1);
    s.lastBrkId = 1264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1264]) return breakpoint(s, 29, 1264, r0);
  case 29:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_constructor__P2053.info = {"start":5178,"length":618,"line":202,"column":4,"endLine":222,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["this","img"]}

function Sprite_constructor__P2053_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_constructor__P2053, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2040(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1242]) return breakpoint(s, 1, 1242, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_3 = Math_max__P125_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 307; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 308; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fy__P2040.info = {"start":4057,"length":64,"line":151,"column":4,"endLine":153,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this","v"]}

function Sprite_fy__P2040_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2040, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2039(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1241]) return breakpoint(s, 1, 1241, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_fy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 306; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fy__P2039.info = {"start":3895,"length":60,"line":146,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this"]}
Sprite_fy__P2039.isGetter = true;

function Sprite_fy__P2039_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2039, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_fx__P2038(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1240]) return breakpoint(s, 1, 1240, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_3 = Math_max__P125_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 304; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 305; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fx__P2038.info = {"start":3714,"length":64,"line":141,"column":4,"endLine":143,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this","v"]}

function Sprite_fx__P2038_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2038, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fx__P2037(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1239]) return breakpoint(s, 1, 1239, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_fx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 303; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fx__P2037.info = {"start":3552,"length":60,"line":136,"column":4,"endLine":138,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this"]}
Sprite_fx__P2037.isGetter = true;

function Sprite_fx__P2037_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2037, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ay__P2036(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1238]) return breakpoint(s, 1, 1238, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 302; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ay__P2036.info = {"start":3383,"length":51,"line":130,"column":4,"endLine":132,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this","v"]}

function Sprite_ay__P2036_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2036, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ay__P2035(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1237]) return breakpoint(s, 1, 1237, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_ay"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 301; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ay__P2035.info = {"start":3217,"length":60,"line":125,"column":4,"endLine":127,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this"]}
Sprite_ay__P2035.isGetter = true;

function Sprite_ay__P2035_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2035, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ax__P2034(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1236]) return breakpoint(s, 1, 1236, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 300; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ax"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ax__P2034.info = {"start":3044,"length":51,"line":119,"column":4,"endLine":121,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this","v"]}

function Sprite_ax__P2034_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2034, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ax__P2033(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1235]) return breakpoint(s, 1, 1235, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P166_mk(s);
    r0 = s.arg0.fields["_ax"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 299; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ax__P2033.info = {"start":2878,"length":60,"line":114,"column":4,"endLine":116,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this"]}
Sprite_ax__P2033.isGetter = true;

function Sprite_ax__P2033_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2033, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_addSprite__P2161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2159_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_addSprite__P2161.info = {"start":124,"length":29,"line":8,"column":4,"endLine":8,"endColumn":33,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_addSprite__P2161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_addSprite__P2161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_placeOnRandomTile__P2349(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.loc___13610 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2373]) return breakpoint(s, 8, 2373, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 986; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2374]) return breakpoint(s, 10, 2374, r0);
  case 10:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2375]) return breakpoint(s, 11, 2375, r0);
  case 11:
    s.tmp_6 = tiles_getRandomTileByType__P2351_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 987; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
    s.loc___13610 = (r0);
    s.lastBrkId = 2376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2376]) return breakpoint(s, 13, 2376, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(s.loc___13610);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2377]) return breakpoint(s, 14, 2377, r0);
  case 14:
    s.tmp_0 = tiles_Location_place__P2296_mk(s);
    s.tmp_0.arg0 = s.loc___13610;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 988; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_placeOnRandomTile__P2349.info = {"start":18837,"length":232,"line":581,"column":4,"endLine":586,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"placeOnRandomTile","argumentNames":["sprite","tile"]}

function tiles_placeOnRandomTile__P2349_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_placeOnRandomTile__P2349, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  loc___13610: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_getRandomTileByType__P2351(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___13681 = undefined;
    s.index___13691 = undefined;
    s.sample___13697 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2378]) return breakpoint(s, 6, 2378, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 989; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___13681 = (r0);
    s.lastBrkId = 2379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2379]) return breakpoint(s, 8, 2379, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___13681.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2380]) return breakpoint(s, 9, 2380, r0);
  case 9:
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2381]) return breakpoint(s, 10, 2381, r0);
  case 10:
    s.tmp_5 = tiles_TileMap_getImageType__P2332_mk(s);
    r0 = s.scene___13681.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg0;
    s.callLocIdx = 990; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
    s.index___13691 = (r0);
    s.lastBrkId = 2382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2382]) return breakpoint(s, 12, 2382, r0);
  case 12:
    s.tmp_0 = tiles_TileMap_sampleTilesByType__P2335_mk(s);
    r0 = s.scene___13681.fields["tileMap"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___13691;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 991; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.sample___13697 = (r0);
    s.lastBrkId = 2383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2383]) return breakpoint(s, 14, 2383, r0);
  case 14:
    r0 = pxsim_Array__getAt(s.sample___13697, 0);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_getRandomTileByType__P2351.info = {"start":19819,"length":324,"line":608,"column":4,"endLine":615,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getRandomTileByType","argumentNames":["tile"]}

function tiles_getRandomTileByType__P2351_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_getRandomTileByType__P2351, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___13681: undefined,
  index___13691: undefined,
  sample___13697: undefined,
  arg0: undefined,
} }





function tiles_TileMap_sampleTilesByType__P2335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.count___13717 = undefined;
    s.reservoir___13718 = undefined;
    s.col___13720 = undefined;
    s.row___13727 = undefined;
    s.currTile___13734 = undefined;
    s.potentialIndex___13753 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2284]) return breakpoint(s, 18, 2284, r0);
  case 18:
    s.tmp_1 = tiles_TileMap_isInvalidIndex__P4001_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 929; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = tiles_TileMap_enabled__P2327_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 930; s.pc = 20; return s.tmp_4;
  case 20:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_5;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2285]) return breakpoint(s, 21, 2285, r0);
  case 21:
    r0 = pxsim_Array__mk();
    { step = 17; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2286]) return breakpoint(s, 22, 2286, r0);
  case 22:
    s.count___13717 = (0);
    s.lastBrkId = 2287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2287]) return breakpoint(s, 23, 2287, r0);
  case 23:
    r0 = pxsim_Array__mk();
    s.reservoir___13718 = (r0);
    s.lastBrkId = 2288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2288]) return breakpoint(s, 24, 2288, r0);
  case 24:
    s.col___13720 = (0);
    s.lastBrkId = 2289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2289]) return breakpoint(s, 25, 2289, r0);
  case 25:
  case 7:
    s.lastBrkId = 2290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2290]) return breakpoint(s, 26, 2290, r0);
  case 26:
    s.tmp_1 = r0 = s.col___13720;
    s.tmp_3 = tiles_TileMapData_width__P2306_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 931; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 2291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2291]) return breakpoint(s, 28, 2291, r0);
  case 28:
    s.row___13727 = (0);
    s.lastBrkId = 2292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2292]) return breakpoint(s, 29, 2292, r0);
  case 29:
  case 8:
    s.lastBrkId = 2293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2293]) return breakpoint(s, 30, 2293, r0);
  case 30:
    s.tmp_1 = r0 = s.row___13727;
    s.tmp_3 = tiles_TileMapData_height__P2307_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 932; s.pc = 31; return s.tmp_3;
  case 31:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 2294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2294]) return breakpoint(s, 32, 2294, r0);
  case 32:
    s.tmp_4 = tiles_TileMapData_getTile__P2310_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.col___13720;
    s.tmp_4.arg2 = s.row___13727;
    s.callLocIdx = 933; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.currTile___13734 = (r0);
    s.lastBrkId = 2295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2295]) return breakpoint(s, 34, 2295, r0);
  case 34:
    r0 = (s.currTile___13734 === s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2296]) return breakpoint(s, 35, 2296, r0);
  case 35:
    r0 = (s.count___13717 < s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2297]) return breakpoint(s, 36, 2297, r0);
  case 36:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C2289_VT);
    s.tmp_2 = r0;
    s.tmp_3 = tiles_Location_constructor__P2292_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = s.col___13720;
    s.tmp_3.arg2 = s.row___13727;
    s.tmp_3.arg3 = s.arg0;
    s.callLocIdx = 934; s.pc = 37; return s.tmp_3;
  case 37:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.reservoir___13718, s.tmp_2);
    { step = 12; continue; }
  case 9:
    s.lastBrkId = 2298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2298]) return breakpoint(s, 38, 2298, r0);
  case 38:
    r0 = pxsim.Math_.randomRange(0, s.count___13717);
    s.potentialIndex___13753 = (r0);
    s.lastBrkId = 2299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2299]) return breakpoint(s, 39, 2299, r0);
  case 39:
    r0 = (s.potentialIndex___13753 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2300]) return breakpoint(s, 40, 2300, r0);
  case 40:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C2289_VT);
    s.tmp_1 = r0;
    s.tmp_2 = tiles_Location_constructor__P2292_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = s.col___13720;
    s.tmp_2.arg2 = s.row___13727;
    s.tmp_2.arg3 = s.arg0;
    s.callLocIdx = 935; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    r0 = pxsim_Array_.setAt(s.reservoir___13718, s.potentialIndex___13753, s.tmp_1);
  case 10:
  case 11:
  case 12:
    s.lastBrkId = 2301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2301]) return breakpoint(s, 42, 2301, r0);
  case 42:
    r0 = (s.count___13717 + 1);
    s.count___13717 = (r0);
  case 13:
  case 14:
    s.lastBrkId = 2302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2302]) return breakpoint(s, 43, 2302, r0);
  case 43:
    r0 = (s.row___13727 + 1);
    s.row___13727 = (r0);
    { step = 8; continue; }
  case 15:
    s.lastBrkId = 2303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2303]) return breakpoint(s, 44, 2303, r0);
  case 44:
    r0 = (s.col___13720 + 1);
    s.col___13720 = (r0);
    { step = 7; continue; }
  case 16:
    s.lastBrkId = 2304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2304]) return breakpoint(s, 45, 2304, r0);
  case 45:
    r0 = s.reservoir___13718;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_sampleTilesByType__P2335.info = {"start":8960,"length":1101,"line":317,"column":8,"endLine":341,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"sampleTilesByType","argumentNames":["this","index","maxCount"]}

function tiles_TileMap_sampleTilesByType__P2335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_sampleTilesByType__P2335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  count___13717: undefined,
  reservoir___13718: undefined,
  col___13720: undefined,
  row___13727: undefined,
  currTile___13734: undefined,
  potentialIndex___13753: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_isInvalidIndex__P4001(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2305]) return breakpoint(s, 3, 2305, r0);
  case 3:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 > 255);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isInvalidIndex__P4001.info = {"start":10071,"length":106,"line":343,"column":8,"endLine":345,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isInvalidIndex","argumentNames":["this","index"]}

function tiles_TileMap_isInvalidIndex__P4001_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isInvalidIndex__P4001, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_getTile__P2310(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2238]) return breakpoint(s, 4, 2238, r0);
  case 4:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2316_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 905; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2239]) return breakpoint(s, 6, 2239, r0);
  case 6:
    r0 = 0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2240]) return breakpoint(s, 7, 2240, r0);
  case 7:
    r0 = s.arg0.fields["data"];
    s.tmp_2 = r0;
    r0 = (s.arg1 | 0);
    s.tmp_5 = r0;
    r0 = (4 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.arg2 | 0);
    s.tmp_7 = r0;
    s.tmp_9 = tiles_TileMapData_width__P2306_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 906; s.pc = 8; return s.tmp_9;
  case 8:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.getUint8(s.tmp_2, s.tmp_3);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTile__P2310.info = {"start":3997,"length":200,"line":152,"column":8,"endLine":156,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMapData_getTile__P2310_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTile__P2310, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isOutsideMap__P2316(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2254]) return breakpoint(s, 7, 2254, r0);
  case 7:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = tiles_TileMapData_width__P2306_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 908; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 < 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = r0 = s.arg2;
    s.tmp_8 = tiles_TileMapData_height__P2307_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 909; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 >= s.tmp_7);
  case 6:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isOutsideMap__P2316.info = {"start":5580,"length":132,"line":199,"column":8,"endLine":201,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOutsideMap","argumentNames":["this","col","row"]}

function tiles_TileMapData_isOutsideMap__P2316_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isOutsideMap__P2316, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_constructor__P2292(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2216]) return breakpoint(s, 1, 2216, r0);
  case 1:
    r0 = (s.arg0).fields["_col"] = (s.arg1);
    s.lastBrkId = 2217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2217]) return breakpoint(s, 2, 2217, r0);
  case 2:
    r0 = (s.arg0).fields["_row"] = (s.arg2);
    s.lastBrkId = 2218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2218]) return breakpoint(s, 3, 2218, r0);
  case 3:
    r0 = (s.arg0).fields["tileMap"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_Location_constructor__P2292.info = {"start":528,"length":153,"line":27,"column":8,"endLine":31,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","col","row","map"]}

function tiles_Location_constructor__P2292_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_constructor__P2292, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function tiles_TileMap_getImageType__P2332(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tileset___13837 = undefined;
    s.i___13842 = undefined;
    s.newIndex___13856 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2272]) return breakpoint(s, 8, 2272, r0);
  case 8:
    s.tmp_0 = tiles_TileMapData_getTileset__P2312_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 927; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tileset___13837 = (r0);
    s.lastBrkId = 2273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2273]) return breakpoint(s, 10, 2273, r0);
  case 10:
    s.i___13842 = (0);
    s.lastBrkId = 2274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2274]) return breakpoint(s, 11, 2274, r0);
  case 11:
  case 1:
    s.lastBrkId = 2275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2275]) return breakpoint(s, 12, 2275, r0);
  case 12:
    s.tmp_1 = r0 = s.i___13842;
    r0 = pxsim_Array__length(s.tileset___13837);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2276]) return breakpoint(s, 13, 2276, r0);
  case 13:
    r0 = pxsim_Array__getAt(s.tileset___13837, s.i___13842);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.equals(s.tmp_4, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2277]) return breakpoint(s, 14, 2277, r0);
  case 14:
    r0 = s.i___13842;
    { step = 7; continue; }
  case 2:
  case 3:
    s.lastBrkId = 2278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2278]) return breakpoint(s, 15, 2278, r0);
  case 15:
    r0 = (s.i___13842 + 1);
    s.i___13842 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 2279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2279]) return breakpoint(s, 16, 2279, r0);
  case 16:
    r0 = pxsim_Array__length(s.tileset___13837);
    s.newIndex___13856 = (r0);
    s.lastBrkId = 2280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2280]) return breakpoint(s, 17, 2280, r0);
  case 17:
    s.tmp_3 = tiles_TileMap_isInvalidIndex__P4001_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.newIndex___13856;
    s.callLocIdx = 928; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2281]) return breakpoint(s, 19, 2281, r0);
  case 19:
    r0 = pxsim_Array__push(s.tileset___13837, s.arg1);
    s.lastBrkId = 2282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2282]) return breakpoint(s, 20, 2282, r0);
  case 20:
    r0 = s.newIndex___13856;
    { step = 7; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2283]) return breakpoint(s, 21, 2283, r0);
  case 21:
    r0 = -1;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getImageType__P2332.info = {"start":7714,"length":482,"line":282,"column":8,"endLine":295,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getImageType","argumentNames":["this","im"]}

function tiles_TileMap_getImageType__P2332_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getImageType__P2332, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tileset___13837: undefined,
  i___13842: undefined,
  newIndex___13856: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_getTileset__P2312(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2241]) return breakpoint(s, 1, 2241, r0);
  case 1:
    r0 = s.arg0.fields["tileset"];
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileset__P2312.info = {"start":4532,"length":57,"line":168,"column":8,"endLine":170,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileset","argumentNames":["this"]}

function tiles_TileMapData_getTileset__P2312_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileset__P2312, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_place__P2296(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2224]) return breakpoint(s, 4, 2224, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2225]) return breakpoint(s, 5, 2225, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2226]) return breakpoint(s, 6, 2226, r0);
  case 6:
    s.tmp_2 = Sprite_setPosition__P2072_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_3 = tiles_Location_x__P2293_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 901; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.tmp_4 = tiles_Location_y__P2294_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 902; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 903; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_Location_place__P2296.info = {"start":1189,"length":126,"line":51,"column":8,"endLine":54,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"place","argumentNames":["this","mySprite"]}

function tiles_Location_place__P2296_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_place__P2296, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_Location_y__P2294(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___13627 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2221]) return breakpoint(s, 1, 2221, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P2319_mk(s);
    r0 = s.arg0.fields["tileMap"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 899; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___13627 = (r0);
    s.lastBrkId = 2222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2222]) return breakpoint(s, 3, 2222, r0);
  case 3:
    r0 = s.arg0.fields["_row"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___13627);
    s.tmp_0 = r0;
    r0 = (s.scale___13627 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_y__P2294.info = {"start":836,"length":135,"line":38,"column":8,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"y","argumentNames":["this"]}
tiles_Location_y__P2294.isGetter = true;

function tiles_Location_y__P2294_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_y__P2294, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___13627: undefined,
  arg0: undefined,
} }





function tiles_Location_x__P2293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___13646 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2219]) return breakpoint(s, 1, 2219, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P2319_mk(s);
    r0 = s.arg0.fields["tileMap"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 898; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___13646 = (r0);
    s.lastBrkId = 2220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2220]) return breakpoint(s, 3, 2220, r0);
  case 3:
    r0 = s.arg0.fields["_col"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___13646);
    s.tmp_0 = r0;
    r0 = (s.scale___13646 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_x__P2293.info = {"start":691,"length":135,"line":33,"column":8,"endLine":36,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"x","argumentNames":["this"]}
tiles_Location_x__P2293.isGetter = true;

function tiles_Location_x__P2293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_x__P2293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___13646: undefined,
  arg0: undefined,
} }





function Sprite_setPosition__P2072(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___13666 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1320]) return breakpoint(s, 1, 1320, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 359; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___13666 = (r0);
    s.lastBrkId = 1321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1321]) return breakpoint(s, 3, 1321, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2159_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___13666;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_1 = Fx8__P144_mk(s);
    s.tmp_2 = r0 = s.arg1;
    s.tmp_4 = Sprite_x__P2025_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 360; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 361; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_5 = Fx8__P144_mk(s);
    s.tmp_6 = r0 = s.arg2;
    s.tmp_8 = Sprite_y__P2027_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 362; s.pc = 8; return s.tmp_8;
  case 8:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 - s.tmp_7);
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 363; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setPosition__P2072.info = {"start":11962,"length":220,"line":430,"column":4,"endLine":437,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setPosition","argumentNames":["this","x","y"]}

function Sprite_setPosition__P2072_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setPosition__P2072, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  physics___13666: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_onUpdateInterval__P2544(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.timer___13883 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2714]) return breakpoint(s, 6, 2714, r0);
  case 6:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1132; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2715]) return breakpoint(s, 8, 2715, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2716]) return breakpoint(s, 9, 2716, r0);
  case 9:
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = pxsim_pxtrt.mklocRef();
    s.timer___13883 = (r0);
    s.lastBrkId = 2717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2717]) return breakpoint(s, 10, 2717, r0);
  case 10:
    r0 = pxsim_pxtrt_stlocRef(s.timer___13883, 0);
    s.lastBrkId = 2718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2718]) return breakpoint(s, 11, 2718, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(3, inline__P13887);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.timer___13883);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    s.tmp_2 = game_eventContext__P2535_mk(s);
    s.callLocIdx = 1133; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 19;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1137; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval__P2544.info = {"start":7929,"length":417,"line":256,"column":4,"endLine":267,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onUpdateInterval","argumentNames":["period","a"]}

function game_onUpdateInterval__P2544_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval__P2544, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  timer___13883: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P13887(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.time___13888 = undefined;
    s.lastBrkId = 2719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2719]) return breakpoint(s, 3, 2719, r0);
  case 3:
    s.tmp_0 = scene_Scene_millis__P2443_mk(s);
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1134; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1135; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.time___13888 = (r0);
    s.lastBrkId = 2720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2720]) return breakpoint(s, 6, 2720, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.time___13888);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2721]) return breakpoint(s, 7, 2721, r0);
  case 7:
    s.tmp_2 = r0 = s.caps[0];
    r0 = (s.time___13888 + s.caps[1]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    s.lastBrkId = 2722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2722]) return breakpoint(s, 8, 2722, r0);
  case 8:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.caps[2];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1136; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P13887.info = {"start":8159,"length":179,"line":260,"column":81,"endLine":266,"endColumn":9,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":[]}

function inline__P13887_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P13887, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  time___13888: undefined,
} }





function info_setLife__P2210(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1947]) return breakpoint(s, 1, 1947, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_setLife__P2246_mk(s);
    s.tmp_0.arg0 = globals.player1___2257;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 823; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_setLife__P2210.info = {"start":8333,"length":78,"line":291,"column":4,"endLine":293,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"setLife","argumentNames":["value"]}

function info_setLife__P2210_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_setLife__P2210, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_setLife__P2246(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___13906 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2039]) return breakpoint(s, 1, 2039, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 851; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.state___13906 = (r0);
    s.lastBrkId = 2040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2040]) return breakpoint(s, 3, 2040, r0);
  case 3:
    s.tmp_0 = info_updateFlag__P3988_mk(s);
    s.tmp_0.arg0 = 4;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 852; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2041]) return breakpoint(s, 5, 2041, r0);
  case 5:
    s.tmp_0 = info_PlayerInfo_life__P2245_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 853; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2042]) return breakpoint(s, 7, 2042, r0);
  case 7:
    s.tmp_0 = r0 = s.state___13906;
    r0 = (s.arg1 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["life"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_setLife__P2246.info = {"start":19455,"length":222,"line":645,"column":8,"endLine":651,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"setLife","argumentNames":["this","value"]}

function info_PlayerInfo_setLife__P2246_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_setLife__P2246, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  state___13906: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_PlayerInfo_life__P2245(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___13917 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2031]) return breakpoint(s, 9, 2031, r0);
  case 9:
    s.tmp_0 = info_PlayerInfo_getState__P2239_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 850; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.state___13917 = (r0);
    s.lastBrkId = 2032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2032]) return breakpoint(s, 11, 2032, r0);
  case 11:
    r0 = s.arg0.fields["showLife"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2033]) return breakpoint(s, 12, 2033, r0);
  case 12:
    r0 = (s.arg0).fields["showLife"] = (true);
  case 1:
  case 2:
    s.lastBrkId = 2034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2034]) return breakpoint(s, 13, 2034, r0);
  case 13:
    r0 = s.arg0.fields["showPlayer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2035]) return breakpoint(s, 14, 2035, r0);
  case 14:
    r0 = (s.arg0).fields["showPlayer"] = (true);
  case 3:
  case 4:
    s.lastBrkId = 2036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2036]) return breakpoint(s, 15, 2036, r0);
  case 15:
    r0 = s.state___13917.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2037]) return breakpoint(s, 16, 2037, r0);
  case 16:
    r0 = (s.state___13917).fields["life"] = (3);
  case 5:
  case 6:
    s.lastBrkId = 2038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2038]) return breakpoint(s, 17, 2038, r0);
  case 17:
    r0 = s.state___13917.fields["life"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = 0;
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_life__P2245.info = {"start":18903,"length":334,"line":627,"column":8,"endLine":636,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"life","argumentNames":["this"]}

function info_PlayerInfo_life__P2245_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_life__P2245, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  state___13917: undefined,
  arg0: undefined,
} }





function tiles_setTilemap__P2341(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2368]) return breakpoint(s, 1, 2368, r0);
  case 1:
    s.tmp_0 = scene_setTileMapLevel__P2462_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 982; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_setTilemap__P2341.info = {"start":14603,"length":96,"line":468,"column":4,"endLine":470,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"setTilemap","argumentNames":["tilemap"]}

function tiles_setTilemap__P2341_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_setTilemap__P2341, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_setTileMapLevel__P2462(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___13997 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2531]) return breakpoint(s, 3, 2531, r0);
  case 3:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1051; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.scene___13997 = (r0);
    s.lastBrkId = 2532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2532]) return breakpoint(s, 5, 2532, r0);
  case 5:
    r0 = s.scene___13997.fields["tileMap"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2533]) return breakpoint(s, 6, 2533, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_TileMap__C2317_VT);
    s.tmp_3 = r0;
    s.tmp_4 = tiles_TileMap_constructor__P2318_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_4.arg1 = 4;
    s.callLocIdx = 1052; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    r0 = (s.scene___13997).fields["tileMap"] = (s.tmp_3);
  case 1:
  case 2:
    s.lastBrkId = 2534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2534]) return breakpoint(s, 8, 2534, r0);
  case 8:
    s.tmp_0 = tiles_TileMap_setData__P2328_mk(s);
    r0 = s.scene___13997.fields["tileMap"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1053; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 2535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2535]) return breakpoint(s, 10, 2535, r0);
  case 10:
    s.tmp_0 = tiles_TileMap_scale__P2320_mk(s);
    r0 = s.scene___13997.fields["tileMap"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = tiles_TileMapData_scale__P2308_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1054; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1055; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setTileMapLevel__P2462.info = {"start":2994,"length":260,"line":113,"column":4,"endLine":119,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setTileMapLevel","argumentNames":["map"]}

function scene_setTileMapLevel__P2462_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setTileMapLevel__P2462, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  scene___13997: undefined,
  arg0: undefined,
} }





function tiles_TileMap_setData__P2328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2269]) return breakpoint(s, 1, 2269, r0);
  case 1:
    r0 = (s.arg0).fields["_map"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_setData__P2328.info = {"start":7183,"length":66,"line":265,"column":8,"endLine":267,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"setData","argumentNames":["this","map"]}

function tiles_TileMap_setData__P2328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_setData__P2328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_scale__P2320(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2259]) return breakpoint(s, 3, 2259, r0);
  case 3:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 2260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2260]) return breakpoint(s, 4, 2260, r0);
  case 4:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2261]) return breakpoint(s, 5, 2261, r0);
  case 5:
    s.tmp_1 = tiles_TileMapData_scale__P2309_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 913; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2320.info = {"start":6190,"length":144,"line":224,"column":8,"endLine":229,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMap_scale__P2320_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2320, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_scale__P2309(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2236]) return breakpoint(s, 1, 2236, r0);
  case 1:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 2237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2237]) return breakpoint(s, 2, 2237, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cachedTileView"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2309.info = {"start":3885,"length":102,"line":147,"column":8,"endLine":150,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMapData_scale__P2309_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2309, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_constructor__P2318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2255]) return breakpoint(s, 1, 2255, r0);
  case 1:
    r0 = (s.arg0).fields["_layer"] = (1);
    s.lastBrkId = 2256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2256]) return breakpoint(s, 2, 2256, r0);
  case 2:
    s.tmp_0 = tiles_TileMap_scale__P2320_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 910; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 2257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2257]) return breakpoint(s, 4, 2257, r0);
  case 4:
    r0 = pxsim_pxtcore_mkAction(1, inline__P14043);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = scene_createRenderable__P2383_mk(s);
    s.tmp_1.arg0 = -1;
    s.tmp_1.arg1 = s.tmp_0;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 912; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_constructor__P2318.info = {"start":5865,"length":250,"line":210,"column":8,"endLine":218,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","scale"]}

function tiles_TileMap_constructor__P2318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_constructor__P2318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P14043(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = tiles_TileMap_draw__P4002_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 911; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P14043.info = {"start":6065,"length":25,"line":216,"column":16,"endLine":216,"endColumn":41,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["t","c"]}

function inline__P14043_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14043, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_draw__P4002(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bitmask___14054 = undefined;
    s.offsetX___14060 = undefined;
    s.offsetY___14065 = undefined;
    s.x0___14070 = undefined;
    s.xn___14077 = undefined;
    s.y0___14094 = undefined;
    s.yn___14101 = undefined;
    s.x___14118 = undefined;
    s.y___14124 = undefined;
    s.index___14130 = undefined;
    s.tile___14137 = undefined;
    s.x___14173 = undefined;
    s.xLine___14179 = undefined;
    s.y___14205 = undefined;
    s.yLine___14211 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2306]) return breakpoint(s, 24, 2306, r0);
  case 24:
    s.tmp_3 = tiles_TileMap_enabled__P2327_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 936; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2307]) return breakpoint(s, 26, 2307, r0);
  case 26:
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2308]) return breakpoint(s, 27, 2308, r0);
  case 27:
    s.tmp_6 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 937; s.pc = 28; return s.tmp_6;
  case 28:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (1 << s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.bitmask___14054 = (r0);
    s.lastBrkId = 2309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2309]) return breakpoint(s, 29, 2309, r0);
  case 29:
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___14054);
    s.offsetX___14060 = (r0);
    s.lastBrkId = 2310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2310]) return breakpoint(s, 30, 2310, r0);
  case 30:
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___14054);
    s.offsetY___14065 = (r0);
    s.lastBrkId = 2311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2311]) return breakpoint(s, 31, 2311, r0);
  case 31:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 938; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 939; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.x0___14070 = (r0);
    s.lastBrkId = 2312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2312]) return breakpoint(s, 34, 2312, r0);
  case 34:
    s.tmp_0 = Math_min__P126_mk(s);
    s.tmp_1 = tiles_TileMapData_width__P2306_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 940; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 941; s.pc = 37; return s.tmp_7;
  case 37:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 942; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.xn___14077 = (r0);
    s.lastBrkId = 2313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2313]) return breakpoint(s, 38, 2313, r0);
  case 38:
    s.tmp_0 = Math_max__P125_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 943; s.pc = 40; return s.tmp_3;
  case 40:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 944; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.y0___14094 = (r0);
    s.lastBrkId = 2314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2314]) return breakpoint(s, 41, 2314, r0);
  case 41:
    s.tmp_0 = Math_min__P126_mk(s);
    s.tmp_1 = tiles_TileMapData_height__P2307_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 945; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 946; s.pc = 44; return s.tmp_7;
  case 44:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 947; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.yn___14101 = (r0);
    s.lastBrkId = 2315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2315]) return breakpoint(s, 45, 2315, r0);
  case 45:
    s.x___14118 = (s.x0___14070);
    s.lastBrkId = 2316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2316]) return breakpoint(s, 46, 2316, r0);
  case 46:
  case 3:
    s.lastBrkId = 2317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2317]) return breakpoint(s, 47, 2317, r0);
  case 47:
    r0 = (s.x___14118 <= s.xn___14077);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2318]) return breakpoint(s, 48, 2318, r0);
  case 48:
    s.y___14124 = (s.y0___14094);
    s.lastBrkId = 2319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2319]) return breakpoint(s, 49, 2319, r0);
  case 49:
  case 4:
    s.lastBrkId = 2320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2320]) return breakpoint(s, 50, 2320, r0);
  case 50:
    r0 = (s.y___14124 <= s.yn___14101);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2321]) return breakpoint(s, 51, 2321, r0);
  case 51:
    s.tmp_1 = tiles_TileMapData_getTile__P2310_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.x___14118;
    s.tmp_1.arg2 = s.y___14124;
    s.callLocIdx = 948; s.pc = 52; return s.tmp_1;
  case 52:
    r0 = s.retval;
    s.index___14130 = (r0);
    s.lastBrkId = 2322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2322]) return breakpoint(s, 53, 2322, r0);
  case 53:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2313_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___14130;
    s.callLocIdx = 949; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.tile___14137 = (r0);
    s.lastBrkId = 2323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2323]) return breakpoint(s, 55, 2323, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.tile___14137);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2324]) return breakpoint(s, 56, 2324, r0);
  case 56:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_1 = r0 = s.tile___14137;
    r0 = (s.x___14118 - s.x0___14070);
    s.tmp_4 = r0;
    s.tmp_6 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 950; s.pc = 57; return s.tmp_6;
  case 57:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 << s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offsetX___14060);
    s.tmp_2 = r0;
    r0 = (s.y___14124 - s.y0___14094);
    s.tmp_9 = r0;
    s.tmp_11 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 951; s.pc = 58; return s.tmp_11;
  case 58:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 << s.tmp_10);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.offsetY___14065);
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_7);
  case 5:
  case 6:
    s.lastBrkId = 2325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2325]) return breakpoint(s, 59, 2325, r0);
  case 59:
    r0 = (s.y___14124 + 1);
    s.y___14124 = (r0);
    { step = 4; continue; }
  case 7:
    s.lastBrkId = 2326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2326]) return breakpoint(s, 60, 2326, r0);
  case 60:
    r0 = (s.x___14118 + 1);
    s.x___14118 = (r0);
    { step = 3; continue; }
  case 8:
    s.lastBrkId = 2327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2327]) return breakpoint(s, 61, 2327, r0);
  case 61:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2528);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 2328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2328]) return breakpoint(s, 62, 2328, r0);
  case 62:
    s.x___14173 = (s.x0___14070);
    s.lastBrkId = 2329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2329]) return breakpoint(s, 63, 2329, r0);
  case 63:
  case 9:
    s.lastBrkId = 2330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2330]) return breakpoint(s, 64, 2330, r0);
  case 64:
    r0 = (s.x___14173 <= s.xn___14077);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 2331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2331]) return breakpoint(s, 65, 2331, r0);
  case 65:
    r0 = (s.x___14173 - s.x0___14070);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 952; s.pc = 66; return s.tmp_4;
  case 66:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetX___14060);
    s.xLine___14179 = (r0);
    s.lastBrkId = 2332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2332]) return breakpoint(s, 67, 2332, r0);
  case 67:
    r0 = (s.xLine___14179 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.xLine___14179;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 2333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2333]) return breakpoint(s, 68, 2333, r0);
  case 68:
    s.tmp_4 = helpers_imageDrawLine__P1730_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = s.xLine___14179;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.xLine___14179;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_4.arg4 = r0;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 953; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
  case 12:
  case 13:
    s.lastBrkId = 2334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2334]) return breakpoint(s, 70, 2334, r0);
  case 70:
    r0 = (s.x___14173 + 1);
    s.x___14173 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 2335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2335]) return breakpoint(s, 71, 2335, r0);
  case 71:
    s.y___14205 = (s.y0___14094);
    s.lastBrkId = 2336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2336]) return breakpoint(s, 72, 2336, r0);
  case 72:
  case 15:
    s.lastBrkId = 2337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2337]) return breakpoint(s, 73, 2337, r0);
  case 73:
    r0 = (s.y___14205 <= s.yn___14101);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2338]) return breakpoint(s, 74, 2338, r0);
  case 74:
    r0 = (s.y___14205 - s.y0___14094);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 954; s.pc = 75; return s.tmp_4;
  case 75:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetY___14065);
    s.yLine___14211 = (r0);
    s.lastBrkId = 2339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2339]) return breakpoint(s, 76, 2339, r0);
  case 76:
    r0 = (s.yLine___14211 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    s.tmp_1 = r0 = s.yLine___14211;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 17:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 2340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2340]) return breakpoint(s, 77, 2340, r0);
  case 77:
    s.tmp_4 = helpers_imageDrawLine__P1730_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = 0;
    s.tmp_4.arg2 = s.yLine___14211;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_4.arg3 = r0;
    s.tmp_4.arg4 = s.yLine___14211;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 955; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
  case 18:
  case 19:
    s.lastBrkId = 2341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2341]) return breakpoint(s, 79, 2341, r0);
  case 79:
    r0 = (s.y___14205 + 1);
    s.y___14205 = (r0);
    { step = 15; continue; }
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_draw__P4002.info = {"start":10187,"length":2224,"line":347,"column":8,"endLine":402,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"draw","argumentNames":["this","target","camera"]}

function tiles_TileMap_draw__P4002_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_draw__P4002, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  bitmask___14054: undefined,
  offsetX___14060: undefined,
  offsetY___14065: undefined,
  x0___14070: undefined,
  xn___14077: undefined,
  y0___14094: undefined,
  yn___14101: undefined,
  x___14118: undefined,
  y___14124: undefined,
  index___14130: undefined,
  tile___14137: undefined,
  x___14173: undefined,
  xLine___14179: undefined,
  y___14205: undefined,
  yLine___14211: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_getTileImage__P2313(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.size___14255 = undefined;
    s.cachedImage___14259 = undefined;
    s.originalImage___14265 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2242]) return breakpoint(s, 9, 2242, r0);
  case 9:
    s.tmp_1 = tiles_TileMapData_scale__P2308_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 907; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.size___14255 = (r0);
    s.lastBrkId = 2243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2243]) return breakpoint(s, 11, 2243, r0);
  case 11:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.cachedImage___14259 = (r0);
    s.lastBrkId = 2244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2244]) return breakpoint(s, 12, 2244, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.cachedImage___14259);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2245]) return breakpoint(s, 13, 2245, r0);
  case 13:
    r0 = s.arg0.fields["tileset"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.arg1);
    s.originalImage___14265 = (r0);
    s.lastBrkId = 2246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2246]) return breakpoint(s, 14, 2246, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.originalImage___14265);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2247]) return breakpoint(s, 15, 2247, r0);
  case 15:
    r0 = pxsim_ImageMethods.width(s.originalImage___14265);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.size___14255);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_ImageMethods.height(s.originalImage___14265);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= s.size___14255);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2248]) return breakpoint(s, 16, 2248, r0);
  case 16:
    s.cachedImage___14259 = (s.originalImage___14265);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 2249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2249]) return breakpoint(s, 17, 2249, r0);
  case 17:
    r0 = pxsim.image.create(s.size___14255, s.size___14255);
    s.cachedImage___14259 = (r0);
    s.lastBrkId = 2250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2250]) return breakpoint(s, 18, 2250, r0);
  case 18:
    r0 = pxsim_ImageMethods.drawImage(s.cachedImage___14259, s.originalImage___14265, 0, 0);
  case 4:
    s.lastBrkId = 2251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2251]) return breakpoint(s, 19, 2251, r0);
  case 19:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.cachedImage___14259);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 2252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2252]) return breakpoint(s, 20, 2252, r0);
  case 20:
    r0 = s.cachedImage___14259;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileImage__P2313.info = {"start":4599,"length":717,"line":172,"column":8,"endLine":189,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMapData_getTileImage__P2313_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileImage__P2313, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  size___14255: undefined,
  cachedImage___14259: undefined,
  originalImage___14265: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawLine__P1730(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[824]) return breakpoint(s, 1, 824, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P3808_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 126; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P3808_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 127; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._drawLine(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawLine__P1730.info = {"start":3977,"length":159,"line":137,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawLine","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawLine__P1730_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawLine__P1730, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function tiles_TileMapData_scale__P2308(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2235]) return breakpoint(s, 1, 2235, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2308.info = {"start":3809,"length":66,"line":143,"column":8,"endLine":145,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMapData_scale__P2308.isGetter = true;

function tiles_TileMapData_scale__P2308_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2308, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_moveSprite__P1952(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1160]) return breakpoint(s, 1, 1160, r0);
  case 1:
    s.tmp_0 = controller_Controller_moveSprite__P1939_mk(s);
    s.tmp_1 = controller__player1__P1917_mk(s);
    s.callLocIdx = 246; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.callLocIdx = 247; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_moveSprite__P1952.info = {"start":18919,"length":133,"line":574,"column":4,"endLine":576,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"moveSprite","argumentNames":["sprite","vx","vy"]}

function controller_moveSprite__P1952_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_moveSprite__P1952, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Controller_moveSprite__P1939(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cp___14315 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1096]) return breakpoint(s, 16, 1096, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1097]) return breakpoint(s, 17, 1097, r0);
  case 17:
    { step = 15; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1098]) return breakpoint(s, 18, 1098, r0);
  case 18:
    s.tmp_5 = controller_Controller__controlledSprites__P1928_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 207; s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1099]) return breakpoint(s, 20, 1099, r0);
  case 20:
    s.tmp_6 = controller_Controller__controlledSprites__P1929_mk(s);
    s.tmp_6.arg0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_6.arg1 = r0;
    s.callLocIdx = 208; s.pc = 21; return s.tmp_6;
  case 21:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1100]) return breakpoint(s, 22, 1100, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, inline__P14318);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayFind__P109_mk(s);
    s.tmp_2 = controller_Controller__controlledSprites__P1928_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 209; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 210; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.cp___14315 = (r0);
    s.lastBrkId = 1101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1101]) return breakpoint(s, 25, 1101, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(s.cp___14315);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1102]) return breakpoint(s, 26, 1102, r0);
  case 26:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ControlledSprite__C1919_VT);
    s.tmp_2 = r0;
    s.tmp_3 = controller_ControlledSprite_constructor__P1921_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = s.arg1;
    s.tmp_3.arg2 = s.arg2;
    s.tmp_3.arg3 = s.arg3;
    s.callLocIdx = 211; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.cp___14315 = (s.tmp_2);
    s.lastBrkId = 1103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1103]) return breakpoint(s, 28, 1103, r0);
  case 28:
    s.tmp_1 = controller_Controller__controlledSprites__P1928_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 212; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.cp___14315);
  case 5:
  case 6:
    s.lastBrkId = 1104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1104]) return breakpoint(s, 30, 1104, r0);
  case 30:
    r0 = s.cp___14315.fields["vx"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = (s.arg2 == 0);
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1105]) return breakpoint(s, 31, 1105, r0);
  case 31:
    s.tmp_2 = Sprite_vx__P2030_mk(s);
    r0 = s.cp___14315.fields["s"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 213; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
  case 9:
  case 10:
    s.lastBrkId = 1106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1106]) return breakpoint(s, 33, 1106, r0);
  case 33:
    r0 = s.cp___14315.fields["vy"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = (s.arg3 == 0);
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1107]) return breakpoint(s, 34, 1107, r0);
  case 34:
    s.tmp_2 = Sprite_vy__P2032_mk(s);
    r0 = s.cp___14315.fields["s"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 214; s.pc = 35; return s.tmp_2;
  case 35:
    r0 = s.retval;
  case 13:
  case 14:
    s.lastBrkId = 1108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1108]) return breakpoint(s, 36, 1108, r0);
  case 36:
    r0 = (s.cp___14315).fields["vx"] = (s.arg2);
    s.lastBrkId = 1109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1109]) return breakpoint(s, 37, 1109, r0);
  case 37:
    r0 = (s.cp___14315).fields["vy"] = (s.arg3);
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_moveSprite__P1939.info = {"start":10866,"length":608,"line":355,"column":8,"endLine":371,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"moveSprite","argumentNames":["this","sprite","vx","vy"]}

function controller_Controller_moveSprite__P1939_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_moveSprite__P1939, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  cp___14315: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P14318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["s"];
    r0 = r0.fields["id"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["id"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P14318.info = {"start":11086,"length":26,"line":358,"column":50,"endLine":358,"endColumn":76,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["cp"]}

function inline__P14318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_ControlledSprite_constructor__P1921(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ControlledSprite__C1919_VT)) failedCast(r0);
    r0 = (s.arg0).fields["s"] = (s.arg1);
    r0 = (s.arg0).fields["vx"] = (s.arg2);
    r0 = (s.arg0).fields["vy"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ControlledSprite_constructor__P1921.info = {"start":7271,"length":117,"line":227,"column":8,"endLine":231,"endColumn":13,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","s","vx","vy"]}

function controller_ControlledSprite_constructor__P1921_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ControlledSprite_constructor__P1921, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_create__P1974(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14386 = undefined;
    s.sprite___14389 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1194]) return breakpoint(s, 1, 1194, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 267; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___14386 = (r0);
    s.lastBrkId = 1195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1195]) return breakpoint(s, 3, 1195, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(Sprite__C2016_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Sprite_constructor__P2053_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 268; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.sprite___14389 = (s.tmp_0);
    s.lastBrkId = 1196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1196]) return breakpoint(s, 5, 1196, r0);
  case 5:
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.sprite___14389;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 269; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 1197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1197]) return breakpoint(s, 7, 1197, r0);
  case 7:
    s.tmp_0 = PhysicsEngine__C2159_v0_2_mk(s);
    r0 = s.scene___14386.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___14389;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1198]) return breakpoint(s, 9, 1198, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, inline__P14404);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtcore_mkAction(1, inline__P14410);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.sprite___14389);
    s.tmp_2 = helpers_arrayForEach__P107_mk(s);
    s.tmp_3 = helpers_arrayFilter__P108_mk(s);
    r0 = s.scene___14386.fields["createdHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 270; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 272; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1199]) return breakpoint(s, 12, 1199, r0);
  case 12:
    r0 = s.sprite___14389;
    return leave(s, r0)
  default: oops()
} } }
sprites_create__P1974.info = {"start":890,"length":400,"line":35,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"create","argumentNames":["img","kind"]}

function sprites_create__P1974_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create__P1974, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___14386: undefined,
  sprite___14389: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P14404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
inline__P14404.info = {"start":1195,"length":19,"line":43,"column":20,"endLine":43,"endColumn":39,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function inline__P14404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P14410(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 271; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 271; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 271; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 271; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P14410.info = {"start":1237,"length":22,"line":44,"column":21,"endLine":44,"endColumn":43,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function inline__P14410_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14410, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_setBackgroundColor__P2457(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14417 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2525]) return breakpoint(s, 1, 2525, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1046; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___14417 = (r0);
    s.lastBrkId = 2526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2526]) return breakpoint(s, 3, 2526, r0);
  case 3:
    r0 = s.scene___14417.fields["background"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundColor__P2457.info = {"start":1207,"length":140,"line":53,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundColor","argumentNames":["color"]}

function scene_setBackgroundColor__P2457_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundColor__P2457, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___14417: undefined,
  arg0: undefined,
} }





function enemyChase__P60295(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_setKind__P2071_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.Enemy___2131;
    s.callLocIdx = 100; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setVelocity__P2073_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 101; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_follow__P2089_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.ducko___60308;
    s.tmp_0.arg2 = 20;
    s.tmp_0.arg3 = 400;
    s.callLocIdx = 102; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex60367);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex60369);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    s.tmp_3 = animation_runImageAnimation__P3504_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.tmp_0;
    s.tmp_3.arg2 = 100;
    s.tmp_3.arg3 = true;
    s.callLocIdx = 103; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
enemyChase__P60295.info = {"start":8711,"length":1553,"line":244,"column":0,"endLine":288,"endColumn":1,"fileName":"main.ts","functionName":"enemyChase","argumentNames":["baddie"]}

function enemyChase__P60295_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: enemyChase__P60295, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }

const _hex60367 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000f00000000000000f00f000000000000f0ff000000000000f0ffff0000000000f0ffff0f00000000f0ffff4f00000000ffffff0f00000000ffffff4f04000000ffffff0f00000000ffffff00000000f0ffff0f00000000ffffff00000000001fff0f0000000000ff0f000000000000ff00000000000000f00000000000")
const _hex60369 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000f00000000000000f00f000000000000f0ff000000000000f0ffff0000000000f0ffff0f00000000f0ffff4f04000000ffffff0f00000000ffffff4f00000000ffffff0f000000f0ffffff00000000ffffff0f000000001fffff0000000000ffff0f0000000000ff00000000000000f000000000000000000000000000")




function info_changeLifeBy__P2211(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1948]) return breakpoint(s, 1, 1948, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_changeLifeBy__P2247_mk(s);
    s.tmp_0.arg0 = globals.player1___2257;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 824; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_changeLifeBy__P2211.info = {"start":8659,"length":88,"line":303,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"changeLifeBy","argumentNames":["value"]}

function info_changeLifeBy__P2211_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_changeLifeBy__P2211, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_changeLifeBy__P2247(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2043]) return breakpoint(s, 1, 2043, r0);
  case 1:
    s.tmp_0 = info_PlayerInfo_setLife__P2246_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = info_PlayerInfo_life__P2245_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 854; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 855; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_changeLifeBy__P2247.info = {"start":19940,"length":92,"line":661,"column":8,"endLine":663,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"changeLifeBy","argumentNames":["this","value"]}

function info_PlayerInfo_changeLifeBy__P2247_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_changeLifeBy__P2247, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_onOverlap__P2106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sc___14448 = undefined;
    s.overlapHandlers___14451 = undefined;
    s.overlapMap___14454 = undefined;
    s.associate___14457 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1540]) return breakpoint(s, 8, 1540, r0);
  case 8:
    r0 = (s.arg0 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 == undefined);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_1;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1541]) return breakpoint(s, 9, 1541, r0);
  case 9:
    { step = 7; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1542]) return breakpoint(s, 10, 1542, r0);
  case 10:
    s.tmp_4 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 538; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.sc___14448 = (r0);
    s.lastBrkId = 1543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1543]) return breakpoint(s, 12, 1543, r0);
  case 12:
    r0 = s.sc___14448.fields["overlapHandlers"];
    s.overlapHandlers___14451 = (r0);
    s.lastBrkId = 1544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1544]) return breakpoint(s, 13, 1544, r0);
  case 13:
    r0 = s.sc___14448.fields["overlapMap"];
    s.overlapMap___14454 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, associate__P14457);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.overlapMap___14454);
    s.associate___14457 = (s.tmp_0);
    s.lastBrkId = 1548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1548]) return breakpoint(s, 14, 1548, r0);
  case 14:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.associate___14457;
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 539; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1549]) return breakpoint(s, 16, 1549, r0);
  case 16:
    s.tmp_0 = lambda_3_mk(s);
    s.tmp_0.argL = s.associate___14457;
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 540; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1550]) return breakpoint(s, 18, 1550, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(scene_OverlapHandler__C2392_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_OverlapHandler_constructor__P2393_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.callLocIdx = 541; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.overlapHandlers___14451, s.tmp_0);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_onOverlap__P2106.info = {"start":1605,"length":755,"line":50,"column":4,"endLine":74,"endColumn":5,"fileName":"pxt_modules/game/spriteevents.ts","functionName":"onOverlap","argumentNames":["kind","otherKind","handler"]}

function sprites_onOverlap__P2106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_onOverlap__P2106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sc___14448: undefined,
  overlapHandlers___14451: undefined,
  overlapMap___14454: undefined,
  associate___14457: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function associate__P14457(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1545]) return breakpoint(s, 3, 1545, r0);
  case 3:
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1546]) return breakpoint(s, 4, 1546, r0);
  case 4:
    s.tmp_3 = r0 = s.caps[0];
    s.tmp_4 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.tmp_4, s.tmp_5);
  case 1:
  case 2:
    s.lastBrkId = 1547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1547]) return breakpoint(s, 5, 1547, r0);
  case 5:
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
associate__P14457.info = {"start":1942,"length":172,"line":56,"column":8,"endLine":62,"endColumn":9,"fileName":"pxt_modules/game/spriteevents.ts","functionName":"associate","argumentNames":["a","b"]}

function associate__P14457_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: associate__P14457, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_OverlapHandler_constructor__P2393(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_OverlapHandler__C2392_VT)) failedCast(r0);
    r0 = (s.arg0).fields["kind"] = (s.arg1);
    r0 = (s.arg0).fields["otherKind"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_OverlapHandler_constructor__P2393.info = {"start":655,"length":171,"line":22,"column":8,"endLine":26,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["this","kind","otherKind","handler"]}

function scene_OverlapHandler_constructor__P2393_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_OverlapHandler_constructor__P2393, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P14564(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___14567 = undefined;
    s.src___14572 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_AshFactory__C2758_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_AshFactory_constructor__P2759_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = undefined;
    s.tmp_1.arg3 = 20;
    s.callLocIdx = 43; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.factory___14567 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C2678_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P2683_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___14567;
    s.callLocIdx = 44; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.src___14572 = (s.tmp_0);
    s.tmp_0 = particles_ParticleSource_setAcceleration__P2687_mk(s);
    s.tmp_0.arg0 = s.src___14572;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 500;
    s.callLocIdx = 45; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.src___14572;
    return leave(s, r0)
  default: oops()
} } }
inline__P14564.info = {"start":10791,"length":281,"line":274,"column":54,"endLine":279,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function inline__P14564_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14564, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  factory___14567: undefined,
  src___14572: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AshFactory_constructor__P2759(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.counts___14604 = undefined;
    s.i___14606 = undefined;
    s.result___14615 = undefined;
    s.x___14620 = undefined;
    s.y___14626 = undefined;
    s.c___14632 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AshFactory__C2758_VT)) failedCast(r0);
    s.lastBrkId = 3209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3209]) return breakpoint(s, 20, 3209, r0);
  case 20:
    s.tmp_1 = if_width_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "width");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["width"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["width"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1439; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = if_width_1_mk(s);
    s.tmp_2.arg0 = s.arg1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "width");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["width"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["width"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1440; s.pc = 22; return s.tmp_2; }
    }
  case 22:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = 8;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = if_height_1_mk(s);
    s.tmp_5.arg0 = s.arg1;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "height");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["height"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["height"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1441; s.pc = 23; return s.tmp_5; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.tmp_7 = if_height_1_mk(s);
    s.tmp_7.arg0 = s.arg1;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "height");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["height"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["height"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1442; s.pc = 24; return s.tmp_7; }
    }
  case 24:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    { step = 4; continue; }
  case 3:
    r0 = 8;
  case 4:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    s.tmp_9 = particles_AreaFactory_constructor__P2729_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.tmp_9.arg1 = s.tmp_3;
    s.tmp_9.arg2 = s.tmp_8;
    s.tmp_9.arg3 = 300;
    s.tmp_9.arg4 = 700;
    s.callLocIdx = 1443; s.pc = 25; return s.tmp_9;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3210]) return breakpoint(s, 26, 3210, r0);
  case 26:
    s.tmp_3 = if_image_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "image");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["image"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["image"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1444; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3211]) return breakpoint(s, 28, 3211, r0);
  case 28:
    r0 = pxsim_pxtcore_mkClassInstance(particles_ColorCount__C4448_VT);
    s.tmp_4 = r0;
    s.tmp_5 = particles_ColorCount_constructor__P4449_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.tmp_5.arg1 = 1;
    s.tmp_5.arg2 = 20;
    s.callLocIdx = 1445; s.pc = 29; return s.tmp_5;
  case 29:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
    r0 = (s.arg0).fields["colors"] = (s.tmp_6);
    s.lastBrkId = 3212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3212]) return breakpoint(s, 30, 3212, r0);
  case 30:
    r0 = undefined;
    { step = 19; continue; }
  case 5:
  case 6:
    s.lastBrkId = 3213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3213]) return breakpoint(s, 31, 3213, r0);
  case 31:
    r0 = pxsim_Array__mk();
    s.counts___14604 = (r0);
    s.lastBrkId = 3214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3214]) return breakpoint(s, 32, 3214, r0);
  case 32:
    s.i___14606 = (0);
    s.lastBrkId = 3215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3215]) return breakpoint(s, 33, 3215, r0);
  case 33:
  case 7:
    s.lastBrkId = 3216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3216]) return breakpoint(s, 34, 3216, r0);
  case 34:
    r0 = (s.i___14606 <= 15);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 3217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3217]) return breakpoint(s, 35, 3217, r0);
  case 35:
    r0 = pxsim_Array_.setAt(s.counts___14604, s.i___14606, 0);
    s.lastBrkId = 3218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3218]) return breakpoint(s, 36, 3218, r0);
  case 36:
    r0 = (s.i___14606 + 1);
    s.i___14606 = (r0);
    { step = 7; continue; }
  case 8:
    s.lastBrkId = 3219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3219]) return breakpoint(s, 37, 3219, r0);
  case 37:
    s.tmp_1 = if_image_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "image");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["image"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["image"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1446; s.pc = 38; return s.tmp_1; }
    }
  case 38:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.result___14615 = (r0);
    s.lastBrkId = 3220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3220]) return breakpoint(s, 39, 3220, r0);
  case 39:
    s.x___14620 = (0);
    s.lastBrkId = 3221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3221]) return breakpoint(s, 40, 3221, r0);
  case 40:
  case 9:
    s.lastBrkId = 3222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3222]) return breakpoint(s, 41, 3222, r0);
  case 41:
    s.tmp_1 = r0 = s.x___14620;
    r0 = pxsim_ImageMethods.width(s.result___14615);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 3223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3223]) return breakpoint(s, 42, 3223, r0);
  case 42:
    s.y___14626 = (0);
    s.lastBrkId = 3224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3224]) return breakpoint(s, 43, 3224, r0);
  case 43:
  case 10:
    s.lastBrkId = 3225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3225]) return breakpoint(s, 44, 3225, r0);
  case 44:
    s.tmp_1 = r0 = s.y___14626;
    r0 = pxsim_ImageMethods.height(s.result___14615);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 3226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3226]) return breakpoint(s, 45, 3226, r0);
  case 45:
    r0 = pxsim_ImageMethods.getPixel(s.result___14615, s.x___14620, s.y___14626);
    s.c___14632 = (r0);
    s.lastBrkId = 3227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3227]) return breakpoint(s, 46, 3227, r0);
  case 46:
    s.tmp_0 = r0 = s.c___14632;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    s.tmp_1 = Math_FastRandom_percentChance__P2593_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg3;
    s.callLocIdx = 1447; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
  case 12:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3228]) return breakpoint(s, 48, 3228, r0);
  case 48:
    s.tmp_3 = r0 = s.counts___14604;
    s.tmp_4 = r0 = s.c___14632;
    r0 = pxsim_Array__getAt(s.tmp_3, s.c___14632);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_3, s.tmp_4, s.tmp_5);
    s.lastBrkId = 3229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3229]) return breakpoint(s, 49, 3229, r0);
  case 49:
    r0 = pxsim_ImageMethods.setPixel(s.result___14615, s.x___14620, s.y___14626, 0);
  case 13:
  case 14:
    s.lastBrkId = 3230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3230]) return breakpoint(s, 50, 3230, r0);
  case 50:
    r0 = (s.y___14626 + 1);
    s.y___14626 = (r0);
    { step = 10; continue; }
  case 15:
    s.lastBrkId = 3231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3231]) return breakpoint(s, 51, 3231, r0);
  case 51:
    r0 = (s.x___14620 + 1);
    s.x___14620 = (r0);
    { step = 9; continue; }
  case 16:
    s.lastBrkId = 3232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3232]) return breakpoint(s, 52, 3232, r0);
  case 52:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 3233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3233]) return breakpoint(s, 53, 3233, r0);
  case 53:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.result___14615;
    s.callLocIdx = 1448; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
  case 17:
  case 18:
    s.lastBrkId = 3234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3234]) return breakpoint(s, 55, 3234, r0);
  case 55:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_arrayFilter__P108_mk(s);
    s.tmp_3 = helpers_arrayMap__P104_mk(s);
    s.tmp_3.arg0 = s.counts___14604;
    s.tmp_3.arg1 = inline__P14666;
    s.callLocIdx = 1450; s.pc = 57; return s.tmp_3;
  case 57:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = inline__P14673;
    s.callLocIdx = 1451; s.pc = 56; return s.tmp_2;
  case 56:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["colors"] = (s.tmp_1);
    r0 = undefined;
  case 19:
    return leave(s, r0)
  default: oops()
} } }
particles_AshFactory_constructor__P2759.info = {"start":11775,"length":1466,"line":385,"column":8,"endLine":423,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","anchor","updateImage","percentKept"]}

function particles_AshFactory_constructor__P2759_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AshFactory_constructor__P2759, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  counts___14604: undefined,
  i___14606: undefined,
  result___14615: undefined,
  x___14620: undefined,
  y___14626: undefined,
  c___14632: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P14666(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_ColorCount__C4448_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ColorCount_constructor__P4449_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg0;
    s.callLocIdx = 1449; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
inline__P14666.info = {"start":13124,"length":62,"line":421,"column":21,"endLine":421,"endColumn":83,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["value","index"]}

function inline__P14666_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14666, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P14673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["count"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 != 0);
    return leave(s, r0)
  default: oops()
} } }
inline__P14673.info = {"start":13212,"length":17,"line":422,"column":24,"endLine":422,"endColumn":41,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["v"]}

function inline__P14673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ColorCount_constructor__P4449(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ColorCount__C4448_VT)) failedCast(r0);
    r0 = (s.arg0).fields["color"] = (s.arg1);
    r0 = (s.arg0).fields["count"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ColorCount_constructor__P4449.info = {"start":11603,"length":59,"line":379,"column":8,"endLine":379,"endColumn":67,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","color","count"]}

function particles_ColorCount_constructor__P4449_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ColorCount_constructor__P4449, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_FastRandom_percentChance__P2593(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2586_VT)) failedCast(r0);
    s.lastBrkId = 2745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2745]) return breakpoint(s, 1, 2745, r0);
  case 1:
    s.tmp_1 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = 100;
    s.callLocIdx = 1144; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 < s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_percentChance__P2593.info = {"start":2925,"length":106,"line":88,"column":8,"endLine":90,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"percentChance","argumentNames":["this","percent"]}

function Math_FastRandom_percentChance__P2593_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_percentChance__P2593, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayMap__P104(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___14681 = undefined;
    s.len___14683 = undefined;
    s.i___14686 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 94;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[94]) return breakpoint(s, 3, 94, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.res___14681 = (r0);
    s.lastBrkId = 95;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[95]) return breakpoint(s, 4, 95, r0);
  case 4:
    r0 = pxsim_Array__length(s.arg0);
    s.len___14683 = (r0);
    s.lastBrkId = 96;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[96]) return breakpoint(s, 5, 96, r0);
  case 5:
    s.i___14686 = (0);
    s.lastBrkId = 97;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[97]) return breakpoint(s, 6, 97, r0);
  case 6:
  case 1:
    s.lastBrkId = 98;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[98]) return breakpoint(s, 7, 98, r0);
  case 7:
    r0 = (s.i___14686 < s.len___14683);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 99;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[99]) return breakpoint(s, 8, 99, r0);
  case 8:
    s.tmp_1 = r0 = s.res___14681;
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___14686);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.i___14686;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 4; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[100]) return breakpoint(s, 10, 100, r0);
  case 10:
    r0 = (s.i___14686 + 1);
    s.i___14686 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[101]) return breakpoint(s, 11, 101, r0);
  case 11:
    r0 = s.res___14681;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayMap__P104.info = {"start":6528,"length":299,"line":229,"column":4,"endLine":236,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayMap","argumentNames":["arr","callbackfn"]}

function helpers_arrayMap__P104_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayMap__P104, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  res___14681: undefined,
  len___14683: undefined,
  i___14686: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function StatusBarSprite_spriteAttachedTo__P3586(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StatusBarSprite__C3579_VT)) failedCast(r0);
    s.lastBrkId = 3460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3460]) return breakpoint(s, 1, 3460, r0);
  case 1:
    s.tmp_0 = StatusBarSprite_applyChange__P5765_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = inline__P14712;
    s.callLocIdx = 1572; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
StatusBarSprite_spriteAttachedTo__P3586.info = {"start":4062,"length":84,"line":127,"column":4,"endLine":129,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"spriteAttachedTo","argumentNames":["this"]}

function StatusBarSprite_spriteAttachedTo__P3586_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarSprite_spriteAttachedTo__P3586, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P14712(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteToFollow"];
    return leave(s, r0)
  default: oops()
} } }
inline__P14712.info = {"start":4115,"length":23,"line":128,"column":32,"endLine":128,"endColumn":55,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["sb"]}

function inline__P14712_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14712, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Sprite_destroy__P2087(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1402]) return breakpoint(s, 6, 1402, r0);
  case 6:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1403]) return breakpoint(s, 7, 1403, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1404]) return breakpoint(s, 8, 1404, r0);
  case 8:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1405]) return breakpoint(s, 9, 1405, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1406]) return breakpoint(s, 10, 1406, r0);
  case 10:
    s.tmp_0 = effects_ParticleEffect_destroy__P2792_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.callLocIdx = 449; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1407]) return breakpoint(s, 12, 1407, r0);
  case 12:
    s.tmp_0 = Sprite__destroyCore__P2088_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 450; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_destroy__P2087.info = {"start":28412,"length":293,"line":858,"column":4,"endLine":867,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"destroy","argumentNames":["this","effect","duration"]}

function Sprite_destroy__P2087_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_destroy__P2087, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ParticleEffect_destroy__P2792(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C2789_VT)) failedCast(r0);
    s.lastBrkId = 3258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3258]) return breakpoint(s, 3, 3258, r0);
  case 3:
    s.tmp_0 = Sprite_setFlag__P2079_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1466; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3259]) return breakpoint(s, 5, 3259, r0);
  case 5:
    s.tmp_0 = effects_ParticleEffect_start__P2791_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = null;
    r0 = s.arg1.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 512);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1467; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3260]) return breakpoint(s, 7, 3260, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = s.arg2;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["defaultLifespan"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 2);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg1).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 3261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3261]) return breakpoint(s, 8, 3261, r0);
  case 8:
    s.tmp_0 = effects_ImageEffect_applyTo__P2818_mk(s);
    s.tmp_0.arg0 = globals.dissolve___2821;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1468; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_destroy__P2792.info = {"start":1736,"length":368,"line":41,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"destroy","argumentNames":["this","anchor","duration","particlesPerSecond"]}

function effects_ParticleEffect_destroy__P2792_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_destroy__P2792, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P14839(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14842 = undefined;
    s.x___14853 = undefined;
    s.y___14859 = undefined;
    s.w___14865 = undefined;
    s.h___14869 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.i___14842 = (r0);
  case 1:
    r0 = (s.i___14842 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 47; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___14853 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 48; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___14859 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 49; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.w___14865 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 50; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.h___14869 = (r0);
    s.tmp_0 = helpers_imageDrawRect__P1731_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.x___14853;
    s.tmp_0.arg2 = s.y___14859;
    s.tmp_0.arg3 = s.w___14865;
    s.tmp_0.arg4 = s.h___14869;
    s.tmp_0.arg5 = 0;
    s.callLocIdx = 51; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.i___14842 - 1);
    s.i___14842 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P14839.info = {"start":2199,"length":360,"line":60,"column":49,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function inline__P14839_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14839, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  i___14842: undefined,
  x___14853: undefined,
  y___14859: undefined,
  w___14865: undefined,
  h___14869: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawRect__P1731(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[825]) return breakpoint(s, 6, 825, r0);
  case 6:
    r0 = (s.arg3 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg4 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[826]) return breakpoint(s, 7, 826, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[827]) return breakpoint(s, 8, 827, r0);
  case 8:
    r0 = (s.arg3 - 1);
    s.arg3 = (r0);
    s.lastBrkId = 828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[828]) return breakpoint(s, 9, 828, r0);
  case 9:
    r0 = (s.arg4 - 1);
    s.arg4 = (r0);
    s.lastBrkId = 829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[829]) return breakpoint(s, 10, 829, r0);
  case 10:
    s.tmp_0 = helpers_imageDrawLine__P1730_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 128; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[830]) return breakpoint(s, 12, 830, r0);
  case 12:
    s.tmp_0 = helpers_imageDrawLine__P1730_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 129; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[831]) return breakpoint(s, 14, 831, r0);
  case 14:
    s.tmp_0 = helpers_imageDrawLine__P1730_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 130; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[832]) return breakpoint(s, 16, 832, r0);
  case 16:
    s.tmp_0 = helpers_imageDrawLine__P1730_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 131; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawRect__P1731.info = {"start":4141,"length":370,"line":140,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawRect__P1731_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawRect__P1731, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function effects_ImageEffect_applyTo__P2818(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.clonedImage___14949 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2816_VT)) failedCast(r0);
    s.lastBrkId = 3299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3299]) return breakpoint(s, 6, 3299, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = Sprite_image__P2055_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 1492; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3300]) return breakpoint(s, 8, 3300, r0);
  case 8:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3301]) return breakpoint(s, 9, 3301, r0);
  case 9:
    s.tmp_7 = Sprite_image__P2055_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 1493; s.pc = 10; return s.tmp_7;
  case 10:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_6);
    s.clonedImage___14949 = (r0);
    s.lastBrkId = 3302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3302]) return breakpoint(s, 11, 3302, r0);
  case 11:
    s.tmp_0 = effects_ImageEffect_change__P2819_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.clonedImage___14949;
    s.callLocIdx = 1494; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 3303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3303]) return breakpoint(s, 13, 3303, r0);
  case 13:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.clonedImage___14949;
    s.callLocIdx = 1495; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_applyTo__P2818.info = {"start":823,"length":218,"line":21,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"applyTo","argumentNames":["this","sprite"]}

function effects_ImageEffect_applyTo__P2818_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_applyTo__P2818, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  clonedImage___14949: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ImageEffect_change__P2819(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2816_VT)) failedCast(r0);
    s.lastBrkId = 3304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3304]) return breakpoint(s, 1, 3304, r0);
  case 1:
    s.tmp_0 = if_effect_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    r0 = s.arg0.fields["fastRandom"];
    s.tmp_0.arg2 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "effect"), 3);
      s.callLocIdx = 1496; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["effect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["effect"], 3); s.callLocIdx = 1496; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1496; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 1496; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_change__P2819.info = {"start":1151,"length":81,"line":32,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"change","argumentNames":["this","input"]}

function effects_ImageEffect_change__P2819_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_change__P2819, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite__destroyCore__P2088(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14740 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1408]) return breakpoint(s, 9, 1408, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    s.lastBrkId = 1409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1409]) return breakpoint(s, 10, 1409, r0);
  case 10:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 451; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.scene___14740 = (r0);
    s.lastBrkId = 1410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1410]) return breakpoint(s, 12, 1410, r0);
  case 12:
    r0 = s.arg0.fields["sayBubbleSprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1411]) return breakpoint(s, 13, 1411, r0);
  case 13:
    s.tmp_1 = Sprite_destroy__P2087_mk(s);
    r0 = s.arg0.fields["sayBubbleSprite"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 452; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1412]) return breakpoint(s, 15, 1412, r0);
  case 15:
    r0 = s.scene___14740.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
    s.lastBrkId = 1413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1413]) return breakpoint(s, 16, 1413, r0);
  case 16:
    s.tmp_2 = Sprite_kind__P2070_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 453; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.scene___14740.fields["spritesByKind"];
    s.tmp_3 = r0;
    s.tmp_5 = Sprite_kind__P2070_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 454; s.pc = 18; return s.tmp_5;
  case 18:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_3, s.tmp_4);
  case 4:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1414]) return breakpoint(s, 19, 1414, r0);
  case 19:
    s.tmp_7 = sprites_SpriteSet_remove__P2118_mk(s);
    r0 = s.scene___14740.fields["spritesByKind"];
    s.tmp_8 = r0;
    s.tmp_10 = Sprite_kind__P2070_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 455; s.pc = 21; return s.tmp_10;
  case 21:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_8, s.tmp_9);
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = s.arg0;
    s.callLocIdx = 456; s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1415]) return breakpoint(s, 22, 1415, r0);
  case 22:
    s.tmp_0 = PhysicsEngine__C2159_v1_2_mk(s);
    r0 = s.scene___14740.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2159_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.removeSprite;
    s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 1416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1416]) return breakpoint(s, 24, 1416, r0);
  case 24:
    r0 = s.arg0.fields["destroyHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1417]) return breakpoint(s, 25, 1417, r0);
  case 25:
    s.tmp_1 = if_destroyHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "destroyHandler"), 1);
      s.callLocIdx = 457; s.pc = 26; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["destroyHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["destroyHandler"], 1); s.callLocIdx = 457; s.pc = 26; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 457; s.pc = 26; return s.tmp_1;; }
     else { s.callLocIdx = 457; s.pc = 26; return s.tmp_1; }
    }
  case 26:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1418]) return breakpoint(s, 27, 1418, r0);
  case 27:
    r0 = pxsim_pxtcore_mkAction(1, inline__P14777);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P14783);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P107_mk(s);
    s.tmp_3 = helpers_arrayFilter__P108_mk(s);
    r0 = s.scene___14740.fields["destroyedHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 459; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 461; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore__P2088.info = {"start":28711,"length":693,"line":869,"column":4,"endLine":885,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"_destroyCore","argumentNames":["this"]}

function Sprite__destroyCore__P2088_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore__P2088, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  scene___14740: undefined,
  arg0: undefined,
} }





function inline__P14777(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2070_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 458; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P14777.info = {"start":29327,"length":26,"line":883,"column":20,"endLine":883,"endColumn":46,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function inline__P14777_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14777, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P14783(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 460; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 460; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 460; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 460; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P14783.info = {"start":29376,"length":20,"line":884,"column":21,"endLine":884,"endColumn":41,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function inline__P14783_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P14783, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_removeSprite__P2162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2159_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_removeSprite__P2162.info = {"start":159,"length":32,"line":10,"column":4,"endLine":10,"endColumn":36,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_removeSprite__P2162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_removeSprite__P2162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_kind__P2070(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1305]) return breakpoint(s, 1, 1305, r0);
  case 1:
    r0 = s.arg0.fields["_kind"];
    return leave(s, r0)
  default: oops()
} } }
Sprite_kind__P2070.info = {"start":10604,"length":41,"line":387,"column":4,"endLine":389,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"kind","argumentNames":["this"]}

function Sprite_kind__P2070_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_kind__P2070, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function statusbars_onZero__P3637(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.zeroHandlers___15017 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3642]) return breakpoint(s, 3, 3642, r0);
  case 3:
    s.tmp_0 = statusbars_getZeroHandlers__P5803_mk(s);
    s.callLocIdx = 1671; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.zeroHandlers___15017 = (r0);
    s.lastBrkId = 3643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3643]) return breakpoint(s, 5, 3643, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.zeroHandlers___15017);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3644]) return breakpoint(s, 6, 3644, r0);
  case 6:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    s.zeroHandlers___15017 = (r0);
    s.tmp_4 = scene_Scene_data__P2442_mk(s);
    s.tmp_5 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1672; s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1673; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, globals.ZERO_HANDLERS_KEY___5776, s.tmp_2);
  case 1:
  case 2:
    s.lastBrkId = 3645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3645]) return breakpoint(s, 9, 3645, r0);
  case 9:
    r0 = pxsim_Array_.setAt(s.zeroHandlers___15017, s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_onZero__P3637.info = {"start":26659,"length":288,"line":790,"column":4,"endLine":796,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"onZero","argumentNames":["kind","handler"]}

function statusbars_onZero__P3637_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_onZero__P3637, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  zeroHandlers___15017: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function statusbars_getZeroHandlers__P5803(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3676]) return breakpoint(s, 1, 3676, r0);
  case 1:
    s.tmp_0 = statusbars_getSceneData__P5801_mk(s);
    s.tmp_0.arg0 = globals.ZERO_HANDLERS_KEY___5776;
    s.callLocIdx = 1690; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
statusbars_getZeroHandlers__P5803.info = {"start":30799,"length":114,"line":910,"column":4,"endLine":912,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"getZeroHandlers","argumentNames":[]}

function statusbars_getZeroHandlers__P5803_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_getZeroHandlers__P5803, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function StatusBarSprite_value__P3582(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StatusBarSprite__C3579_VT)) failedCast(r0);
    s.lastBrkId = 3449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3449]) return breakpoint(s, 1, 3449, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, inline__P15335);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = StatusBarSprite_applyChange__P5765_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1568; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StatusBarSprite_value__P3582.info = {"start":2471,"length":101,"line":81,"column":4,"endLine":85,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"value","argumentNames":["this","v"]}

function StatusBarSprite_value__P3582_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarSprite_value__P3582, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P15335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3450]) return breakpoint(s, 1, 3450, r0);
  case 1:
    s.tmp_0 = statusbars_StatusBar_current__P3619_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.callLocIdx = 1567; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P15335.info = {"start":2519,"length":45,"line":82,"column":25,"endLine":84,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["sb"]}

function inline__P15335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function statusbars_StatusBar_current__P3619(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3505]) return breakpoint(s, 3, 3505, r0);
  case 3:
    s.tmp_0 = statusbars_StatusBar_changeValue__P5792_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_1 = statusbars_StatusBar_max__P3616_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1595; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1596; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3506]) return breakpoint(s, 6, 3506, r0);
  case 6:
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3507]) return breakpoint(s, 7, 3507, r0);
  case 7:
    r0 = (s.arg0).fields["displayValue"] = (s.arg1);
  case 1:
  case 2:
    s.lastBrkId = 3508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3508]) return breakpoint(s, 8, 3508, r0);
  case 8:
    s.tmp_0 = statusbars_StatusBar_updateState__P3623_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1597; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_current__P3619.info = {"start":14485,"length":214,"line":440,"column":8,"endLine":447,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"current","argumentNames":["this","v"]}

function statusbars_StatusBar_current__P3619_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_current__P3619, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function statusbars_StatusBar_changeValue__P5792(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.statusHandlers___15358 = undefined;
    s.toRun___15361 = undefined;
    s.handler___15414 = undefined;
    s.h___15438 = undefined;
    s.unnamed2898___U4 = undefined;
    s.unnamed2899___U5 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3509]) return breakpoint(s, 23, 3509, r0);
  case 23:
    s.tmp_0 = statusbars_getStatusHandlers__P5804_mk(s);
    s.callLocIdx = 1598; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.statusHandlers___15358 = (r0);
    s.lastBrkId = 3510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3510]) return breakpoint(s, 25, 3510, r0);
  case 25:
    s.tmp_0 = r0 = s.statusHandlers___15358;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtcore_mkAction(3, inline__P15366);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 2, s.arg2);
    s.tmp_2 = helpers_arrayFilter__P108_mk(s);
    s.tmp_2.arg0 = s.statusHandlers___15358;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1603; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.toRun___15361 = (s.tmp_3);
    s.lastBrkId = 3511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3511]) return breakpoint(s, 27, 3511, r0);
  case 27:
    r0 = (s.arg0).fields["target"] = (s.arg1);
    s.lastBrkId = 3512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3512]) return breakpoint(s, 28, 3512, r0);
  case 28:
    r0 = (s.arg0).fields["_max"] = (s.arg2);
    s.lastBrkId = 3513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3513]) return breakpoint(s, 29, 3513, r0);
  case 29:
    r0 = (s.arg1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["hasHitZero"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["flags"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 & 64);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3514]) return breakpoint(s, 30, 3514, r0);
  case 30:
    r0 = (s.arg0).fields["hasHitZero"] = (true);
    s.lastBrkId = 3515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3515]) return breakpoint(s, 31, 3515, r0);
  case 31:
    s.tmp_1 = statusbars_getZeroHandlers__P5803_mk(s);
    s.callLocIdx = 1604; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_Array__mk();
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.arg0.fields["kind"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.handler___15414 = (r0);
    s.lastBrkId = 3516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3516]) return breakpoint(s, 33, 3516, r0);
  case 33:
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.handler___15414;
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3517]) return breakpoint(s, 34, 3517, r0);
  case 34:
    s.tmp_2 = lambda_2_mk(s);
    s.tmp_2.argL = s.handler___15414;
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 1605; s.pc = 35; return s.tmp_2;
  case 35:
    r0 = s.retval;
  case 11:
  case 12:
    { step = 18; continue; }
  case 13:
    s.lastBrkId = 3518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3518]) return breakpoint(s, 36, 3518, r0);
  case 36:
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_0;
    { step = 15; continue; }
  case 14:
    r0 = s.arg0.fields["hasHitZero"];
  case 15:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 3519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3519]) return breakpoint(s, 37, 3519, r0);
  case 37:
    r0 = (s.arg0).fields["hasHitZero"] = (false);
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 3520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3520]) return breakpoint(s, 38, 3520, r0);
  case 38:
    s.h___15438 = (undefined);
    s.tmp_0 = r0 = s.toRun___15361;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_0;
    { step = 20; continue; }
  case 19:
    r0 = pxsim_Array__mk();
  case 20:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.unnamed2898___U4 = (s.tmp_1);
    s.unnamed2899___U5 = (0);
    s.lastBrkId = 3521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3521]) return breakpoint(s, 39, 3521, r0);
  case 39:
  case 21:
    s.tmp_0 = r0 = s.unnamed2899___U5;
    r0 = pxsim_Array__length(s.unnamed2898___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2898___U4, s.unnamed2899___U5);
    s.h___15438 = (r0);
    s.lastBrkId = 3522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3522]) return breakpoint(s, 40, 3522, r0);
  case 40:
    s.tmp_2 = if_handler_2_mk(s);
    s.tmp_2.arg0 = s.h___15438;
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "handler"), 2);
      s.callLocIdx = 1606; s.pc = 41; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["handler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["handler"], 2); s.callLocIdx = 1606; s.pc = 41; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1606; s.pc = 41; return s.tmp_2;; }
     else { s.callLocIdx = 1606; s.pc = 41; return s.tmp_2; }
    }
  case 41:
    r0 = s.retval;
    r0 = (s.unnamed2899___U5 + 1);
    s.unnamed2899___U5 = (r0);
    { step = 21; continue; }
  case 22:
    s.unnamed2898___U4 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_changeValue__P5792.info = {"start":14709,"length":1086,"line":449,"column":8,"endLine":474,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"changeValue","argumentNames":["this","current","max"]}

function statusbars_StatusBar_changeValue__P5792_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_changeValue__P5792, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  statusHandlers___15358: undefined,
  toRun___15361: undefined,
  handler___15414: undefined,
  h___15438: undefined,
  unnamed2898___U4: undefined,
  unnamed2899___U5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P15366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["kind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 64);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    s.tmp_7 = statusbars_StatusHandler_conditionMet__P5797_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_7.arg1 = s.caps[1];
    s.tmp_7.arg2 = s.caps[2];
    s.callLocIdx = 1599; s.pc = 7; return s.tmp_7;
  case 7:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBool(s.tmp_8);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_8;
    { step = 6; continue; }
  case 5:
    s.tmp_11 = statusbars_StatusHandler_conditionMet__P5797_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.tmp_12 = statusbars_StatusBar_current__P3618_mk(s);
    s.tmp_12.arg0 = s.caps[0];
    s.callLocIdx = 1600; s.pc = 9; return s.tmp_12;
  case 9:
    r0 = s.retval;
    s.tmp_11.arg1 = r0;
    s.tmp_13 = statusbars_StatusBar_max__P3616_mk(s);
    s.tmp_13.arg0 = s.caps[0];
    s.callLocIdx = 1601; s.pc = 10; return s.tmp_13;
  case 10:
    r0 = s.retval;
    s.tmp_11.arg2 = r0;
    s.callLocIdx = 1602; s.pc = 8; return s.tmp_11;
  case 8:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_9);
  case 6:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = s.tmp_14;
    return leave(s, r0)
  default: oops()
} } }
inline__P15366.info = {"start":14885,"length":227,"line":451,"column":66,"endLine":455,"endColumn":62,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["h"]}

function inline__P15366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  arg0: undefined,
} }





function statusbars_getStatusHandlers__P5804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3677]) return breakpoint(s, 1, 3677, r0);
  case 1:
    s.tmp_0 = statusbars_getSceneData__P5801_mk(s);
    s.tmp_0.arg0 = globals.STATUS_HANDLERS_KEY___5782;
    s.callLocIdx = 1691; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
statusbars_getStatusHandlers__P5804.info = {"start":30919,"length":105,"line":914,"column":4,"endLine":916,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"getStatusHandlers","argumentNames":[]}

function statusbars_getStatusHandlers__P5804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_getStatusHandlers__P5804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function statusbars_StatusHandler_conditionMet__P5797(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.value___15451 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusHandler__C5796_VT)) failedCast(r0);
    s.lastBrkId = 3605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3605]) return breakpoint(s, 11, 3605, r0);
  case 11:
    r0 = s.arg0.fields["comparisonType"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg1 / s.arg2);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 100);
    { step = 2; continue; }
  case 1:
    r0 = s.arg1;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.value___15451 = (s.tmp_3);
    s.lastBrkId = 3606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3606]) return breakpoint(s, 12, 3606, r0);
  case 12:
    r0 = s.arg0.fields["comparison"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_0;
    { step = 9; continue; }
  case 3:
    s.lastBrkId = 3607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3607]) return breakpoint(s, 13, 3607, r0);
  case 13:
    r0 = s.arg0.fields["percent"];
    s.tmp_1 = r0;
    r0 = (s.value___15451 === s.tmp_1);
    { step = 10; continue; }
  case 4:
    s.lastBrkId = 3608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3608]) return breakpoint(s, 14, 3608, r0);
  case 14:
    r0 = s.arg0.fields["percent"];
    s.tmp_2 = r0;
    r0 = (s.value___15451 !== s.tmp_2);
    { step = 10; continue; }
  case 5:
    s.lastBrkId = 3609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3609]) return breakpoint(s, 15, 3609, r0);
  case 15:
    r0 = s.arg0.fields["percent"];
    s.tmp_3 = r0;
    r0 = (s.value___15451 > s.tmp_3);
    { step = 10; continue; }
  case 6:
    s.lastBrkId = 3610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3610]) return breakpoint(s, 16, 3610, r0);
  case 16:
    r0 = s.arg0.fields["percent"];
    s.tmp_4 = r0;
    r0 = (s.value___15451 >= s.tmp_4);
    { step = 10; continue; }
  case 7:
    s.lastBrkId = 3611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3611]) return breakpoint(s, 17, 3611, r0);
  case 17:
    r0 = s.arg0.fields["percent"];
    s.tmp_5 = r0;
    r0 = (s.value___15451 < s.tmp_5);
    { step = 10; continue; }
  case 8:
    s.lastBrkId = 3612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3612]) return breakpoint(s, 18, 3612, r0);
  case 18:
    r0 = s.arg0.fields["percent"];
    s.tmp_6 = r0;
    r0 = (s.value___15451 <= s.tmp_6);
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 3613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3613]) return breakpoint(s, 19, 3613, r0);
  case 19:
    r0 = false;
    { step = 10; continue; }
    r0 = undefined;
  case 10:
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusHandler_conditionMet__P5797.info = {"start":23261,"length":962,"line":685,"column":8,"endLine":706,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"conditionMet","argumentNames":["this","current","max"]}

function statusbars_StatusHandler_conditionMet__P5797_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusHandler_conditionMet__P5797, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  value___15451: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function statusbars_StatusBar_current__P3618(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    s.lastBrkId = 3504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3504]) return breakpoint(s, 1, 3504, r0);
  case 1:
    r0 = s.arg0.fields["target"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
statusbars_StatusBar_current__P3618.info = {"start":14418,"length":57,"line":436,"column":8,"endLine":438,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"current","argumentNames":["this"]}
statusbars_StatusBar_current__P3618.isGetter = true;

function statusbars_StatusBar_current__P3618_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_current__P3618, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function StatusBarSprite_value__P3581(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StatusBarSprite__C3579_VT)) failedCast(r0);
    s.lastBrkId = 3448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3448]) return breakpoint(s, 3, 3448, r0);
  case 3:
    s.tmp_1 = StatusBarSprite_applyChange__P5765_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = inline__P15507;
    s.callLocIdx = 1566; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leaveAccessor(s, r0)
  default: oops()
} } }
StatusBarSprite_value__P3581.info = {"start":2382,"length":83,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"value","argumentNames":["this"]}
StatusBarSprite_value__P3581.isGetter = true;

function StatusBarSprite_value__P3581_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarSprite_value__P3581, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P15507(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = statusbars_StatusBar_current__P3618_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1565; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
inline__P15507.info = {"start":2436,"length":16,"line":78,"column":32,"endLine":78,"endColumn":48,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["sb"]}

function inline__P15507_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15507, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_setFlag__P2079(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1377]) return breakpoint(s, 7, 1377, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1378]) return breakpoint(s, 8, 1378, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1379]) return breakpoint(s, 9, 1379, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | s.arg1);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 2:
    s.lastBrkId = 1380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1380]) return breakpoint(s, 10, 1380, r0);
  case 10:
    r0 = (s.arg1 === 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["sayBubbleSprite"];
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1381]) return breakpoint(s, 11, 1381, r0);
  case 11:
    s.tmp_2 = Sprite_setFlag__P2079_mk(s);
    r0 = s.arg0.fields["sayBubbleSprite"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.tmp_2.arg2 = s.arg2;
    s.callLocIdx = 427; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setFlag__P2079.info = {"start":23896,"length":292,"line":731,"column":4,"endLine":738,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setFlag","argumentNames":["this","flag","on"]}

function Sprite_setFlag__P2079_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setFlag__P2079, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function statusbars_getStatusBarAttachedTo__P3636(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.managedSprites___15543 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3638]) return breakpoint(s, 6, 3638, r0);
  case 6:
    s.tmp_0 = statusbars_getManagedSprites__P5802_mk(s);
    s.callLocIdx = 1668; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.managedSprites___15543 = (r0);
    s.lastBrkId = 3639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3639]) return breakpoint(s, 8, 3639, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.managedSprites___15543);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3640]) return breakpoint(s, 9, 3640, r0);
  case 9:
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3641]) return breakpoint(s, 10, 3641, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(2, inline__P15554);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.arg0);
    s.tmp_5 = helpers_arrayFind__P109_mk(s);
    s.tmp_5.arg0 = s.managedSprites___15543;
    s.tmp_5.arg1 = s.tmp_4;
    s.callLocIdx = 1670; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
statusbars_getStatusBarAttachedTo__P3636.info = {"start":26134,"length":311,"line":777,"column":4,"endLine":782,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"getStatusBarAttachedTo","argumentNames":["kind","sprite"]}

function statusbars_getStatusBarAttachedTo__P3636_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_getStatusBarAttachedTo__P3636, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  managedSprites___15543: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P15554(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkAction(2, inline__P15558);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.caps[0]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.caps[1]);
    s.tmp_1 = statusbars_applyChange__P5800_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1669; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
inline__P15554.info = {"start":26362,"length":75,"line":781,"column":35,"endLine":781,"endColumn":110,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["s"]}

function inline__P15554_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15554, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P15558(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteToFollow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["kind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === s.caps[1]);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
inline__P15558.info = {"start":26382,"length":54,"line":781,"column":55,"endLine":781,"endColumn":109,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["sb"]}

function inline__P15558_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15558, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function statusbars_applyChange__P5800(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sb___15571 = undefined;
    s.output___15575 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3667]) return breakpoint(s, 4, 3667, r0);
  case 4:
    r0 = s.arg0.fields["_statusBar"];
    s.sb___15571 = (r0);
    s.lastBrkId = 3668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3668]) return breakpoint(s, 5, 3668, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sb___15571);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3669]) return breakpoint(s, 6, 3669, r0);
  case 6:
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg1;
    s.tmp_0.arg0 = s.sb___15571;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1683; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.output___15575 = (r0);
    s.lastBrkId = 3670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3670]) return breakpoint(s, 8, 3670, r0);
  case 8:
    s.tmp_0 = statusbars_StatusBar_updateDisplay__P3624_mk(s);
    s.tmp_0.arg0 = s.sb___15571;
    s.callLocIdx = 1684; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 3671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3671]) return breakpoint(s, 10, 3671, r0);
  case 10:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = statusbars_StatusBar_image__P3621_mk(s);
    s.tmp_1.arg0 = s.sb___15571;
    s.callLocIdx = 1685; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1686; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3672]) return breakpoint(s, 13, 3672, r0);
  case 13:
    r0 = s.output___15575;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3673]) return breakpoint(s, 14, 3673, r0);
  case 14:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
statusbars_applyChange__P5800.info = {"start":30266,"length":320,"line":889,"column":4,"endLine":900,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"applyChange","argumentNames":["status","action"]}

function statusbars_applyChange__P5800_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_applyChange__P5800, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sb___15571: undefined,
  output___15575: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function distance__P60335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_4 = Sprite_x__P2025_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 128; s.pc = 1; return s.tmp_4;
  case 1:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_x__P2025_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 129; s.pc = 2; return s.tmp_6;
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.pow(s.tmp_2, 2);
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_y__P2027_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 130; s.pc = 3; return s.tmp_10;
  case 3:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = Sprite_y__P2027_mk(s);
    s.tmp_12.arg0 = s.arg1;
    s.callLocIdx = 131; s.pc = 4; return s.tmp_12;
  case 4:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 - s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim.Math_.pow(s.tmp_8, 2);
    s.tmp_7 = r0;
    r0 = (s.tmp_1 + s.tmp_7);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
distance__P60335.info = {"start":12365,"length":147,"line":350,"column":0,"endLine":352,"endColumn":1,"fileName":"main.ts","functionName":"distance","argumentNames":["mySprite","mySprite2"]}

function distance__P60335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: distance__P60335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_allOfKind__P1975(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___15588 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1200]) return breakpoint(s, 6, 1200, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 273; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___15588 = (r0);
    s.lastBrkId = 1201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1201]) return breakpoint(s, 8, 1201, r0);
  case 8:
    r0 = (s.arg0 >= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___15588, s.arg0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1202]) return breakpoint(s, 9, 1202, r0);
  case 9:
    r0 = pxsim_Array__mk();
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1203]) return breakpoint(s, 10, 1203, r0);
  case 10:
    s.tmp_6 = sprites_SpriteSet_sprites__P2115_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___15588, s.arg0);
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 274; s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_allOfKind__P1975.info = {"start":1561,"length":234,"line":56,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"allOfKind","argumentNames":["kind"]}

function sprites_allOfKind__P1975_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_allOfKind__P1975, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  spritesByKind___15588: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_sprites__P2115(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1553]) return breakpoint(s, 1, 1553, r0);
  case 1:
    s.tmp_0 = helpers_arraySlice__P112_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 542; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_sprites__P2115.info = {"start":787,"length":86,"line":33,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"sprites","argumentNames":["this"]}

function sprites_SpriteSet_sprites__P2115_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_sprites__P2115, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function animation_runImageAnimation__P3504(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.anim___15616 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3402]) return breakpoint(s, 3, 3402, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(animation_ImageAnimation__C3498_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = 500;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = animation_ImageAnimation_constructor__P3499_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg0;
    s.tmp_3.arg2 = s.arg1;
    s.tmp_3.arg3 = s.tmp_2;
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3.arg4 = r0;
    s.callLocIdx = 1543; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.anim___15616 = (s.tmp_0);
    s.lastBrkId = 3403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3403]) return breakpoint(s, 5, 3403, r0);
  case 5:
    s.tmp_0 = animation_SpriteAnimation_init__P3496_mk(s);
    s.tmp_0.arg0 = s.anim___15616;
    s.callLocIdx = 1544; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_runImageAnimation__P3504.info = {"start":19621,"length":222,"line":506,"column":4,"endLine":509,"endColumn":5,"fileName":"pxt_modules/animation/animation.ts","functionName":"runImageAnimation","argumentNames":["sprite","frames","frameInterval","loop"]}

function animation_runImageAnimation__P3504_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_runImageAnimation__P3504, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  anim___15616: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function animation_ImageAnimation_constructor__P3499(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_ImageAnimation__C3498_VT)) failedCast(r0);
    r0 = (s.arg0).fields["frames"] = (s.arg2);
    r0 = (s.arg0).fields["frameInterval"] = (s.arg3);
    s.lastBrkId = 3378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3378]) return breakpoint(s, 1, 3378, r0);
  case 1:
    s.tmp_0 = animation_SpriteAnimation_constructor__P3495_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg4;
    s.callLocIdx = 1538; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3379]) return breakpoint(s, 3, 3379, r0);
  case 3:
    r0 = (s.arg0).fields["lastFrame"] = (-1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_ImageAnimation_constructor__P3499.info = {"start":17575,"length":177,"line":452,"column":8,"endLine":455,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["this","sprite","frames","frameInterval","loop"]}

function animation_ImageAnimation_constructor__P3499_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_ImageAnimation_constructor__P3499, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function animation_SpriteAnimation_constructor__P3495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_SpriteAnimation__C3494_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["loop"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_constructor__P3495.info = {"start":15957,"length":71,"line":412,"column":8,"endLine":413,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["this","sprite","loop"]}

function animation_SpriteAnimation_constructor__P3495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_constructor__P3495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function animation_SpriteAnimation_init__P3496(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___15629 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_SpriteAnimation__C3494_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.state___15629 = (r0);
    s.lastBrkId = 3366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3366]) return breakpoint(s, 3, 3366, r0);
  case 3:
    s.tmp_0 = r0 = s.state___15629;
    s.tmp_3 = scene_Scene_data__P2442_mk(s);
    s.tmp_4 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1525; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1526; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_2, globals.stateNamespace___5683);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 3367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3367]) return breakpoint(s, 6, 3367, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.state___15629);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3368]) return breakpoint(s, 7, 3368, r0);
  case 7:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_3 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_3, "animations", s.tmp_4);
    s.tmp_6 = scene_Scene_data__P2442_mk(s);
    s.tmp_7 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1527; s.pc = 9; return s.tmp_7;
  case 9:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1528; s.pc = 8; return s.tmp_6;
  case 8:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_5, globals.stateNamespace___5683, s.tmp_3);
    r0 = pxsim_pxtrt_stlocRef(s.state___15629, s.tmp_3);
    s.lastBrkId = 3369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3369]) return breakpoint(s, 10, 3369, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, inline__P15644);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.state___15629);
    s.tmp_1 = control_EventContext_registerFrameHandler__P392_mk(s);
    s.tmp_2 = game_eventContext__P2535_mk(s);
    s.callLocIdx = 1529; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1533; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 3374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3374]) return breakpoint(s, 13, 3374, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(1, inline__P15666);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = if_animations_2_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.state___15629);
    s.tmp_1.arg0 = r0;
    s.tmp_2 = helpers_arrayFilter__P108_mk(s);
    s.tmp_3 = if_animations_1_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.state___15629);
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "animations");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["animations"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["animations"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1534; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_0;
    s.callLocIdx = 1535; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_1.arg0, "animations", s.tmp_1.arg1);
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["set/animations"];
      if (s.tmp_1.fn === null) { s.tmp_1.arg0.fields["animations"] = s.tmp_1.arg1; }
      else if (s.tmp_1.fn === undefined) { failedCast(s.tmp_1.arg0) } 
     else { s.callLocIdx = 1536; s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3376]) return breakpoint(s, 17, 3376, r0);
  case 17:
    s.tmp_1 = if_animations_1_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.state___15629);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "animations");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["animations"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["animations"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1537; s.pc = 18; return s.tmp_1; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_init__P3496.info = {"start":16038,"length":1299,"line":415,"column":8,"endLine":441,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"init","argumentNames":["this"]}

function animation_SpriteAnimation_init__P3496_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_init__P3496, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  state___15629: undefined,
  arg0: undefined,
} }





function inline__P15644(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3370]) return breakpoint(s, 1, 3370, r0);
  case 1:
    s.tmp_0 = if_animations_2_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg0 = r0;
    s.tmp_1 = helpers_arrayFilter__P108_mk(s);
    s.tmp_2 = if_animations_1_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "animations");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["animations"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["animations"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1530; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = inline__P15650;
    s.callLocIdx = 1531; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "animations", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/animations"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["animations"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1532; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P15644.info = {"start":16470,"length":371,"line":424,"column":90,"endLine":430,"endColumn":17,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":[]}

function inline__P15644_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15644, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function inline__P15650(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3371]) return breakpoint(s, 4, 3371, r0);
  case 4:
    r0 = s.arg0.fields["sprite"];
    r0 = r0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3372]) return breakpoint(s, 5, 3372, r0);
  case 5:
    r0 = false;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3373]) return breakpoint(s, 6, 3373, r0);
  case 6:
    s.tmp_4 = animation_SpriteAnimation__C3494_v0_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_4.arg0, animation_SpriteAnimation__C3494_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.update;
    s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
inline__P15650.info = {"start":16541,"length":280,"line":425,"column":63,"endLine":429,"endColumn":21,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["anim"]}

function inline__P15650_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15650, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function inline__P15666(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3375]) return breakpoint(s, 9, 3375, r0);
  case 9:
    r0 = s.arg0.fields["sprite"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["sprite"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_ImageAnimation__C3498_VT);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_3;
    { step = 3; continue; }
  case 2:
    r0 = s.caps[0];
    r0 = checkSubtype(r0, animation_ImageAnimation__C3498_VT);
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 7; continue; }
  case 4:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_MovementAnimation__C3501_VT);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    r0 = s.caps[0];
    r0 = checkSubtype(r0, animation_MovementAnimation__C3501_VT);
  case 6:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = s.tmp_6;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 8:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    s.tmp_9 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_9);
    return leave(s, r0)
  default: oops()
} } }
inline__P15666.info = {"start":16998,"length":285,"line":434,"column":55,"endLine":438,"endColumn":13,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["anim"]}

function inline__P15666_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P15666, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function animation_SpriteAnimation_update__P3497(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_SpriteAnimation__C3494_VT)) failedCast(r0);
    s.lastBrkId = 3377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3377]) return breakpoint(s, 1, 3377, r0);
  case 1:
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_update__P3497.info = {"start":17347,"length":118,"line":443,"column":8,"endLine":446,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"update","argumentNames":["this"]}

function animation_SpriteAnimation_update__P3497_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_update__P3497, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_createProjectileFromSprite__P1977(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1204]) return breakpoint(s, 1, 1204, r0);
  case 1:
    s.tmp_0 = sprites_createProjectile__P1978_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = s.arg1;
    s.callLocIdx = 275; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
sprites_createProjectileFromSprite__P1977.info = {"start":3136,"length":187,"line":88,"column":4,"endLine":90,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"createProjectileFromSprite","argumentNames":["img","sprite","vx","vy"]}

function sprites_createProjectileFromSprite__P1977_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_createProjectileFromSprite__P1977, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_createProjectile__P1978(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___15727 = undefined;
    s.sc___15734 = undefined;
    s.xOff___15750 = undefined;
    s.yOff___15764 = undefined;
    s.cam___15778 = undefined;
    s.initialX___15782 = undefined;
    s.initialY___15785 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1205]) return breakpoint(s, 17, 1205, r0);
  case 17:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 1;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = sprites_create__P1974_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 276; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.s___15727 = (r0);
    s.lastBrkId = 1206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1206]) return breakpoint(s, 19, 1206, r0);
  case 19:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 277; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.sc___15734 = (r0);
    s.lastBrkId = 1207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1207]) return breakpoint(s, 21, 1207, r0);
  case 21:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.s___15727;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 278; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 1208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1208]) return breakpoint(s, 23, 1208, r0);
  case 23:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.s___15727;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 279; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 1209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1209]) return breakpoint(s, 25, 1209, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1210]) return breakpoint(s, 26, 1210, r0);
  case 26:
    s.tmp_0 = Sprite_setPosition__P2072_mk(s);
    s.tmp_0.arg0 = s.s___15727;
    s.tmp_1 = Sprite_x__P2025_mk(s);
    s.tmp_1.arg0 = s.arg4;
    s.callLocIdx = 280; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_y__P2027_mk(s);
    s.tmp_2.arg0 = s.arg4;
    s.callLocIdx = 281; s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 282; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    { step = 16; continue; }
  case 3:
    s.lastBrkId = 1211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1211]) return breakpoint(s, 30, 1211, r0);
  case 30:
    r0 = s.sc___15734.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = Sprite_width__P2060_mk(s);
    s.tmp_3.arg0 = s.s___15727;
    s.callLocIdx = 283; s.pc = 31; return s.tmp_3;
  case 31:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    { step = 5; continue; }
  case 4:
    s.tmp_6 = Sprite_width__P2060_mk(s);
    s.tmp_6.arg0 = s.s___15727;
    s.callLocIdx = 284; s.pc = 32; return s.tmp_6;
  case 32:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.xOff___15750 = (s.tmp_7);
    s.lastBrkId = 1212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1212]) return breakpoint(s, 33, 1212, r0);
  case 33:
    r0 = s.sc___15734.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = Sprite_height__P2061_mk(s);
    s.tmp_3.arg0 = s.s___15727;
    s.callLocIdx = 285; s.pc = 34; return s.tmp_3;
  case 34:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    { step = 7; continue; }
  case 6:
    s.tmp_6 = Sprite_height__P2061_mk(s);
    s.tmp_6.arg0 = s.s___15727;
    s.callLocIdx = 286; s.pc = 35; return s.tmp_6;
  case 35:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.yOff___15764 = (s.tmp_7);
    s.lastBrkId = 1213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1213]) return breakpoint(s, 36, 1213, r0);
  case 36:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 287; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.cam___15778 = (r0);
    s.lastBrkId = 1214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1214]) return breakpoint(s, 38, 1214, r0);
  case 38:
    s.tmp_0 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_0.arg0 = s.cam___15778;
    s.callLocIdx = 288; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.initialX___15782 = (r0);
    s.lastBrkId = 1215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1215]) return breakpoint(s, 40, 1215, r0);
  case 40:
    s.tmp_0 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_0.arg0 = s.cam___15778;
    s.callLocIdx = 289; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.initialY___15785 = (r0);
    s.lastBrkId = 1216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1216]) return breakpoint(s, 42, 1216, r0);
  case 42:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1217]) return breakpoint(s, 43, 1217, r0);
  case 43:
    s.tmp_1 = r0 = s.initialX___15782;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + s.xOff___15750);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.initialX___15782 = (r0);
    { step = 11; continue; }
  case 8:
    s.lastBrkId = 1218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1218]) return breakpoint(s, 44, 1218, r0);
  case 44:
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1219]) return breakpoint(s, 45, 1219, r0);
  case 45:
    s.tmp_1 = r0 = s.initialX___15782;
    r0 = (0 - s.xOff___15750);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.initialX___15782 = (r0);
  case 9:
  case 10:
  case 11:
    s.lastBrkId = 1220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1220]) return breakpoint(s, 46, 1220, r0);
  case 46:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1221]) return breakpoint(s, 47, 1221, r0);
  case 47:
    s.tmp_1 = r0 = s.initialY___15785;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + s.yOff___15764);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.initialY___15785 = (r0);
    { step = 15; continue; }
  case 12:
    s.lastBrkId = 1222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1222]) return breakpoint(s, 48, 1222, r0);
  case 48:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1223]) return breakpoint(s, 49, 1223, r0);
  case 49:
    s.tmp_1 = r0 = s.initialY___15785;
    r0 = (0 - s.yOff___15764);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.initialY___15785 = (r0);
  case 13:
  case 14:
  case 15:
    s.lastBrkId = 1224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1224]) return breakpoint(s, 50, 1224, r0);
  case 50:
    s.tmp_0 = Sprite_setPosition__P2072_mk(s);
    s.tmp_0.arg0 = s.s___15727;
    s.tmp_0.arg1 = s.initialX___15782;
    s.tmp_0.arg2 = s.initialY___15785;
    s.callLocIdx = 290; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
  case 16:
    s.lastBrkId = 1225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1225]) return breakpoint(s, 52, 1225, r0);
  case 52:
    s.tmp_0 = r0 = s.s___15727;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 20);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    s.lastBrkId = 1226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1226]) return breakpoint(s, 53, 1226, r0);
  case 53:
    r0 = s.s___15727;
    return leave(s, r0)
  default: oops()
} } }
sprites_createProjectile__P1978.info = {"start":3955,"length":1265,"line":103,"column":4,"endLine":140,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"createProjectile","argumentNames":["img","vx","vy","kind","sprite"]}

function sprites_createProjectile__P1978_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_createProjectile__P1978, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  s___15727: undefined,
  sc___15734: undefined,
  xOff___15750: undefined,
  yOff___15764: undefined,
  cam___15778: undefined,
  initialX___15782: undefined,
  initialY___15785: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function controller_Button_onEvent__P1910(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1028]) return breakpoint(s, 1, 1028, r0);
  case 1:
    s.tmp_0 = control_onEvent__P380_mk(s);
    s.tmp_0.arg0 = s.arg1;
    r0 = s.arg0.fields["id"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.callLocIdx = 186; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_onEvent__P1910.info = {"start":3368,"length":124,"line":112,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"onEvent","argumentNames":["this","event","handler"]}

function controller_Button_onEvent__P1910_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_onEvent__P1910, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_createTilemap__P2340(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2367]) return breakpoint(s, 1, 2367, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_TileMapData__C2304_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_TileMapData_constructor__P2305_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_1.arg4 = s.arg3;
    s.callLocIdx = 981; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_createTilemap__P2340.info = {"start":14038,"length":170,"line":456,"column":4,"endLine":458,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"createTilemap","argumentNames":["data","layer","tiles","scale"]}

function tiles_createTilemap__P2340_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_createTilemap__P2340, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function tiles_TileMapData_constructor__P2305(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2227]) return breakpoint(s, 1, 2227, r0);
  case 1:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 2228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2228]) return breakpoint(s, 2, 2228, r0);
  case 2:
    r0 = (s.arg0).fields["layers"] = (s.arg2);
    s.lastBrkId = 2229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2229]) return breakpoint(s, 3, 2229, r0);
  case 3:
    r0 = (s.arg0).fields["tileset"] = (s.arg3);
    s.lastBrkId = 2230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2230]) return breakpoint(s, 4, 2230, r0);
  case 4:
    s.tmp_0 = tiles_TileMapData_scale__P2309_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg4;
    s.callLocIdx = 904; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2231]) return breakpoint(s, 6, 2231, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 2232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2232]) return breakpoint(s, 7, 2232, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_constructor__P2305.info = {"start":3293,"length":358,"line":125,"column":8,"endLine":133,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","data","layers","tileset","scale"]}

function tiles_TileMapData_constructor__P2305_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_constructor__P2305, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_stringTrim__P118(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.start___22024 = undefined;
    s.end___22025 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[227]) return breakpoint(s, 9, 227, r0);
  case 9:
    s.start___22024 = (0);
    s.lastBrkId = 228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[228]) return breakpoint(s, 10, 228, r0);
  case 10:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.end___22025 = (r0);
    s.lastBrkId = 229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[229]) return breakpoint(s, 11, 229, r0);
  case 11:
  case 1:
    s.lastBrkId = 230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[230]) return breakpoint(s, 12, 230, r0);
  case 12:
    r0 = (s.start___22024 <= s.end___22025);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    s.tmp_1 = helpers_isWhitespace__P119_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.start___22024);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 16; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[231]) return breakpoint(s, 14, 231, r0);
  case 14:
    r0 = (s.start___22024 + 1);
    s.start___22024 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[232]) return breakpoint(s, 15, 232, r0);
  case 15:
  case 5:
    s.lastBrkId = 233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[233]) return breakpoint(s, 16, 233, r0);
  case 16:
    r0 = (s.end___22025 > s.start___22024);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_1 = helpers_isWhitespace__P119_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.end___22025);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 17; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[234]) return breakpoint(s, 18, 234, r0);
  case 18:
    r0 = (s.end___22025 - 1);
    s.end___22025 = (r0);
    { step = 5; continue; }
  case 8:
    s.lastBrkId = 235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[235]) return breakpoint(s, 19, 235, r0);
  case 19:
    s.tmp_0 = helpers_stringSlice__P115_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.start___22024;
    r0 = (s.end___22025 + 1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 18; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_stringTrim__P118.info = {"start":13550,"length":319,"line":464,"column":4,"endLine":474,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringTrim","argumentNames":["s"]}

function helpers_stringTrim__P118_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringTrim__P118, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  start___22024: undefined,
  end___22025: undefined,
  arg0: undefined,
} }





function helpers_registerTilemapFactory__P2357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2385]) return breakpoint(s, 3, 2385, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.factories___4004);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2386]) return breakpoint(s, 4, 2386, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals.factories___4004 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2387]) return breakpoint(s, 5, 2387, r0);
  case 5:
    r0 = pxsim_Array__push(globals.factories___4004, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_registerTilemapFactory__P2357.info = {"start":20837,"length":145,"line":639,"column":4,"endLine":643,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"registerTilemapFactory","argumentNames":["factory"]}

function helpers_registerTilemapFactory__P2357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_registerTilemapFactory__P2357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function StatusBarKind_create__P3574(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3440]) return breakpoint(s, 3, 3440, r0);
  case 3:
    r0 = (globals.nextKind___5755 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3441]) return breakpoint(s, 4, 3441, r0);
  case 4:
    globals.nextKind___5755 = (1);
  case 1:
  case 2:
    s.lastBrkId = 3442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3442]) return breakpoint(s, 5, 3442, r0);
  case 5:
    s.tmp_0 = r0 = globals.nextKind___5755;
    r0 = (s.tmp_0 + 1);
    globals.nextKind___5755 = (r0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
StatusBarKind_create__P3574.info = {"start":1547,"length":109,"line":44,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"create","argumentNames":[]}

function StatusBarKind_create__P3574_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StatusBarKind_create__P3574, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_eventContext__P2535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2646]) return breakpoint(s, 1, 2646, r0);
  case 1:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1095; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2647]) return breakpoint(s, 3, 2647, r0);
  case 3:
    r0 = globals._scene___4056.fields["eventContext"];
    return leave(s, r0)
  default: oops()
} } }
game_eventContext__P2535.info = {"start":1084,"length":112,"line":40,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"eventContext","argumentNames":[]}

function game_eventContext__P2535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_eventContext__P2535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_pauseUntilAnyButtonIsPressed__P1953(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1161]) return breakpoint(s, 1, 1161, r0);
  case 1:
    setupResume(s, 2);
    pxsim.control.waitForEvent(2049, 0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_pauseUntilAnyButtonIsPressed__P1953.info = {"start":19144,"length":96,"line":583,"column":4,"endLine":585,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"pauseUntilAnyButtonIsPressed","argumentNames":[]}

function controller_pauseUntilAnyButtonIsPressed__P1953_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_pauseUntilAnyButtonIsPressed__P1953, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_setWaitAnyButton__P2533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2642]) return breakpoint(s, 1, 2642, r0);
  case 1:
    globals.__waitAnyButton___4060 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_setWaitAnyButton__P2533.info = {"start":878,"length":83,"line":31,"column":4,"endLine":33,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"setWaitAnyButton","argumentNames":["f"]}

function game_setWaitAnyButton__P2533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_setWaitAnyButton__P2533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Math_abs__P123(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[240]) return breakpoint(s, 3, 240, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (0 - s.arg0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_abs__P123.info = {"start":15106,"length":77,"line":511,"column":4,"endLine":513,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"abs","argumentNames":["x"]}

function Math_abs__P123_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_abs__P123, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Math_sign__P124(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[241]) return breakpoint(s, 6, 241, r0);
  case 6:
    r0 = (s.arg0 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[242]) return breakpoint(s, 7, 242, r0);
  case 7:
    r0 = 0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[243]) return breakpoint(s, 8, 243, r0);
  case 8:
    r0 = (s.arg0 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[244]) return breakpoint(s, 9, 244, r0);
  case 9:
    r0 = 1;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[245]) return breakpoint(s, 10, 245, r0);
  case 10:
    r0 = -1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_sign__P124.info = {"start":15341,"length":125,"line":519,"column":4,"endLine":523,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sign","argumentNames":["x"]}

function Math_sign__P124_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_sign__P124, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function texteffects_TextEffect_constructor__P2833(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, texteffects_TextEffect__C2831_VT)) failedCast(r0);
    s.lastBrkId = 3338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3338]) return breakpoint(s, 1, 3338, r0);
  case 1:
    r0 = (s.arg0).fields["getState"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
texteffects_TextEffect_constructor__P2833.info = {"start":657,"length":133,"line":25,"column":8,"endLine":27,"endColumn":9,"fileName":"pxt_modules/game/texteffects.ts","functionName":"inline","argumentNames":["this","getState"]}

function texteffects_TextEffect_constructor__P2833_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: texteffects_TextEffect_constructor__P2833, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Math_FastRandom_constructor__P2588(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2586_VT)) failedCast(r0);
    s.lastBrkId = 2736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2736]) return breakpoint(s, 3, 2736, r0);
  case 3:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2737]) return breakpoint(s, 4, 2737, r0);
  case 4:
    r0 = pxsim.Math_.randomRange(1, 65535);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2738]) return breakpoint(s, 5, 2738, r0);
  case 5:
    r0 = (s.arg0).fields["seed"] = (s.arg1);
    s.lastBrkId = 2739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2739]) return breakpoint(s, 6, 2739, r0);
  case 6:
    r0 = (s.arg0).fields["lfsr"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_constructor__P2588.info = {"start":1425,"length":175,"line":44,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"inline","argumentNames":["this","seed"]}

function Math_FastRandom_constructor__P2588_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_constructor__P2588, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_ramSize__P335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[340]) return breakpoint(s, 3, 340, r0);
  case 3:
    r0 = pxsim_pxtcore.getConfig(205, 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = control__ramSize__P3703_mk(s);
    s.callLocIdx = 28; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
control_ramSize__P335.info = {"start":5058,"length":100,"line":172,"column":4,"endLine":174,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"ramSize","argumentNames":[]}

function control_ramSize__P335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_ramSize__P335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control__ramSize__P3703(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[339]) return breakpoint(s, 1, 339, r0);
  case 1:
    r0 = 33554432;
    return leave(s, r0)
  default: oops()
} } }
control__ramSize__P3703.info = {"start":4938,"length":60,"line":167,"column":4,"endLine":169,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"_ramSize","argumentNames":[]}

function control__ramSize__P3703_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control__ramSize__P3703, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_consoleOverlay_listener__P4389(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2946]) return breakpoint(s, 8, 2946, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4354);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2947]) return breakpoint(s, 9, 2947, r0);
  case 9:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2948]) return breakpoint(s, 10, 2948, r0);
  case 10:
    s.tmp_4 = helpers_arrayForEach__P107_mk(s);
    s.tmp_5 = helpers_arrayFilter__P108_mk(s);
    s.tmp_6 = helpers_stringSplit__P117_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.tmp_6.arg1 = "\n";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1299; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = inline__P16312;
    s.callLocIdx = 1300; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = inline__P16317;
    s.callLocIdx = 1302; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2954]) return breakpoint(s, 14, 2954, r0);
  case 14:
    r0 = pxsim_Array__length(globals.consoleStrings___4354);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.consoleLines___4367);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2955]) return breakpoint(s, 15, 2955, r0);
  case 15:
    s.tmp_2 = helpers_arraySplice__P98_mk(s);
    s.tmp_2.arg0 = globals.consoleStrings___4354;
    s.tmp_2.arg1 = 0;
    r0 = pxsim_Array__length(globals.consoleStrings___4354);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - globals.consoleLines___4367);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1303; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener__P4389.info = {"start":787,"length":571,"line":26,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"listener","argumentNames":["priority","text"]}

function game_consoleOverlay_listener__P4389_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener__P4389, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P16312(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P16312.info = {"start":985,"length":14,"line":32,"column":20,"endLine":32,"endColumn":34,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function inline__P16312_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16312, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P16317(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.j___16319 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2949]) return breakpoint(s, 3, 2949, r0);
  case 3:
    s.j___16319 = (0);
    s.lastBrkId = 2950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2950]) return breakpoint(s, 4, 2950, r0);
  case 4:
  case 1:
    s.lastBrkId = 2951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2951]) return breakpoint(s, 5, 2951, r0);
  case 5:
    s.tmp_1 = r0 = s.j___16319;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2952]) return breakpoint(s, 6, 2952, r0);
  case 6:
    s.tmp_3 = r0 = globals.consoleStrings___4354;
    s.tmp_5 = helpers_stringSlice__P115_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.j___16319;
    r0 = (s.j___16319 + globals.consoleColumns___4377);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 1301; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    s.lastBrkId = 2953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2953]) return breakpoint(s, 8, 2953, r0);
  case 8:
    r0 = (s.j___16319 + globals.consoleColumns___4377);
    s.j___16319 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16317.info = {"start":1022,"length":189,"line":33,"column":21,"endLine":37,"endColumn":13,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function inline__P16317_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16317, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  j___16319: undefined,
  arg0: undefined,
} }





function console_addListener__P372(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[432]) return breakpoint(s, 6, 432, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array_.indexOf(globals.listeners___3718, s.arg0, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > -1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[433]) return breakpoint(s, 7, 433, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[434]) return breakpoint(s, 8, 434, r0);
  case 8:
    r0 = pxsim_Array__push(globals.listeners___3718, s.arg0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_addListener__P372.info = {"start":3558,"length":197,"line":121,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"addListener","argumentNames":["listener"]}

function console_addListener__P372_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_addListener__P372, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P3717(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P3717.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function inline__P3717_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P3717, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_register__P2633(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2906]) return breakpoint(s, 4, 2906, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___4308);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2907]) return breakpoint(s, 5, 2907, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2908]) return breakpoint(s, 6, 2908, r0);
  case 6:
    s.tmp_0 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_0.arg0 = globals.menu___1883;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = scene_systemMenu_showSystemMenu__P2634;
    s.callLocIdx = 1286; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_register__P2633.info = {"start":12793,"length":193,"line":382,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"register","argumentNames":[]}

function scene_systemMenu_register__P2633_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_register__P2633, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_showSystemMenu__P2634(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2909]) return breakpoint(s, 4, 2909, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___4308);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2910]) return breakpoint(s, 5, 2910, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2911]) return breakpoint(s, 6, 2911, r0);
  case 6:
    s.tmp_0 = game_pushScene__P2536_mk(s);
    s.callLocIdx = 1287; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2912]) return breakpoint(s, 8, 2912, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_PauseMenu__C2622_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_PauseMenu_constructor__P2623_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = scene_systemMenu_buildOptionList__P2630;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1288; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.instance___4308 = (s.tmp_0);
    s.lastBrkId = 2913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2913]) return breakpoint(s, 10, 2913, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_PauseMenu_show__P2624_mk(s);
    s.tmp_0.arg0 = globals.instance___4308;
    s.callLocIdx = 1289; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_showSystemMenu__P2634.info = {"start":12992,"length":172,"line":388,"column":4,"endLine":393,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"showSystemMenu","argumentNames":[]}

function scene_systemMenu_showSystemMenu__P2634_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_showSystemMenu__P2634, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_buildOptionList__P2630(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.options___16980 = undefined;
    s.lastBrkId = 2889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2889]) return breakpoint(s, 5, 2889, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.options___16980 = (r0);
    s.lastBrkId = 2890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2890]) return breakpoint(s, 6, 2890, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_DOWN_ICON___2644;
    s.tmp_1.arg2 = inline__P16988;
    s.tmp_1.arg3 = scene_systemMenu_volumeDown__P4314;
    s.callLocIdx = 1269; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
    s.lastBrkId = 2891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2891]) return breakpoint(s, 8, 2891, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_UP_ICON___2641;
    s.tmp_1.arg2 = inline__P17002;
    s.tmp_1.arg3 = scene_systemMenu_volumeUp__P4313;
    s.callLocIdx = 1271; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
    s.lastBrkId = 2892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2892]) return breakpoint(s, 10, 2892, r0);
  case 10:
    s.tmp_1 = scene_systemMenu_setScreenBrightnessSupported__P4321_mk(s);
    s.callLocIdx = 1272; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2893]) return breakpoint(s, 12, 2893, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_2 = r0;
    s.tmp_3 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = globals.BRIGHTNESS_DOWN_ICON___2642;
    s.tmp_3.arg2 = inline__P17017;
    s.tmp_3.arg3 = scene_systemMenu_brightnessDown__P4316;
    s.callLocIdx = 1274; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_2);
    s.lastBrkId = 2894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2894]) return breakpoint(s, 14, 2894, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.BRIGHTNESS_UP_ICON___2647;
    s.tmp_1.arg2 = inline__P17032;
    s.tmp_1.arg3 = scene_systemMenu_brightnessUp__P4315;
    s.callLocIdx = 1276; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
  case 1:
  case 2:
    s.lastBrkId = 2895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2895]) return breakpoint(s, 16, 2895, r0);
  case 16:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.STATS_ICON___2648;
    s.tmp_1.arg2 = inline__P17047;
    s.tmp_1.arg3 = scene_systemMenu_toggleStats__P4318;
    s.callLocIdx = 1277; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
    s.lastBrkId = 2896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2896]) return breakpoint(s, 18, 2896, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CONSOLE_ICON___2646;
    s.tmp_1.arg2 = inline__P17056;
    s.tmp_1.arg3 = scene_systemMenu_toggleConsole__P4319;
    s.callLocIdx = 1279; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
    s.lastBrkId = 2897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2897]) return breakpoint(s, 20, 2897, r0);
  case 20:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SLEEP_ICON___2645;
    s.tmp_1.arg2 = inline__P17065;
    s.tmp_1.arg3 = scene_systemMenu_sleep__P4320;
    s.callLocIdx = 1280; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
    s.lastBrkId = 2898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2898]) return breakpoint(s, 22, 2898, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(globals.customMenuOptions___4309);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2899]) return breakpoint(s, 23, 2899, r0);
  case 23:
    s.tmp_0 = helpers_arrayConcat__P111_mk(s);
    s.tmp_0.arg0 = s.options___16980;
    s.tmp_0.arg1 = globals.customMenuOptions___4309;
    s.callLocIdx = 1281; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.options___16980 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 2900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2900]) return breakpoint(s, 25, 2900, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2614_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CLOSE_MENU_ICON___2643;
    s.tmp_1.arg2 = inline__P17078;
    s.tmp_1.arg3 = scene_systemMenu_closeMenu__P2629;
    s.callLocIdx = 1282; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16980, s.tmp_0);
    s.lastBrkId = 2901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2901]) return breakpoint(s, 27, 2901, r0);
  case 27:
    r0 = s.options___16980;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList__P2630.info = {"start":10499,"length":1149,"line":334,"column":4,"endLine":354,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildOptionList","argumentNames":[]}

function scene_systemMenu_buildOptionList__P2630_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList__P2630, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  options___16980: undefined,
} }





function inline__P16988(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1593_mk(s);
    s.callLocIdx = 1268; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
inline__P16988.info = {"start":10644,"length":39,"line":337,"column":54,"endLine":337,"endColumn":93,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16988_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16988, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P17002(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1593_mk(s);
    s.callLocIdx = 1270; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
inline__P17002.info = {"start":10751,"length":37,"line":338,"column":52,"endLine":338,"endColumn":89,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17002_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17002, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P17017(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P1736_mk(s);
    s.tmp_3.arg0 = globals.screen___1802;
    s.callLocIdx = 1273; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
inline__P17017.info = {"start":10910,"length":48,"line":340,"column":62,"endLine":340,"endColumn":110,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17017_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17017, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P17032(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P1736_mk(s);
    s.tmp_3.arg0 = globals.screen___1802;
    s.callLocIdx = 1275; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
inline__P17032.info = {"start":11038,"length":46,"line":341,"column":60,"endLine":341,"endColumn":106,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17032_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17032, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P17047(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.stats___2529);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE STATS";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW STATS";
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
inline__P17047.info = {"start":11160,"length":46,"line":343,"column":48,"endLine":343,"endColumn":94,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17047_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17047, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P17056(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = game_consoleOverlay_isVisible__P2651_mk(s);
    s.callLocIdx = 1278; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE CONSOLE";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW CONSOLE";
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
inline__P17056.info = {"start":11273,"length":71,"line":344,"column":50,"endLine":344,"endColumn":121,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17056_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17056, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function inline__P17065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "SLEEP";
    return leave(s, r0)
  default: oops()
} } }
inline__P17065.info = {"start":11411,"length":13,"line":345,"column":48,"endLine":345,"endColumn":61,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function inline__P17078(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "CLOSE";
    return leave(s, r0)
  default: oops()
} } }
inline__P17078.info = {"start":11590,"length":13,"line":351,"column":53,"endLine":351,"endColumn":66,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P17078_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17078, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_setScreenBrightnessSupported__P4321(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2888]) return breakpoint(s, 1, 2888, r0);
  case 1:
    r0 = 0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightnessSupported__P4321.info = {"start":10398,"length":95,"line":330,"column":4,"endLine":332,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightnessSupported","argumentNames":[]}

function scene_systemMenu_setScreenBrightnessSupported__P4321_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightnessSupported__P4321, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_sleep__P4320(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2882]) return breakpoint(s, 1, 2882, r0);
  case 1:
    r0 = pxsim_pxtcore.deepSleep();
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_sleep__P4320.info = {"start":10072,"length":51,"line":316,"column":4,"endLine":318,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"sleep","argumentNames":[]}

function scene_systemMenu_sleep__P4320_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_sleep__P4320, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_toggleConsole__P4319(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2878]) return breakpoint(s, 3, 2878, r0);
  case 3:
    s.tmp_1 = game_consoleOverlay_isVisible__P2651_mk(s);
    s.callLocIdx = 1261; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2879]) return breakpoint(s, 5, 2879, r0);
  case 5:
    s.tmp_2 = game_consoleOverlay_setVisible__P2653_mk(s);
    s.tmp_2.arg0 = false;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1262; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2880]) return breakpoint(s, 7, 2880, r0);
  case 7:
    s.tmp_0 = game_consoleOverlay_setVisible__P2653_mk(s);
    s.tmp_0.arg0 = true;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 1263; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2881]) return breakpoint(s, 9, 2881, r0);
  case 9:
    s.tmp_0 = console_log__P369_mk(s);
    s.tmp_0.arg0 = "console";
    s.callLocIdx = 1264; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleConsole__P4319.info = {"start":9827,"length":239,"line":307,"column":4,"endLine":314,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleConsole","argumentNames":[]}

function scene_systemMenu_toggleConsole__P4319_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleConsole__P4319, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function game_consoleOverlay_setVisible__P2653(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2942]) return breakpoint(s, 7, 2942, r0);
  case 7:
    s.tmp_1 = r0 = s.arg0;
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4354);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2943]) return breakpoint(s, 8, 2943, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    globals.consoleStrings___4354 = (s.tmp_6);
  case 3:
  case 4:
    s.lastBrkId = 2944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2944]) return breakpoint(s, 9, 2944, r0);
  case 9:
    r0 = (s.arg1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2945]) return breakpoint(s, 10, 2945, r0);
  case 10:
    globals.consoleColor___4353 = (s.arg1);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_setVisible__P2653.info = {"start":562,"length":219,"line":19,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"setVisible","argumentNames":["value","col"]}

function game_consoleOverlay_setVisible__P2653_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_setVisible__P2653, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_log__P369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[414]) return breakpoint(s, 1, 414, r0);
  case 1:
    s.tmp_0 = console_add__P365_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 44; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P369.info = {"start":1450,"length":86,"line":58,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function console_add__P365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___17117 = undefined;
    s.i___17126 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[405]) return breakpoint(s, 6, 405, r0);
  case 6:
    r0 = (s.arg0 < globals.minPriority___364);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[406]) return breakpoint(s, 7, 406, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[407]) return breakpoint(s, 8, 407, r0);
  case 8:
    s.tmp_1 = console_inspect__P371_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 42; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.text___17117 = (r0);
    s.lastBrkId = 408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[408]) return breakpoint(s, 10, 408, r0);
  case 10:
    if ((s.text___17117) && (s.text___17117).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.text___17117);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.text___17117) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.text___17117 = (r0);
    s.lastBrkId = 409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[409]) return breakpoint(s, 12, 409, r0);
  case 12:
    s.i___17126 = (0);
    s.lastBrkId = 410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[410]) return breakpoint(s, 13, 410, r0);
  case 13:
  case 3:
    s.lastBrkId = 411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[411]) return breakpoint(s, 14, 411, r0);
  case 14:
    s.tmp_1 = r0 = s.i___17126;
    r0 = pxsim_Array__length(globals.listeners___3718);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[412]) return breakpoint(s, 15, 412, r0);
  case 15:
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___3718, s.i___17126);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.text___17117;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 43; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[413]) return breakpoint(s, 17, 413, r0);
  case 17:
    r0 = (s.i___17126 + 1);
    s.i___17126 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P365.info = {"start":632,"length":317,"line":28,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","message"]}

function console_add__P365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___17117: undefined,
  i___17126: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect__P371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.asArr___17157 = undefined;
    s.asString___17175 = undefined;
    s.keys___17187 = undefined;
    s.snipped___17191 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[415]) return breakpoint(s, 18, 415, r0);
  case 18:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[416]) return breakpoint(s, 19, 416, r0);
  case 19:
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    s.lastBrkId = 417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[417]) return breakpoint(s, 20, 417, r0);
  case 20:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[418]) return breakpoint(s, 21, 418, r0);
  case 21:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    s.lastBrkId = 419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[419]) return breakpoint(s, 23, 419, r0);
  case 23:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[420]) return breakpoint(s, 24, 420, r0);
  case 24:
    s.asArr___17157 = (s.arg0);
    s.lastBrkId = 421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[421]) return breakpoint(s, 25, 421, r0);
  case 25:
    r0 = pxsim_Array__length(s.asArr___17157);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[422]) return breakpoint(s, 26, 422, r0);
  case 26:
    s.tmp_2 = helpers_arrayJoin__P101_mk(s);
    s.tmp_2.arg0 = s.asArr___17157;
    s.tmp_2.arg1 = ",";
    s.callLocIdx = 45; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[423]) return breakpoint(s, 28, 423, r0);
  case 28:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P101_mk(s);
    s.tmp_8 = helpers_arraySlice__P112_mk(s);
    s.tmp_8.arg0 = s.asArr___17157;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.callLocIdx = 46; s.pc = 30; return s.tmp_8;
  case 30:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.callLocIdx = 47; s.pc = 29; return s.tmp_7;
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[424]) return breakpoint(s, 32, 424, r0);
  case 32:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___17175 = (r0);
    s.lastBrkId = 425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[425]) return breakpoint(s, 34, 425, r0);
  case 34:
    r0 = (s.asString___17175 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___17175 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[426]) return breakpoint(s, 35, 426, r0);
  case 35:
    r0 = s.asString___17175;
    { step = 17; continue; }
  case 8:
  case 9:
    s.lastBrkId = 427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[427]) return breakpoint(s, 36, 427, r0);
  case 36:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___17187 = (r0);
    s.lastBrkId = 428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[428]) return breakpoint(s, 37, 428, r0);
  case 37:
    r0 = pxsim_Array__length(s.keys___17187);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___17191 = (r0);
    s.lastBrkId = 429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[429]) return breakpoint(s, 38, 429, r0);
  case 38:
    r0 = pxsim_numops_toBoolDecr(s.snipped___17191);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[430]) return breakpoint(s, 39, 430, r0);
  case 39:
    s.tmp_0 = helpers_arraySlice__P112_mk(s);
    s.tmp_0.arg0 = s.keys___17187;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 48; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.keys___17187 = (r0);
  case 10:
  case 11:
    s.lastBrkId = 431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[431]) return breakpoint(s, 41, 431, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, inline__P17208);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___17191);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P110_mk(s);
    s.tmp_7.arg0 = s.keys___17187;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.callLocIdx = 49; s.pc = 42; return s.tmp_7;
  case 42:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 43);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 43:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P371.info = {"start":2271,"length":1190,"line":81,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___17157: undefined,
  asString___17175: undefined,
  keys___17187: undefined,
  snipped___17191: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P17208(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P17208.info = {"start":3293,"length":61,"line":108,"column":20,"endLine":108,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function inline__P17208_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17208, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayReduce__P110(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___17235 = undefined;
    s.i___17238 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[135]) return breakpoint(s, 3, 135, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___17235 = (r0);
    s.lastBrkId = 136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[136]) return breakpoint(s, 4, 136, r0);
  case 4:
    s.i___17238 = (0);
    s.lastBrkId = 137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[137]) return breakpoint(s, 5, 137, r0);
  case 5:
  case 1:
    s.lastBrkId = 138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[138]) return breakpoint(s, 6, 138, r0);
  case 6:
    r0 = (s.i___17238 < s.len___17235);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[139]) return breakpoint(s, 7, 139, r0);
  case 7:
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___17238);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___17238;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 9; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[140]) return breakpoint(s, 9, 140, r0);
  case 9:
    r0 = (s.i___17238 + 1);
    s.i___17238 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[141]) return breakpoint(s, 10, 141, r0);
  case 10:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P110.info = {"start":8316,"length":317,"line":280,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P110_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P110, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___17235: undefined,
  i___17238: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayJoin__P101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___17263 = undefined;
    s.len___17264 = undefined;
    s.i___17267 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 45;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[45]) return breakpoint(s, 15, 45, r0);
  case 15:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 46;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[46]) return breakpoint(s, 16, 46, r0);
  case 16:
    s.arg1 = (",");
  case 3:
  case 4:
    s.lastBrkId = 47;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[47]) return breakpoint(s, 17, 47, r0);
  case 17:
    r0 = pxsim_String_.mkEmpty();
    s.r___17263 = (r0);
    s.lastBrkId = 48;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[48]) return breakpoint(s, 18, 48, r0);
  case 18:
    r0 = pxsim_Array__length(s.arg0);
    s.len___17264 = (r0);
    s.lastBrkId = 49;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[49]) return breakpoint(s, 19, 49, r0);
  case 19:
    s.i___17267 = (0);
    s.lastBrkId = 50;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[50]) return breakpoint(s, 20, 50, r0);
  case 20:
  case 5:
    s.lastBrkId = 51;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[51]) return breakpoint(s, 21, 51, r0);
  case 21:
    r0 = (s.i___17267 < s.len___17264);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 52;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[52]) return breakpoint(s, 22, 52, r0);
  case 22:
    r0 = (s.i___17267 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 53;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[53]) return breakpoint(s, 23, 53, r0);
  case 23:
    if ((s.r___17263) && (s.r___17263).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.r___17263);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___17263) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___17263 = (r0);
  case 8:
  case 9:
    s.lastBrkId = 54;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[54]) return breakpoint(s, 26, 54, r0);
  case 26:
    r0 = pxsim_Array__getAt(s.arg0, s.i___17267);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___17267);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___17267);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___17263) && (s.r___17263).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.r___17263);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___17263) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___17263 = (r0);
    s.lastBrkId = 55;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[55]) return breakpoint(s, 29, 55, r0);
  case 29:
    r0 = (s.i___17267 + 1);
    s.i___17267 = (r0);
    { step = 5; continue; }
  case 14:
    s.lastBrkId = 56;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[56]) return breakpoint(s, 30, 56, r0);
  case 30:
    r0 = s.r___17263;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P101.info = {"start":4133,"length":432,"line":157,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___17263: undefined,
  len___17264: undefined,
  i___17267: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_toggleStats__P4318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2875]) return breakpoint(s, 5, 2875, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2529);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    globals.stats___2529 = (r0);
    s.lastBrkId = 2876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2876]) return breakpoint(s, 6, 2876, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2529);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___387;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2877]) return breakpoint(s, 7, 2877, r0);
  case 7:
    s.tmp_3 = lambda_2_mk(s);
    s.tmp_3.argL = globals.control_EventContext_onStats___387;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3.arg0 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1260; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleStats__P4318.info = {"start":9642,"length":179,"line":300,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleStats","argumentNames":[]}

function scene_systemMenu_toggleStats__P4318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleStats__P4318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_brightnessDown__P4316(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2872]) return breakpoint(s, 1, 2872, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P4317_mk(s);
    s.tmp_2 = helpers_screenBrightness__P1736_mk(s);
    s.tmp_2.arg0 = globals.screen___1802;
    s.callLocIdx = 1255; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1256; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessDown__P4316.info = {"start":9198,"length":87,"line":289,"column":4,"endLine":291,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessDown","argumentNames":[]}

function scene_systemMenu_brightnessDown__P4316_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessDown__P4316, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_setScreenBrightness__P4317(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2873]) return breakpoint(s, 1, 2873, r0);
  case 1:
    s.tmp_0 = helpers_setScreenBrightness__P1735_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1257; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2874]) return breakpoint(s, 3, 2874, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P1829_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.tmp_1 = helpers_screenBrightness__P1736_mk(s);
    s.tmp_1.arg0 = globals.screen___1802;
    s.callLocIdx = 1258; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1259; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightness__P4317.info = {"start":9291,"length":345,"line":293,"column":4,"endLine":298,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightness","argumentNames":["b"]}

function scene_systemMenu_setScreenBrightness__P4317_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightness__P4317, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function helpers_setScreenBrightness__P1735(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[833]) return breakpoint(s, 1, 833, r0);
  case 1:
    s.tmp_0 = Math_clamp__P122_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = 100;
    r0 = (s.arg1 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 132; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg1 = (r0);
    s.lastBrkId = 834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[834]) return breakpoint(s, 3, 834, r0);
  case 3:
    globals.brightness___1724 = (s.arg1);
    s.lastBrkId = 835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[835]) return breakpoint(s, 4, 835, r0);
  case 4:
    r0 = pxsim_pxtcore.setScreenBrightness(globals.brightness___1724);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_setScreenBrightness__P1735.info = {"start":6243,"length":210,"line":211,"column":4,"endLine":215,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"setScreenBrightness","argumentNames":["img","b"]}

function helpers_setScreenBrightness__P1735_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_setScreenBrightness__P1735, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_brightnessUp__P4315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2871]) return breakpoint(s, 1, 2871, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P4317_mk(s);
    s.tmp_2 = helpers_screenBrightness__P1736_mk(s);
    s.tmp_2.arg0 = globals.screen___1802;
    s.callLocIdx = 1253; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1254; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessUp__P4315.info = {"start":9107,"length":85,"line":285,"column":4,"endLine":287,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessUp","argumentNames":[]}

function scene_systemMenu_brightnessUp__P4315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessUp__P4315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_volumeDown__P4314(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___17463 = undefined;
    s.remainder___17466 = undefined;
    s.newVolume___17469 = undefined;
    s.lastBrkId = 2867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2867]) return breakpoint(s, 3, 2867, r0);
  case 3:
    s.tmp_0 = music_volume__P1593_mk(s);
    s.callLocIdx = 1251; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.v___17463 = (r0);
    s.lastBrkId = 2868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2868]) return breakpoint(s, 5, 2868, r0);
  case 5:
    r0 = (s.v___17463 % 32);
    s.remainder___17466 = (r0);
    s.lastBrkId = 2869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2869]) return breakpoint(s, 6, 2869, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.remainder___17466);
    if (!r0) { step = 1; continue; }
    r0 = s.remainder___17466;
    { step = 2; continue; }
  case 1:
    r0 = 32;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.v___17463 - s.tmp_0);
    s.newVolume___17469 = (r0);
    s.lastBrkId = 2870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2870]) return breakpoint(s, 7, 2870, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_setVolume__P4312_mk(s);
    s.tmp_0.arg0 = s.newVolume___17469;
    s.callLocIdx = 1252; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeDown__P4314.info = {"start":8914,"length":187,"line":278,"column":4,"endLine":283,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeDown","argumentNames":[]}

function scene_systemMenu_volumeDown__P4314_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeDown__P4314, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___17463: undefined,
  remainder___17466: undefined,
  newVolume___17469: undefined,
} }





function scene_systemMenu_setVolume__P4312(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2860]) return breakpoint(s, 1, 2860, r0);
  case 1:
    s.tmp_0 = music_setVolume__P1592_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1246; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2861]) return breakpoint(s, 3, 2861, r0);
  case 3:
    s.tmp_0 = music_playTone__P1594_mk(s);
    s.tmp_0.arg0 = 440;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 1247; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2862]) return breakpoint(s, 5, 2862, r0);
  case 5:
    s.tmp_0 = settings_writeNumber__P1829_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1248; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setVolume__P4312.info = {"start":8565,"length":166,"line":265,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setVolume","argumentNames":["newVolume"]}

function scene_systemMenu_setVolume__P4312_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setVolume__P4312, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_playTone__P1594(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.id___17395 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[557]) return breakpoint(s, 5, 557, r0);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[558]) return breakpoint(s, 6, 558, r0);
  case 6:
    r0 = pxsim_pxtrt_stlocRef(s.arg1, 86400000);
  case 1:
  case 2:
    s.lastBrkId = 559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[559]) return breakpoint(s, 7, 559, r0);
  case 7:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 2000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[560]) return breakpoint(s, 8, 560, r0);
  case 8:
    s.tmp_2 = music_playNoteCore__P3776_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 77; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[561]) return breakpoint(s, 10, 561, r0);
  case 10:
    s.tmp_0 = pause__P402_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 78; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[562]) return breakpoint(s, 12, 562, r0);
  case 12:
    r0 = (globals.playToneID___3778 + 1);
    s.tmp_0 = r0;
    globals.playToneID___3778 = (r0);
    s.id___17395 = (s.tmp_0);
    s.lastBrkId = 563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[563]) return breakpoint(s, 13, 563, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(3, inline__P17401);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.id___17395);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone__P1594.info = {"start":2591,"length":831,"line":83,"column":4,"endLine":108,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playTone","argumentNames":["frequency","ms"]}

function music_playTone__P1594_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone__P1594, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  id___17395: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P17401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___17402 = undefined;
    s.now___17412 = undefined;
    s.d___17415 = undefined;
    s.t___17419 = undefined;
    s.lastBrkId = 564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[564]) return breakpoint(s, 7, 564, r0);
  case 7:
    r0 = pxsim.control.millis();
    s.pos___17402 = (r0);
    s.lastBrkId = 565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[565]) return breakpoint(s, 8, 565, r0);
  case 8:
  case 1:
    s.lastBrkId = 566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[566]) return breakpoint(s, 9, 566, r0);
  case 9:
    r0 = (s.caps[0] == globals.playToneID___3778);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[567]) return breakpoint(s, 10, 567, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.now___17412 = (r0);
    s.lastBrkId = 568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[568]) return breakpoint(s, 11, 568, r0);
  case 11:
    r0 = (s.pos___17402 - s.now___17412);
    s.d___17415 = (r0);
    s.lastBrkId = 569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[569]) return breakpoint(s, 12, 569, r0);
  case 12:
    s.tmp_0 = Math_min__P126_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 79; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.t___17419 = (r0);
    s.lastBrkId = 570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[570]) return breakpoint(s, 14, 570, r0);
  case 14:
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.t___17419);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[571]) return breakpoint(s, 15, 571, r0);
  case 15:
    r0 = (s.pos___17402 + s.t___17419);
    s.pos___17402 = (r0);
    s.lastBrkId = 572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[572]) return breakpoint(s, 16, 572, r0);
  case 16:
    s.tmp_0 = music_playNoteCore__P3776_mk(s);
    r0 = (s.d___17415 - 1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.caps[2];
    s.tmp_0.arg2 = s.t___17419;
    s.callLocIdx = 80; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[573]) return breakpoint(s, 18, 573, r0);
  case 18:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[574]) return breakpoint(s, 19, 574, r0);
  case 19:
    s.tmp_2 = pause__P402_mk(s);
    r0 = (s.d___17415 + s.t___17419);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 81; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[575]) return breakpoint(s, 21, 575, r0);
  case 21:
    s.tmp_0 = pause__P402_mk(s);
    r0 = (s.d___17415 + s.t___17419);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 100);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 82; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P17401.info = {"start":2890,"length":515,"line":92,"column":34,"endLine":106,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function inline__P17401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  pos___17402: undefined,
  now___17412: undefined,
  d___17415: undefined,
  t___17419: undefined,
} }





function music_playNoteCore__P3776(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___17449 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[554]) return breakpoint(s, 1, 554, r0);
  case 1:
    r0 = pxsim.control.createBuffer(12);
    s.buf___17449 = (r0);
    s.lastBrkId = 555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[555]) return breakpoint(s, 2, 555, r0);
  case 2:
    s.tmp_0 = music_addNote__P3783_mk(s);
    s.tmp_0.arg0 = s.buf___17449;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 255;
    s.tmp_0.arg4 = 255;
    s.tmp_0.arg5 = 3;
    s.tmp_0.arg6 = s.arg1;
    s.tmp_1 = music_volume__P1593_mk(s);
    s.callLocIdx = 75; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg7 = r0;
    s.tmp_0.arg8 = s.arg1;
    s.callLocIdx = 76; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[556]) return breakpoint(s, 5, 556, r0);
  case 5:
    r0 = pxsim.music.queuePlayInstructions(s.arg0, s.buf___17449);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playNoteCore__P3776.info = {"start":1877,"length":240,"line":66,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playNoteCore","argumentNames":["when","frequency","ms"]}

function music_playNoteCore__P3776_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playNoteCore__P3776, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___17449: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_volumeUp__P4313(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___17363 = undefined;
    s.remainder___17366 = undefined;
    s.newVolume___17369 = undefined;
    s.lastBrkId = 2863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2863]) return breakpoint(s, 1, 2863, r0);
  case 1:
    s.tmp_0 = music_volume__P1593_mk(s);
    s.callLocIdx = 1249; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.v___17363 = (r0);
    s.lastBrkId = 2864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2864]) return breakpoint(s, 3, 2864, r0);
  case 3:
    r0 = (s.v___17363 % 32);
    s.remainder___17366 = (r0);
    s.lastBrkId = 2865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2865]) return breakpoint(s, 4, 2865, r0);
  case 4:
    r0 = (s.v___17363 + 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.remainder___17366);
    s.newVolume___17369 = (r0);
    s.lastBrkId = 2866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2866]) return breakpoint(s, 5, 2866, r0);
  case 5:
    s.tmp_0 = scene_systemMenu_setVolume__P4312_mk(s);
    s.tmp_0.arg0 = s.newVolume___17369;
    s.callLocIdx = 1250; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeUp__P4313.info = {"start":8737,"length":171,"line":271,"column":4,"endLine":276,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeUp","argumentNames":[]}

function scene_systemMenu_volumeUp__P4313_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeUp__P4313, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___17363: undefined,
  remainder___17366: undefined,
  newVolume___17369: undefined,
} }





function game_consoleOverlay_isVisible__P2651(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2941]) return breakpoint(s, 1, 2941, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4354);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_isVisible__P2651.info = {"start":422,"length":68,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"isVisible","argumentNames":[]}

function game_consoleOverlay_isVisible__P2651_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_isVisible__P2651, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_closeMenu__P2629(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2883]) return breakpoint(s, 3, 2883, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.instance___4308);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2884]) return breakpoint(s, 4, 2884, r0);
  case 4:
    s.tmp_0 = scene_systemMenu_PauseMenu_dispose__P2628_mk(s);
    s.tmp_0.arg0 = globals.instance___4308;
    s.callLocIdx = 1265; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2885]) return breakpoint(s, 6, 2885, r0);
  case 6:
    globals.instance___4308 = (undefined);
    s.lastBrkId = 2886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2886]) return breakpoint(s, 7, 2886, r0);
  case 7:
    s.tmp_0 = controller__setUserEventsEnabled__P1954_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1266; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2887]) return breakpoint(s, 9, 2887, r0);
  case 9:
    s.tmp_0 = game_popScene__P2537_mk(s);
    s.callLocIdx = 1267; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_closeMenu__P2629.info = {"start":10129,"length":216,"line":320,"column":4,"endLine":327,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"closeMenu","argumentNames":[]}

function scene_systemMenu_closeMenu__P2629_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_closeMenu__P2629, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose__P2628(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    s.lastBrkId = 2850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2850]) return breakpoint(s, 3, 2850, r0);
  case 3:
    r0 = s.arg0.fields["options"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2851]) return breakpoint(s, 4, 2851, r0);
  case 4:
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = inline__P16840;
    s.callLocIdx = 1242; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2852]) return breakpoint(s, 6, 2852, r0);
  case 6:
    r0 = (s.arg0).fields["options"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose__P2628.info = {"start":7732,"length":165,"line":243,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_dispose__P2628_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose__P2628, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P16840(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = scene_systemMenu_MenuOption_dispose__P2621_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1241; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16840.info = {"start":7813,"length":16,"line":245,"column":37,"endLine":245,"endColumn":53,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["o"]}

function inline__P16840_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16840, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_dispose__P2621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2764]) return breakpoint(s, 3, 2764, r0);
  case 3:
    r0 = s.arg0.fields["card"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2765]) return breakpoint(s, 4, 2765, r0);
  case 4:
    s.tmp_1 = Sprite_destroy__P2087_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1161; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2766]) return breakpoint(s, 6, 2766, r0);
  case 6:
    s.tmp_0 = Sprite_destroy__P2087_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 1162; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2767]) return breakpoint(s, 8, 2767, r0);
  case 8:
    r0 = (s.arg0).fields["card"] = (undefined);
    s.lastBrkId = 2768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2768]) return breakpoint(s, 9, 2768, r0);
  case 9:
    r0 = (s.arg0).fields["icon"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_dispose__P2621.info = {"start":1812,"length":216,"line":77,"column":8,"endLine":84,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_MenuOption_dispose__P2621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_dispose__P2621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller__setUserEventsEnabled__P1954(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1162]) return breakpoint(s, 1, 1162, r0);
  case 1:
    globals._userEventsEnabled___3885 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__setUserEventsEnabled__P1954.info = {"start":19246,"length":101,"line":587,"column":4,"endLine":589,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_setUserEventsEnabled","argumentNames":["enabled"]}

function controller__setUserEventsEnabled__P1954_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__setUserEventsEnabled__P1954, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_constructor__P2615(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    r0 = (s.arg0).fields["iconImage"] = (s.arg1);
    r0 = (s.arg0).fields["getText"] = (s.arg2);
    r0 = (s.arg0).fields["action"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_constructor__P2615.info = {"start":786,"length":108,"line":38,"column":8,"endLine":39,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","iconImage","getText","action"]}

function scene_systemMenu_MenuOption_constructor__P2615_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_constructor__P2615, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function helpers_screenBrightness__P1736(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[836]) return breakpoint(s, 1, 836, r0);
  case 1:
    r0 = globals.brightness___1724;
    return leave(s, r0)
  default: oops()
} } }
helpers_screenBrightness__P1736.info = {"start":6459,"length":98,"line":217,"column":4,"endLine":219,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"screenBrightness","argumentNames":["img"]}

function helpers_screenBrightness__P1736_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_screenBrightness__P1736, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function helpers_arrayConcat__P111(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.out___17083 = undefined;
    s.value___17086 = undefined;
    s.unnamed2856___U2 = undefined;
    s.unnamed2857___U3 = undefined;
    s.value___17093 = undefined;
    s.unnamed2858___U5 = undefined;
    s.unnamed2859___U6 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[142]) return breakpoint(s, 5, 142, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.out___17083 = (r0);
    s.lastBrkId = 143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[143]) return breakpoint(s, 6, 143, r0);
  case 6:
    s.value___17086 = (undefined);
    s.unnamed2856___U2 = (s.arg0);
    s.unnamed2857___U3 = (0);
    s.lastBrkId = 144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[144]) return breakpoint(s, 7, 144, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed2857___U3;
    r0 = pxsim_Array__length(s.unnamed2856___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2856___U2, s.unnamed2857___U3);
    s.value___17086 = (r0);
    s.lastBrkId = 145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[145]) return breakpoint(s, 8, 145, r0);
  case 8:
    r0 = pxsim_Array__push(s.out___17083, s.value___17086);
    r0 = (s.unnamed2857___U3 + 1);
    s.unnamed2857___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed2856___U2 = (undefined);
    s.lastBrkId = 146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[146]) return breakpoint(s, 9, 146, r0);
  case 9:
    s.value___17093 = (undefined);
    s.unnamed2858___U5 = (s.arg1);
    s.unnamed2859___U6 = (0);
    s.lastBrkId = 147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[147]) return breakpoint(s, 10, 147, r0);
  case 10:
  case 3:
    s.tmp_0 = r0 = s.unnamed2859___U6;
    r0 = pxsim_Array__length(s.unnamed2858___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2858___U5, s.unnamed2859___U6);
    s.value___17093 = (r0);
    s.lastBrkId = 148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[148]) return breakpoint(s, 11, 148, r0);
  case 11:
    r0 = pxsim_Array__push(s.out___17083, s.value___17093);
    r0 = (s.unnamed2859___U6 + 1);
    s.unnamed2859___U6 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed2858___U5 = (undefined);
    s.lastBrkId = 149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[149]) return breakpoint(s, 12, 149, r0);
  case 12:
    r0 = s.out___17083;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayConcat__P111.info = {"start":8639,"length":264,"line":288,"column":4,"endLine":297,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayConcat","argumentNames":["arr","otherArr"]}

function helpers_arrayConcat__P111_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayConcat__P111, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  out___17083: undefined,
  value___17086: undefined,
  unnamed2856___U2: undefined,
  unnamed2857___U3: undefined,
  value___17093: undefined,
  unnamed2858___U5: undefined,
  unnamed2859___U6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_show__P2624(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___16396 = undefined;
    s.i___16397 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    s.lastBrkId = 2784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2784]) return breakpoint(s, 3, 2784, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = if_generator_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "generator"), 1);
      s.callLocIdx = 1174; s.pc = 4; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["generator"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["generator"], 1); s.callLocIdx = 1174; s.pc = 4; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1174; s.pc = 4; return s.tmp_2;; }
     else { s.callLocIdx = 1174; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["options"] = (s.tmp_1);
    s.lastBrkId = 2785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2785]) return breakpoint(s, 5, 2785, r0);
  case 5:
    r0 = (s.arg0).fields["selection"] = (0);
    s.lastBrkId = 2786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2786]) return breakpoint(s, 6, 2786, r0);
  case 6:
    s.i___16397 = (0);
    s.lastBrkId = 2787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2787]) return breakpoint(s, 7, 2787, r0);
  case 7:
  case 1:
    s.lastBrkId = 2788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2788]) return breakpoint(s, 8, 2788, r0);
  case 8:
    s.tmp_1 = r0 = s.i___16397;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2789]) return breakpoint(s, 9, 2789, r0);
  case 9:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___16397);
    s.current___16396 = (r0);
    s.lastBrkId = 2790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2790]) return breakpoint(s, 10, 2790, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_MenuOption_show__P2616_mk(s);
    s.tmp_0.arg0 = s.current___16396;
    s.callLocIdx = 1175; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2791]) return breakpoint(s, 12, 2791, r0);
  case 12:
    s.tmp_0 = scene_systemMenu_MenuOption_setTheme__P2619_mk(s);
    s.tmp_0.arg0 = s.current___16396;
    r0 = s.arg0.fields["theme"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1176; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2792]) return breakpoint(s, 14, 2792, r0);
  case 14:
    s.tmp_0 = scene_systemMenu_MenuOption_position__P2617_mk(s);
    s.tmp_0.arg0 = s.current___16396;
    s.tmp_2 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "padding");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["padding"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["padding"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1177; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = r0 = s.i___16397;
    s.tmp_7 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardsPerRow");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1178; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 % s.tmp_6);
    s.tmp_4 = r0;
    s.tmp_10 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "cardWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["cardWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["cardWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1179; s.pc = 18; return s.tmp_10; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_12.arg0 = r0;
    if (!s.tmp_12.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "cardSpacing");
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_12.fn == null) { s.retval = s.tmp_12.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_12.fn.isGetter) { s.retval = bind(s.tmp_12); }
     else { s.callLocIdx = 1180; s.pc = 19; return s.tmp_12; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_8 = r0;
    r0 = (s.tmp_4 * s.tmp_8);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.tmp_14 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_14.arg0 = r0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "cardsTop");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["cardsTop"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["cardsTop"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 1181; s.pc = 20; return s.tmp_14; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_13 = r0;
    s.tmp_17 = r0 = s.i___16397;
    s.tmp_19 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_19.arg0 = r0;
    if (!s.tmp_19.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_19.arg0, "cardsPerRow");
    } else {
      s.tmp_19.fn = s.tmp_19.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_19.fn == null) { s.retval = s.tmp_19.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_19.fn.isGetter) { s.retval = bind(s.tmp_19); }
     else { s.callLocIdx = 1182; s.pc = 21; return s.tmp_19; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_17, s.tmp_18);
    s.tmp_16 = r0;
    s.tmp_22 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_22.arg0 = r0;
    if (!s.tmp_22.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_22.arg0, "cardWidth");
    } else {
      s.tmp_22.fn = s.tmp_22.arg0.vtable.iface["cardWidth"];
      if (s.tmp_22.fn == null) { s.retval = s.tmp_22.arg0.fields["cardWidth"]; }
      else if (!s.tmp_22.fn.isGetter) { s.retval = bind(s.tmp_22); }
     else { s.callLocIdx = 1183; s.pc = 22; return s.tmp_22; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_21 = r0;
    s.tmp_24 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_24.arg0 = r0;
    if (!s.tmp_24.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_24.arg0, "cardSpacing");
    } else {
      s.tmp_24.fn = s.tmp_24.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_24.fn == null) { s.retval = s.tmp_24.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_24.fn.isGetter) { s.retval = bind(s.tmp_24); }
     else { s.callLocIdx = 1184; s.pc = 23; return s.tmp_24; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_23 = r0;
    r0 = (s.tmp_21 + s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_16 * s.tmp_20);
    s.tmp_15 = r0;
    r0 = (s.tmp_13 + s.tmp_15);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1185; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2793]) return breakpoint(s, 24, 2793, r0);
  case 24:
    r0 = (s.i___16397 + 1);
    s.i___16397 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2794]) return breakpoint(s, 25, 2794, r0);
  case 25:
    s.tmp_0 = controller__setUserEventsEnabled__P1954_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1186; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2795]) return breakpoint(s, 27, 2795, r0);
  case 27:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16460);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_1.arg0 = globals.A___1877;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1188; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 2799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2799]) return breakpoint(s, 29, 2799, r0);
  case 29:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16480);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_1.arg0 = globals.A___1877;
    s.tmp_1.arg1 = 2052;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1190; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 2804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2804]) return breakpoint(s, 31, 2804, r0);
  case 31:
    s.tmp_0 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_0.arg0 = globals.B___1878;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = inline__P16509;
    s.callLocIdx = 1192; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2806]) return breakpoint(s, 33, 2806, r0);
  case 33:
    s.tmp_0 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_0.arg0 = globals.menu___1883;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = inline__P16514;
    s.callLocIdx = 1194; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.lastBrkId = 2808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2808]) return breakpoint(s, 35, 2808, r0);
  case 35:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16519);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_1.arg0 = globals.up___1880;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1198; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 2810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2810]) return breakpoint(s, 37, 2810, r0);
  case 37:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16531);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_1.arg0 = globals.left___1879;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1201; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 2812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2812]) return breakpoint(s, 39, 2812, r0);
  case 39:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16540);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_1.arg0 = globals.down___1882;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1205; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.lastBrkId = 2814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2814]) return breakpoint(s, 41, 2814, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16556);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1910_mk(s);
    s.tmp_1.arg0 = globals.right___1881;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1208; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 2816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2816]) return breakpoint(s, 43, 2816, r0);
  case 43:
    r0 = pxsim_pxtcore_mkAction(1, inline__P16568);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onShade__P2547_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1211; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 2819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2819]) return breakpoint(s, 45, 2819, r0);
  case 45:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2626_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1212; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show__P2624.info = {"start":3296,"length":2241,"line":123,"column":8,"endLine":181,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_show__P2624_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show__P2624, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  current___16396: undefined,
  i___16397: undefined,
  arg0: undefined,
} }





function inline__P16460(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2796]) return breakpoint(s, 6, 2796, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2797]) return breakpoint(s, 7, 2797, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2798]) return breakpoint(s, 8, 2798, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P2620_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 1;
    s.callLocIdx = 1187; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16460.info = {"start":4025,"length":170,"line":140,"column":50,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16460_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16460, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function inline__P16480(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2800]) return breakpoint(s, 6, 2800, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2801]) return breakpoint(s, 7, 2801, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2802]) return breakpoint(s, 8, 2802, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P2620_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 0;
    s.callLocIdx = 1189; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 2803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2803]) return breakpoint(s, 10, 2803, r0);
  case 10:
    r0 = s.caps[0].fields["options"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    r0 = r0.fields["action"];
    s.tmp_0 = r0;
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16480.info = {"start":4247,"length":247,"line":145,"column":48,"endLine":149,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16480_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16480, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function inline__P16509(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2805]) return breakpoint(s, 1, 2805, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P2629_mk(s);
    s.callLocIdx = 1191; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16509.info = {"start":4548,"length":50,"line":151,"column":50,"endLine":153,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16509_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16509, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P16514(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2807]) return breakpoint(s, 1, 2807, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P2629_mk(s);
    s.callLocIdx = 1193; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16514.info = {"start":4655,"length":50,"line":155,"column":53,"endLine":157,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16514_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16514, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P16519(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2809]) return breakpoint(s, 1, 2809, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2626_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P125_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    s.tmp_4 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "cardsPerRow");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1195; s.pc = 4; return s.tmp_4; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1196; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1197; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16519.info = {"start":4760,"length":110,"line":159,"column":51,"endLine":161,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16519_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16519, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function inline__P16531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2811]) return breakpoint(s, 1, 2811, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2626_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P125_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1199; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1200; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16531.info = {"start":4927,"length":89,"line":163,"column":53,"endLine":165,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function inline__P16540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2813]) return breakpoint(s, 1, 2813, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2626_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P126_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    s.tmp_6 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "cardsPerRow");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1202; s.pc = 4; return s.tmp_6; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1203; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1204; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16540.info = {"start":5073,"length":132,"line":167,"column":53,"endLine":169,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function inline__P16556(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2815]) return breakpoint(s, 1, 2815, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2626_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P126_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1206; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1207; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16556.info = {"start":5263,"length":111,"line":171,"column":54,"endLine":173,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16556_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16556, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function inline__P16568(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2817]) return breakpoint(s, 1, 2817, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_onUpdate__P2625_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1209; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2818]) return breakpoint(s, 3, 2818, r0);
  case 3:
    s.tmp_0 = scene_systemMenu_PauseMenu_drawText__P2627_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1210; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P16568.info = {"start":5403,"length":87,"line":175,"column":25,"endLine":178,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function inline__P16568_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P16568, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_drawText__P2627(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    s.lastBrkId = 2843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2843]) return breakpoint(s, 4, 2843, r0);
  case 4:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2844]) return breakpoint(s, 5, 2844, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2845]) return breakpoint(s, 6, 2845, r0);
  case 6:
    s.tmp_3 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_3.arg0 = globals.screen___1802;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_3.arg3 = r0;
    s.tmp_5 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardsTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardsTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardsTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1223; s.pc = 8; return s.tmp_5; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_3.arg4 = r0;
    s.tmp_3.arg5 = 15;
    s.callLocIdx = 1224; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2846]) return breakpoint(s, 9, 2846, r0);
  case 9:
    s.tmp_0 = helpers_imagePrintCenter__P1759_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_1 = if_headerText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "headerText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["headerText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["headerText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1225; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 1;
    s.tmp_2 = if_headerFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "headerFont");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["headerFont"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["headerFont"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1226; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1227; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2847]) return breakpoint(s, 13, 2847, r0);
  case 13:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_0.arg1 = 0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1228; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_0.arg3 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_4 = r0;
    s.tmp_6 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoTop");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoTop"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoTop"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1229; s.pc = 16; return s.tmp_6; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 6);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 15;
    s.callLocIdx = 1230; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2848]) return breakpoint(s, 17, 2848, r0);
  case 17:
    s.tmp_0 = helpers_imageFillRect__P1728_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_1 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "padding");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["padding"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["padding"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1231; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1232; s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_3 = r0;
    s.tmp_6 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "padding");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["padding"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["padding"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1233; s.pc = 21; return s.tmp_6; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_9 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "infoFont");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["infoFont"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["infoFont"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 1234; s.pc = 23; return s.tmp_9; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1235; s.pc = 22; return s.tmp_8; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 1);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1236; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2849]) return breakpoint(s, 24, 2849, r0);
  case 24:
    s.tmp_0 = helpers_imagePrintCenter__P1759_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_1 = if_getText_1_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "getText"), 1);
      s.callLocIdx = 1237; s.pc = 26; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["getText"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["getText"], 1); s.callLocIdx = 1237; s.pc = 26; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 1237; s.pc = 26; return s.tmp_1;; }
     else { s.callLocIdx = 1237; s.pc = 26; return s.tmp_1; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_5 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "infoTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["infoTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["infoTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1238; s.pc = 27; return s.tmp_5; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 15;
    s.tmp_6 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoFont");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoFont"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoFont"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1239; s.pc = 28; return s.tmp_6; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1240; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_drawText__P2627.info = {"start":6927,"length":795,"line":224,"column":8,"endLine":241,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"drawText","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_drawText__P2627_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_drawText__P2627, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_setSelection__P2626(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    s.lastBrkId = 2835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2835]) return breakpoint(s, 10, 2835, r0);
  case 10:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2836]) return breakpoint(s, 11, 2836, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2837]) return breakpoint(s, 12, 2837, r0);
  case 12:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2838]) return breakpoint(s, 13, 2838, r0);
  case 13:
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P2620_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 2;
    s.callLocIdx = 1220; s.pc = 14; return s.tmp_6;
  case 14:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 2839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2839]) return breakpoint(s, 15, 2839, r0);
  case 15:
    r0 = (s.arg0).fields["selection"] = (s.arg1);
    s.lastBrkId = 2840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2840]) return breakpoint(s, 16, 2840, r0);
  case 16:
    r0 = s.arg0.fields["options"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2841]) return breakpoint(s, 17, 2841, r0);
  case 17:
    s.tmp_4 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_4.arg0 = globals.A___1877;
    if (!checkSubtype(s.tmp_4.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.isPressed;
    s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P2620_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 1221; s.pc = 19; return s.tmp_6;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2842]) return breakpoint(s, 20, 2842, r0);
  case 20:
    s.tmp_0 = scene_systemMenu_PauseMenu_updateScrollTarget__P4311_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1222; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_setSelection__P2626.info = {"start":6436,"length":481,"line":208,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setSelection","argumentNames":["this","selection"]}

function scene_systemMenu_PauseMenu_setSelection__P2626_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_setSelection__P2626, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_updateScrollTarget__P4311(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.row___16786 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    s.lastBrkId = 2853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2853]) return breakpoint(s, 8, 2853, r0);
  case 8:
    r0 = s.arg0.fields["selection"];
    s.tmp_0 = r0;
    s.tmp_2 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "cardsPerRow");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1243; s.pc = 9; return s.tmp_2; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.row___16786 = (r0);
    s.lastBrkId = 2854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2854]) return breakpoint(s, 10, 2854, r0);
  case 10:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_1 = r0;
    r0 = (s.row___16786 === s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.row___16786 - 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 === s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2855]) return breakpoint(s, 11, 2855, r0);
  case 11:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2856]) return breakpoint(s, 12, 2856, r0);
  case 12:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_6 = r0;
    r0 = (s.row___16786 > s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2857]) return breakpoint(s, 13, 2857, r0);
  case 13:
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["scrollRow"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["scrollRow"] = (s.tmp_8);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2858]) return breakpoint(s, 14, 2858, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["scrollRow"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollRow"] = (s.tmp_1);
  case 6:
    s.lastBrkId = 2859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2859]) return breakpoint(s, 15, 2859, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_2 = r0;
    s.tmp_5 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardSpacing");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1244; s.pc = 16; return s.tmp_5; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardWidth");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardWidth"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardWidth"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1245; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollTarget"] = (s.tmp_1);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_updateScrollTarget__P4311.info = {"start":7907,"length":458,"line":250,"column":8,"endLine":260,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateScrollTarget","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_updateScrollTarget__P4311_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_updateScrollTarget__P4311, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  row___16786: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_onUpdate__P2625(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___16646 = undefined;
    s.i___16650 = undefined;
    s.dt___16679 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    s.lastBrkId = 2820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2820]) return breakpoint(s, 10, 2820, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 250);
    s.t___16646 = (r0);
    s.lastBrkId = 2821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2821]) return breakpoint(s, 11, 2821, r0);
  case 11:
    s.i___16650 = (0);
    s.lastBrkId = 2822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2822]) return breakpoint(s, 12, 2822, r0);
  case 12:
  case 1:
    s.lastBrkId = 2823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2823]) return breakpoint(s, 13, 2823, r0);
  case 13:
    s.tmp_1 = r0 = s.i___16650;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2824]) return breakpoint(s, 14, 2824, r0);
  case 14:
    s.tmp_4 = scene_systemMenu_MenuOption_setOffset__P2618_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___16650);
    s.tmp_4.arg0 = r0;
    s.tmp_8 = r0 = s.t___16646;
    s.tmp_11 = r0 = s.i___16650;
    s.tmp_13 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_13.arg0 = r0;
    if (!s.tmp_13.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_13.arg0, "cardsPerRow");
    } else {
      s.tmp_13.fn = s.tmp_13.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_13.fn == null) { s.retval = s.tmp_13.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_13.fn.isGetter) { s.retval = bind(s.tmp_13); }
     else { s.callLocIdx = 1213; s.pc = 16; return s.tmp_13; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_11 % s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 * 1.5707963267948966);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 - s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.sin(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (2 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1214; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2825]) return breakpoint(s, 17, 2825, r0);
  case 17:
    r0 = (s.i___16650 + 1);
    s.i___16650 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2826]) return breakpoint(s, 18, 2826, r0);
  case 18:
    s.tmp_0 = control_EventContext_deltaTime__P389_mk(s);
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1215; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1216; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.dt___16679 = (r0);
    s.lastBrkId = 2827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2827]) return breakpoint(s, 21, 2827, r0);
  case 21:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2828]) return breakpoint(s, 22, 2828, r0);
  case 22:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___16679 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2829]) return breakpoint(s, 23, 2829, r0);
  case 23:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2830]) return breakpoint(s, 24, 2830, r0);
  case 24:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___16679 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 2831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2831]) return breakpoint(s, 25, 2831, r0);
  case 25:
    { step = 9; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2832]) return breakpoint(s, 26, 2832, r0);
  case 26:
    s.tmp_2 = Math_abs__P123_mk(s);
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1217; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2833]) return breakpoint(s, 28, 2833, r0);
  case 28:
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_5 = r0;
    r0 = (s.arg0).fields["scrollOffset"] = (s.tmp_5);
  case 7:
  case 8:
    s.lastBrkId = 2834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2834]) return breakpoint(s, 29, 2834, r0);
  case 29:
    s.tmp_0 = scene_Camera_offsetY__P2368_mk(s);
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1218; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1219; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_onUpdate__P2625.info = {"start":5547,"length":879,"line":183,"column":8,"endLine":206,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"onUpdate","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_onUpdate__P2625_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_onUpdate__P2625, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  t___16646: undefined,
  i___16650: undefined,
  dt___16679: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setOffset__P2618(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2756]) return breakpoint(s, 1, 2756, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2067_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["top"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1156; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2757]) return breakpoint(s, 3, 2757, r0);
  case 3:
    s.tmp_0 = Sprite_y__P2028_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2027_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1157; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1158; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setOffset__P2618.info = {"start":1411,"length":123,"line":61,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setOffset","argumentNames":["this","offset"]}

function scene_systemMenu_MenuOption_setOffset__P2618_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setOffset__P2618, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_setState__P2620(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2760]) return breakpoint(s, 4, 2760, r0);
  case 4:
    r0 = s.arg0.fields["state"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2761]) return breakpoint(s, 5, 2761, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2762]) return breakpoint(s, 6, 2762, r0);
  case 6:
    r0 = (s.arg0).fields["state"] = (s.arg1);
    s.lastBrkId = 2763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2763]) return breakpoint(s, 7, 2763, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P4310_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1160; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setState__P2620.info = {"start":1655,"length":147,"line":71,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setState","argumentNames":["this","state"]}

function scene_systemMenu_MenuOption_setState__P2620_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setState__P2620, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_updateCard__P4310(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2769]) return breakpoint(s, 8, 2769, r0);
  case 8:
    r0 = s.arg0.fields["theme"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2770]) return breakpoint(s, 9, 2770, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2771]) return breakpoint(s, 10, 2771, r0);
  case 10:
    r0 = s.arg0.fields["state"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2772]) return breakpoint(s, 11, 2772, r0);
  case 11:
    s.tmp_4 = Sprite_setImage__P2056_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_4.arg0 = r0;
    s.tmp_5 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "basicCard");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["basicCard"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["basicCard"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1163; s.pc = 13; return s.tmp_5; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1164; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2773]) return breakpoint(s, 14, 2773, r0);
  case 14:
    { step = 6; continue; }
  case 4:
    s.lastBrkId = 2774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2774]) return breakpoint(s, 15, 2774, r0);
  case 15:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_selectedCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "selectedCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["selectedCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["selectedCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1165; s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1166; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2775]) return breakpoint(s, 18, 2775, r0);
  case 18:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2776]) return breakpoint(s, 19, 2776, r0);
  case 19:
    s.tmp_0 = Sprite_setImage__P2056_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_activeCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "activeCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["activeCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["activeCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1167; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1168; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2777]) return breakpoint(s, 22, 2777, r0);
  case 22:
  case 6:
    s.lastBrkId = 2778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2778]) return breakpoint(s, 23, 2778, r0);
  case 23:
    s.tmp_0 = Sprite_x__P2026_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2025_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1169; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1170; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2779]) return breakpoint(s, 26, 2779, r0);
  case 26:
    s.tmp_0 = Sprite_y__P2028_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2027_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1171; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1172; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_updateCard__P4310.info = {"start":2038,"length":497,"line":86,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateCard","argumentNames":["this"]}

function scene_systemMenu_MenuOption_updateCard__P4310_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_updateCard__P4310, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setTheme__P2619(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2758]) return breakpoint(s, 1, 2758, r0);
  case 1:
    r0 = (s.arg0).fields["theme"] = (s.arg1);
    s.lastBrkId = 2759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2759]) return breakpoint(s, 2, 2759, r0);
  case 2:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P4310_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1159; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setTheme__P2619.info = {"start":1544,"length":101,"line":66,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setTheme","argumentNames":["this","theme"]}

function scene_systemMenu_MenuOption_setTheme__P2619_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setTheme__P2619, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_position__P2617(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2751]) return breakpoint(s, 1, 2751, r0);
  case 1:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 2752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2752]) return breakpoint(s, 2, 2752, r0);
  case 2:
    s.tmp_0 = Sprite_left__P2063_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1150; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 2753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2753]) return breakpoint(s, 4, 2753, r0);
  case 4:
    s.tmp_0 = Sprite_top__P2067_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1151; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2754]) return breakpoint(s, 6, 2754, r0);
  case 6:
    s.tmp_0 = Sprite_x__P2026_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2025_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1152; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1153; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2755]) return breakpoint(s, 9, 2755, r0);
  case 9:
    s.tmp_0 = Sprite_y__P2028_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2027_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1154; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1155; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_position__P2617.info = {"start":1178,"length":223,"line":51,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"position","argumentNames":["this","left","top"]}

function scene_systemMenu_MenuOption_position__P2617_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_position__P2617, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_MenuOption_show__P2616(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2614_VT)) failedCast(r0);
    s.lastBrkId = 2746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2746]) return breakpoint(s, 3, 2746, r0);
  case 3:
    r0 = s.arg0.fields["theme"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "basicCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["basicCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["basicCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1145; s.pc = 4; return s.tmp_1; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = globals.CARD_NORMAL___2638;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = sprites_create__P1974_mk(s);
    s.tmp_5.arg0 = s.tmp_2;
    s.tmp_5.arg1 = undefined;
    s.callLocIdx = 1146; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["card"] = (s.tmp_4);
    s.lastBrkId = 2747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2747]) return breakpoint(s, 6, 2747, r0);
  case 6:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1147; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2748]) return breakpoint(s, 8, 2748, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P1974_mk(s);
    r0 = s.arg0.fields["iconImage"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1148; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["icon"] = (s.tmp_1);
    s.lastBrkId = 2749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2749]) return breakpoint(s, 10, 2749, r0);
  case 10:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 2;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1149; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2750]) return breakpoint(s, 12, 2750, r0);
  case 12:
    r0 = (s.arg0).fields["state"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_show__P2616.info = {"start":904,"length":264,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_MenuOption_show__P2616_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_show__P2616, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function game_onShade__P2547(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2723]) return breakpoint(s, 4, 2723, r0);
  case 4:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1138; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2724]) return breakpoint(s, 6, 2724, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2725]) return breakpoint(s, 7, 2725, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2726]) return breakpoint(s, 8, 2726, r0);
  case 8:
    s.tmp_2 = scene_createRenderable__P2383_mk(s);
    s.tmp_2.arg0 = 80;
    s.tmp_2.arg1 = s.arg0;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1139; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onShade__P2547.info = {"start":9934,"length":145,"line":320,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onShade","argumentNames":["a"]}

function game_onShade__P2547_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onShade__P2547, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_constructor__P2623(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2622_VT)) failedCast(r0);
    r0 = (s.arg0).fields["generator"] = (s.arg1);
    s.lastBrkId = 2780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2780]) return breakpoint(s, 3, 2780, r0);
  case 3:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = scene_systemMenu_buildMenuTheme__P2631_mk(s);
    r0 = pxsim_ImageMethods.width(globals.CARD_NORMAL___2638);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.tmp_1.arg3 = undefined;
    s.callLocIdx = 1173; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["theme"] = (s.tmp_2);
    s.lastBrkId = 2781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2781]) return breakpoint(s, 5, 2781, r0);
  case 5:
    r0 = (s.arg0).fields["scrollRow"] = (0);
    s.lastBrkId = 2782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2782]) return breakpoint(s, 6, 2782, r0);
  case 6:
    r0 = (s.arg0).fields["scrollOffset"] = (0);
    s.lastBrkId = 2783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2783]) return breakpoint(s, 7, 2783, r0);
  case 7:
    r0 = (s.arg0).fields["scrollTarget"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_constructor__P2623.info = {"start":3029,"length":257,"line":116,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","generator","theme"]}

function scene_systemMenu_PauseMenu_constructor__P2623_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_constructor__P2623, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_buildMenuTheme__P2631(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cardsPerRow___17498 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2902]) return breakpoint(s, 5, 2902, r0);
  case 5:
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_0 = r0;
    r0 = (s.arg0 + s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.cardsPerRow___17498 = (r0);
    s.lastBrkId = 2903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2903]) return breakpoint(s, 6, 2903, r0);
  case 6:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.font8___1745;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    s.lastBrkId = 2904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2904]) return breakpoint(s, 7, 2904, r0);
  case 7:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = image_doubledFont__P1748_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 1283; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 2905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2905]) return breakpoint(s, 9, 2905, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardSpacing", s.arg1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardWidth", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsPerRow", s.cardsPerRow___17498);
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_3 = r0;
    r0 = (s.cardsPerRow___17498 * s.arg0);
    s.tmp_5 = r0;
    r0 = (s.cardsPerRow___17498 - 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 * s.arg1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "padding", s.tmp_1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoFont", s.arg2);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerFont", s.arg3);
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.arg3;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 1284; s.pc = 10; return s.tmp_11; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 2);
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + s.arg1);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsTop", s.tmp_8);
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_14 = r0;
    s.tmp_16 = if_charHeight_1_mk(s);
    s.tmp_16.arg0 = s.arg2;
    if (!s.tmp_16.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_16.arg0, "charHeight");
    } else {
      s.tmp_16.fn = s.tmp_16.arg0.vtable.iface["charHeight"];
      if (s.tmp_16.fn == null) { s.retval = s.tmp_16.arg0.fields["charHeight"]; }
      else if (!s.tmp_16.fn.isGetter) { s.retval = bind(s.tmp_16); }
     else { s.callLocIdx = 1285; s.pc = 11; return s.tmp_16; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_14 - s.tmp_15);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 - 2);
    s.tmp_12 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoTop", s.tmp_12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerText", "PAUSED");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "selectedCard", globals.CARD_SELECTED___2639);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "activeCard", globals.CARD_ACTIVE___2640);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "basicCard", globals.CARD_NORMAL___2638);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildMenuTheme__P2631.info = {"start":11654,"length":906,"line":356,"column":4,"endLine":375,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildMenuTheme","argumentNames":["cardWidth","cardSpacing","infoFont","headerFont"]}

function scene_systemMenu_buildMenuTheme__P2631_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildMenuTheme__P2631, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  cardsPerRow___17498: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function image_doubledFont__P1748(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[846]) return breakpoint(s, 1, 846, r0);
  case 1:
    s.tmp_0 = image_scaledFont__P1749_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 133; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
image_doubledFont__P1748.info = {"start":12008,"length":82,"line":146,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"doubledFont","argumentNames":["f"]}

function image_doubledFont__P1748_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_doubledFont__P1748, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function image_scaledFont__P1749(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[847]) return breakpoint(s, 6, 847, r0);
  case 6:
    r0 = (s.arg1 | 0);
    s.arg1 = (r0);
    s.lastBrkId = 848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[848]) return breakpoint(s, 7, 848, r0);
  case 7:
    r0 = (s.arg1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[849]) return breakpoint(s, 8, 849, r0);
  case 8:
    r0 = s.arg0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[850]) return breakpoint(s, 9, 850, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 134; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charWidth", s.tmp_2);
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.arg0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 135; s.pc = 11; return s.tmp_7; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charHeight", s.tmp_5);
    s.tmp_9 = if_data_1_mk(s);
    s.tmp_9.arg0 = s.arg0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "data");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["data"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["data"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 136; s.pc = 12; return s.tmp_9; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "data", s.tmp_8);
    s.tmp_11 = if_multiplier_1_mk(s);
    s.tmp_11.arg0 = s.arg0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "multiplier");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["multiplier"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["multiplier"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 137; s.pc = 13; return s.tmp_11; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 3; continue; }
    s.tmp_12 = r0 = s.arg1;
    s.tmp_14 = if_multiplier_1_mk(s);
    s.tmp_14.arg0 = s.arg0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "multiplier");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["multiplier"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["multiplier"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 138; s.pc = 14; return s.tmp_14; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 * s.tmp_13);
    { step = 4; continue; }
  case 3:
    r0 = s.arg1;
  case 4:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "multiplier", s.tmp_15);
    r0 = s.tmp_1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_scaledFont__P1749.info = {"start":12096,"length":331,"line":150,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"scaledFont","argumentNames":["f","size"]}

function image_scaledFont__P1749_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_scaledFont__P1749, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_initScreen__P4323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.brightness___17578 = undefined;
    s.lastBrkId = 2918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2918]) return breakpoint(s, 3, 2918, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P1833_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.callLocIdx = 1292; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.brightness___17578 = (r0);
    s.lastBrkId = 2919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2919]) return breakpoint(s, 5, 2919, r0);
  case 5:
    r0 = (s.brightness___17578 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2920]) return breakpoint(s, 6, 2920, r0);
  case 6:
    s.tmp_1 = helpers_setScreenBrightness__P1735_mk(s);
    s.tmp_1.arg0 = globals.screen___1802;
    s.tmp_1.arg1 = s.brightness___17578;
    s.callLocIdx = 1293; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initScreen__P4323.info = {"start":13388,"length":175,"line":405,"column":4,"endLine":409,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initScreen","argumentNames":[]}

function scene_systemMenu_initScreen__P4323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initScreen__P4323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  brightness___17578: undefined,
} }





function scene_systemMenu_initVolume__P4322(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.vol___17588 = undefined;
    s.lastBrkId = 2915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2915]) return breakpoint(s, 3, 2915, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P1833_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.callLocIdx = 1290; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.vol___17588 = (r0);
    s.lastBrkId = 2916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2916]) return breakpoint(s, 5, 2916, r0);
  case 5:
    r0 = (s.vol___17588 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2917]) return breakpoint(s, 6, 2917, r0);
  case 6:
    s.tmp_1 = music_setVolume__P1592_mk(s);
    s.tmp_1.arg0 = s.vol___17588;
    s.callLocIdx = 1291; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initVolume__P4322.info = {"start":13238,"length":144,"line":399,"column":4,"endLine":403,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initVolume","argumentNames":[]}

function scene_systemMenu_initVolume__P4322_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initVolume__P4322, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  vol___17588: undefined,
} }





function game_currentScene__P2532(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2639]) return breakpoint(s, 1, 2639, r0);
  case 1:
    s.tmp_0 = game_init__P4064_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1092; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2640]) return breakpoint(s, 3, 2640, r0);
  case 3:
    r0 = globals._scene___4056;
    return leave(s, r0)
  default: oops()
} } }
game_currentScene__P2532.info = {"start":667,"length":90,"line":22,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"currentScene","argumentNames":[]}

function game_currentScene__P2532_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_currentScene__P2532, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_addScenePopHandler__P2551(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2732]) return breakpoint(s, 5, 2732, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___4059);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2733]) return breakpoint(s, 6, 2733, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePopHandlers___4059 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2734]) return breakpoint(s, 7, 2734, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePopHandlers___4059, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2735]) return breakpoint(s, 8, 2735, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePopHandlers___4059, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePopHandler__P2551.info = {"start":11754,"length":237,"line":368,"column":4,"endLine":372,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePopHandler","argumentNames":["handler"]}

function game_addScenePopHandler__P2551_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePopHandler__P2551, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_addScenePushHandler__P2549(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2728]) return breakpoint(s, 5, 2728, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___4058);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2729]) return breakpoint(s, 6, 2729, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePushHandlers___4058 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2730]) return breakpoint(s, 7, 2730, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePushHandlers___4058, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2731]) return breakpoint(s, 8, 2731, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePushHandlers___4058, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePushHandler__P2549.info = {"start":10753,"length":242,"line":344,"column":4,"endLine":348,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePushHandler","argumentNames":["handler"]}

function game_addScenePushHandler__P2549_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePushHandler__P2549, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx8__P144(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[252]) return breakpoint(s, 1, 252, r0);
  case 1:
    r0 = (s.arg0 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    return leave(s, r0)
  default: oops()
} } }
Fx8__P144.info = {"start":42,"length":68,"line":4,"column":0,"endLine":6,"endColumn":1,"fileName":"pxt_modules/base/fixed.ts","functionName":"Fx8","argumentNames":["v"]}

function Fx8__P144_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx8__P144, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function SpriteKind_create__P2127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1567]) return breakpoint(s, 3, 1567, r0);
  case 3:
    r0 = (globals.nextKind___3909 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1568]) return breakpoint(s, 4, 1568, r0);
  case 4:
    globals.nextKind___3909 = (1000);
  case 1:
  case 2:
    s.lastBrkId = 1569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1569]) return breakpoint(s, 5, 1569, r0);
  case 5:
    s.tmp_0 = r0 = globals.nextKind___3909;
    r0 = (s.tmp_0 + 1);
    globals.nextKind___3909 = (r0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
SpriteKind_create__P2127.info = {"start":750,"length":112,"line":25,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/game/spritekind.ts","functionName":"create","argumentNames":[]}

function SpriteKind_create__P2127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: SpriteKind_create__P2127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_constructor__P1909(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1009]) return breakpoint(s, 5, 1009, r0);
  case 5:
    r0 = (s.arg0).fields["id"] = (s.arg1);
    s.lastBrkId = 1010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1010]) return breakpoint(s, 6, 1010, r0);
  case 6:
    r0 = (s.arg0).fields["_pressed"] = (false);
    s.lastBrkId = 1011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1011]) return breakpoint(s, 7, 1011, r0);
  case 7:
    r0 = (s.arg0).fields["repeatDelay"] = (undefined);
    s.lastBrkId = 1012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1012]) return breakpoint(s, 8, 1012, r0);
  case 8:
    r0 = (s.arg0).fields["repeatInterval"] = (undefined);
    s.lastBrkId = 1013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1013]) return breakpoint(s, 9, 1013, r0);
  case 9:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 1014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1014]) return breakpoint(s, 10, 1014, r0);
  case 10:
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1015]) return breakpoint(s, 11, 1015, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, inline__P17664);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(2050, s.tmp_2, s.tmp_1, 16);
    s.lastBrkId = 1016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1016]) return breakpoint(s, 12, 1016, r0);
  case 12:
    r0 = pxsim_pxtcore_mkAction(1, inline__P17671);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim.control.internalOnEvent(2051, s.tmp_1, s.tmp_0, 16);
    s.lastBrkId = 1017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1017]) return breakpoint(s, 13, 1017, r0);
  case 13:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1018]) return breakpoint(s, 14, 1018, r0);
  case 14:
    s.tmp_1 = controller_setupButton__P3891_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 185; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_constructor__P1909.info = {"start":1589,"length":863,"line":67,"column":8,"endLine":83,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","id","configKey"]}

function controller_Button_constructor__P1909_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_constructor__P1909, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P17664(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P1914_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 183; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P17664.info = {"start":2211,"length":28,"line":77,"column":66,"endLine":77,"endColumn":94,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":[]}

function inline__P17664_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17664, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P17671(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P1914_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 184; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P17671.info = {"start":2313,"length":27,"line":78,"column":68,"endLine":78,"endColumn":95,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":[]}

function inline__P17671_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P17671, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_setupButton__P3891(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1007]) return breakpoint(s, 1, 1007, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_setupButton__P3891.info = {"start":983,"length":93,"line":47,"column":4,"endLine":49,"endColumn":6,"fileName":"pxt_modules/game/controller.ts","functionName":"setupButton","argumentNames":["buttonId","key"]}

function controller_setupButton__P3891_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_setupButton__P3891, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_setPressed__P1914(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1033]) return breakpoint(s, 7, 1033, r0);
  case 7:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1034]) return breakpoint(s, 8, 1034, r0);
  case 8:
    s.tmp_2 = power_poke__P1705_mk(s);
    s.callLocIdx = 187; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1035]) return breakpoint(s, 10, 1035, r0);
  case 10:
    r0 = s.arg0.fields["_owner"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1036]) return breakpoint(s, 11, 1036, r0);
  case 11:
    s.tmp_1 = controller_Controller_connected__P1943_mk(s);
    r0 = s.arg0.fields["_owner"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = true;
    s.callLocIdx = 188; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1037]) return breakpoint(s, 13, 1037, r0);
  case 13:
    r0 = (s.arg0).fields["_pressed"] = (s.arg1);
    s.lastBrkId = 1038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1038]) return breakpoint(s, 14, 1038, r0);
  case 14:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1039]) return breakpoint(s, 15, 1039, r0);
  case 15:
    r0 = (s.arg0).fields["_pressedElasped"] = (0);
    s.lastBrkId = 1040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1040]) return breakpoint(s, 16, 1040, r0);
  case 16:
    s.tmp_0 = controller_Button_raiseButtonDown__P3893_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 189; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1041]) return breakpoint(s, 18, 1041, r0);
  case 18:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 1042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1042]) return breakpoint(s, 19, 1042, r0);
  case 19:
    s.tmp_0 = controller_Button_raiseButtonUp__P3892_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 190; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_setPressed__P1914.info = {"start":4600,"length":507,"line":148,"column":8,"endLine":162,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"setPressed","argumentNames":["this","pressed"]}

function controller_Button_setPressed__P1914_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_setPressed__P1914, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonDown__P3893(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1022]) return breakpoint(s, 3, 1022, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___3885);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1023]) return breakpoint(s, 4, 1023, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2049, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1024]) return breakpoint(s, 5, 1024, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2053, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonDown__P3893.info = {"start":2672,"length":205,"line":92,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"raiseButtonDown","argumentNames":["this"]}

function controller_Button_raiseButtonDown__P3893_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonDown__P3893, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button_raiseButtonUp__P3892(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1019]) return breakpoint(s, 3, 1019, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___3885);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1020]) return breakpoint(s, 4, 1020, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2048, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1021]) return breakpoint(s, 5, 1021, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2052, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonUp__P3892.info = {"start":2462,"length":200,"line":85,"column":8,"endLine":90,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"raiseButtonUp","argumentNames":["this"]}

function controller_Button_raiseButtonUp__P3892_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonUp__P3892, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_connected__P1943(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1112]) return breakpoint(s, 5, 1112, r0);
  case 5:
    r0 = s.arg0.fields["_connected"];
    s.tmp_1 = r0;
    r0 = (s.arg1 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1113]) return breakpoint(s, 6, 1113, r0);
  case 6:
    r0 = (s.arg0).fields["_connected"] = (s.arg1);
    s.lastBrkId = 1114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1114]) return breakpoint(s, 7, 1114, r0);
  case 7:
    r0 = s.arg0.fields["_connected"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_3 = controller_Controller_id__P1930_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 215; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_2, s.tmp_1);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_connected__P1943.info = {"start":12550,"length":261,"line":405,"column":8,"endLine":410,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this","value"]}

function controller_Controller_connected__P1943_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P1943, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_id__P1930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1091]) return breakpoint(s, 1, 1091, r0);
  case 1:
    r0 = s.arg0.fields["_id"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_id__P1930.info = {"start":8841,"length":49,"line":276,"column":8,"endLine":278,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"id","argumentNames":["this"]}
controller_Controller_id__P1930.isGetter = true;

function controller_Controller_id__P1930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_id__P1930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_connected__P1942(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1923_VT)) failedCast(r0);
    s.lastBrkId = 1111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1111]) return breakpoint(s, 1, 1111, r0);
  case 1:
    r0 = s.arg0.fields["_connected"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_connected__P1942.info = {"start":12477,"length":63,"line":401,"column":8,"endLine":403,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this"]}
controller_Controller_connected__P1942.isGetter = true;

function controller_Controller_connected__P1942_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P1942, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function settings_initScopes__P3858(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rn___17749 = undefined;
    s.lastBrkId = 965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[965]) return breakpoint(s, 1, 965, r0);
  case 1:
    s.tmp_1 = settings_runNumber__P1825_mk(s);
    s.callLocIdx = 162; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___17749 = (r0);
    s.lastBrkId = 966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[966]) return breakpoint(s, 3, 966, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P1829_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___3846;
    s.tmp_0.arg1 = s.rn___17749;
    s.callLocIdx = 163; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[967]) return breakpoint(s, 5, 967, r0);
  case 5:
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    s.lastBrkId = 968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[968]) return breakpoint(s, 6, 968, r0);
  case 6:
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___17749);
    s.lastBrkId = 969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[969]) return breakpoint(s, 7, 969, r0);
  case 7:
    s.tmp_0 = settings_setScope__P3857_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 164; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P3858.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P3858_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P3858, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___17749: undefined,
} }





function settings_setScope__P3857(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currScope___17778 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[959]) return breakpoint(s, 7, 959, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[960]) return breakpoint(s, 8, 960, r0);
  case 8:
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.lastBrkId = 961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[961]) return breakpoint(s, 9, 961, r0);
  case 9:
    s.tmp_0 = settings_readString__P1832_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___3847;
    s.callLocIdx = 160; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.currScope___17778 = (r0);
    s.lastBrkId = 962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[962]) return breakpoint(s, 11, 962, r0);
  case 11:
    r0 = (s.currScope___17778 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[963]) return breakpoint(s, 12, 963, r0);
  case 12:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[964]) return breakpoint(s, 13, 964, r0);
  case 13:
    s.tmp_0 = settings_writeString__P1828_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___3847;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 161; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P3857.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P3857_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P3857, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___17778: undefined,
  arg0: undefined,
} }





function settings_readString__P1832(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___17799 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[977]) return breakpoint(s, 4, 977, r0);
  case 4:
    s.tmp_0 = settings_readBuffer__P1831_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 169; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.buf___17799 = (r0);
    s.lastBrkId = 978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[978]) return breakpoint(s, 6, 978, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.buf___17799);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[979]) return breakpoint(s, 7, 979, r0);
  case 7:
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[980]) return breakpoint(s, 8, 980, r0);
  case 8:
    r0 = pxsim.BufferMethods.toString(s.buf___17799);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P1832.info = {"start":2649,"length":177,"line":103,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P1832_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P1832, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___17799: undefined,
  arg0: undefined,
} }





function settings_writeString__P1828(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[974]) return breakpoint(s, 1, 974, r0);
  case 1:
    s.tmp_0 = settings_writeBuffer__P1827_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 166; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P1828.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P1828_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P1828, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_runNumber__P1825(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[958]) return breakpoint(s, 3, 958, r0);
  case 3:
    s.tmp_1 = settings_readNumber__P1833_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___3846;
    s.callLocIdx = 159; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P1825.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P1825_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P1825, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control___screen_setupUpdate__P1764(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[940]) return breakpoint(s, 1, 940, r0);
  case 1:
    globals.__updated___3815 = (true);
    s.lastBrkId = 941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[941]) return breakpoint(s, 2, 941, r0);
  case 2:
    globals.__update___3813 = (s.arg0);
    s.lastBrkId = 942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[942]) return breakpoint(s, 3, 942, r0);
  case 3:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 155; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_setupUpdate__P1764.info = {"start":198,"length":125,"line":10,"column":4,"endLine":14,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"setupUpdate","argumentNames":["update"]}

function control___screen_setupUpdate__P1764_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_setupUpdate__P1764, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function control___screen_update__P1763(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[937]) return breakpoint(s, 3, 937, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.__update___3813);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[938]) return breakpoint(s, 4, 938, r0);
  case 4:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__update___3813;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 154; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[939]) return breakpoint(s, 6, 939, r0);
  case 6:
    globals.__updated___3815 = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_update__P1763.info = {"start":90,"length":102,"line":4,"column":4,"endLine":8,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"update","argumentNames":[]}

function control___screen_update__P1763_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_update__P1763, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function pause__P402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[542]) return breakpoint(s, 1, 542, r0);
  case 1:
    setupResume(s, 2);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P402.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function statusbars_StatusHandler_constructor__P5798(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusHandler__C5796_VT)) failedCast(r0);
    r0 = (s.arg0).fields["kind"] = (s.arg1);
    r0 = (s.arg0).fields["comparison"] = (s.arg2);
    r0 = (s.arg0).fields["comparisonType"] = (s.arg3);
    r0 = (s.arg0).fields["percent"] = (s.arg4);
    r0 = (s.arg0).fields["handler"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusHandler_constructor__P5798.info = {"start":22994,"length":257,"line":677,"column":8,"endLine":683,"endColumn":13,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"inline","argumentNames":["this","kind","comparison","comparisonType","percent","handler"]}

function statusbars_StatusHandler_constructor__P5798_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusHandler_constructor__P5798, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function particles_AshFactory_createParticle__P2760(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___17903 = undefined;
    s.choice___17912 = undefined;
    s.p___17917 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AshFactory__C2758_VT)) failedCast(r0);
    s.lastBrkId = 3235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3235]) return breakpoint(s, 8, 3235, r0);
  case 8:
    r0 = s.arg0.fields["colors"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3236]) return breakpoint(s, 9, 3236, r0);
  case 9:
    r0 = undefined;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3237]) return breakpoint(s, 10, 3237, r0);
  case 10:
    s.tmp_3 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["colors"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1452; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.index___17903 = (r0);
    s.lastBrkId = 3238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3238]) return breakpoint(s, 12, 3238, r0);
  case 12:
    r0 = s.arg0.fields["colors"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.index___17903);
    s.choice___17912 = (r0);
    s.lastBrkId = 3239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3239]) return breakpoint(s, 13, 3239, r0);
  case 13:
    s.tmp_0 = particles_AreaFactory_createParticle__P2730_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1453; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.p___17917 = (r0);
    s.lastBrkId = 3240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3240]) return breakpoint(s, 15, 3240, r0);
  case 15:
    s.tmp_0 = r0 = s.choice___17912;
    r0 = s.tmp_0.fields["count"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["count"] = (s.tmp_1);
    s.lastBrkId = 3241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3241]) return breakpoint(s, 16, 3241, r0);
  case 16:
    r0 = s.choice___17912.fields["count"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3242]) return breakpoint(s, 17, 3242, r0);
  case 17:
    r0 = s.arg0.fields["colors"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.removeAt(s.tmp_2, s.index___17903);
  case 3:
  case 4:
    s.lastBrkId = 3243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3243]) return breakpoint(s, 18, 3243, r0);
  case 18:
    r0 = s.choice___17912.fields["color"];
    s.tmp_0 = r0;
    r0 = (s.p___17917).fields["color"] = (s.tmp_0);
    s.lastBrkId = 3244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3244]) return breakpoint(s, 19, 3244, r0);
  case 19:
    s.tmp_0 = r0 = s.p___17917;
    s.tmp_2 = Fx_iadd__P153_mk(s);
    s.tmp_3 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3.arg1 = r0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1454; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    r0 = s.p___17917.fields["_y"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1455; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 3245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3245]) return breakpoint(s, 22, 3245, r0);
  case 22:
    s.tmp_1 = if_vx_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "vx");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["vx"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["vx"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1456; s.pc = 23; return s.tmp_1; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = Fx_neg__P150_mk(s);
    s.tmp_3 = Fx8__P144_mk(s);
    s.tmp_5 = if_vx_1_mk(s);
    s.tmp_5.arg0 = s.arg1;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "vx");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["vx"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["vx"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1457; s.pc = 26; return s.tmp_5; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 2);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1458; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1459; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.p___17917).fields["vx"] = (s.tmp_6);
    s.lastBrkId = 3246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3246]) return breakpoint(s, 27, 3246, r0);
  case 27:
    s.tmp_0 = r0 = s.p___17917;
    s.tmp_2 = Fx8__P144_mk(s);
    s.tmp_3 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = -150;
    s.tmp_3.arg2 = -50;
    s.callLocIdx = 1460; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1461; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 3247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3247]) return breakpoint(s, 30, 3247, r0);
  case 30:
    r0 = s.p___17917;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
particles_AshFactory_createParticle__P2760.info = {"start":13251,"length":665,"line":425,"column":8,"endLine":442,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_AshFactory_createParticle__P2760_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AshFactory_createParticle__P2760, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  index___17903: undefined,
  choice___17912: undefined,
  p___17917: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_iadd__P153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[256]) return breakpoint(s, 1, 256, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_iadd__P153.info = {"start":634,"length":110,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"iadd","argumentNames":["a","b"]}

function Fx_iadd__P153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_iadd__P153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function statusbars_StatusBar_image__P3622(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, statusbars_StatusBar__C3596_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
statusbars_StatusBar_image__P3622.info = {"start":16057,"length":86,"line":487,"column":8,"endLine":489,"endColumn":9,"fileName":"pxt_modules/pxt-status-bar/status-bar.ts","functionName":"image","argumentNames":["this","v"]}

function statusbars_StatusBar_image__P3622_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: statusbars_StatusBar_image__P3622, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function game_BaseDialog_drawTextCore__P2492(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawTextCore__P2492.info = {"start":1757,"length":65,"line":70,"column":8,"endLine":72,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_BaseDialog_drawTextCore__P2492_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawTextCore__P2492, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_BaseDialog_update__P2490(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2477_VT)) failedCast(r0);
    s.lastBrkId = 2549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2549]) return breakpoint(s, 1, 2549, r0);
  case 1:
    s.tmp_0 = game_BaseDialog_clearInterior__P4031_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1060; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2550]) return breakpoint(s, 3, 2550, r0);
  case 3:
    s.tmp_0 = game_BaseDialog__C2477_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_BaseDialog__C2477_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawTextCore;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2551]) return breakpoint(s, 5, 2551, r0);
  case 5:
    s.tmp_0 = game_BaseDialog_drawCursorRow__P2493_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1061; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_update__P2490.info = {"start":1539,"length":121,"line":60,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"update","argumentNames":["this"]}

function game_BaseDialog_update__P2490_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_update__P2490, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_id__P2240(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2226_VT)) failedCast(r0);
    s.lastBrkId = 2015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2015]) return breakpoint(s, 1, 2015, r0);
  case 1:
    r0 = s.arg0.fields["_player"];
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_id__P2240.info = {"start":17259,"length":57,"line":568,"column":8,"endLine":570,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"id","argumentNames":["this"]}

function info_PlayerInfo_id__P2240_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_id__P2240, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function animation_MovementAnimation_constructor__P3502(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_MovementAnimation__C3501_VT)) failedCast(r0);
    r0 = (s.arg0).fields["path"] = (s.arg2);
    r0 = (s.arg0).fields["nodeInterval"] = (s.arg3);
    s.lastBrkId = 3392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3392]) return breakpoint(s, 1, 3392, r0);
  case 1:
    s.tmp_0 = animation_SpriteAnimation_constructor__P3495_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg4;
    s.callLocIdx = 1541; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3393]) return breakpoint(s, 3, 3393, r0);
  case 3:
    r0 = (s.arg0).fields["loop"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_MovementAnimation_constructor__P3502.info = {"start":18586,"length":169,"line":478,"column":8,"endLine":482,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["this","sprite","path","nodeInterval","loop"]}

function animation_MovementAnimation_constructor__P3502_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_MovementAnimation_constructor__P3502, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function animation_MovementAnimation_update__P3503(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.result___17991 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_MovementAnimation__C3501_VT)) failedCast(r0);
    s.lastBrkId = 3394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3394]) return breakpoint(s, 8, 3394, r0);
  case 8:
    r0 = s.arg0.fields["startedAt"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3395]) return breakpoint(s, 9, 3395, r0);
  case 9:
    s.tmp_2 = r0 = s.arg0;
    r0 = pxsim.control.millis();
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["startedAt"] = (s.tmp_3);
  case 1:
  case 2:
    s.lastBrkId = 3396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3396]) return breakpoint(s, 10, 3396, r0);
  case 10:
    s.tmp_0 = animation_Path_run__P3469_mk(s);
    r0 = s.arg0.fields["path"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["nodeInterval"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg2 = r0;
    r0 = s.arg0.fields["startedAt"];
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1542; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.result___17991 = (r0);
    s.lastBrkId = 3397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3397]) return breakpoint(s, 12, 3397, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.result___17991);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3398]) return breakpoint(s, 13, 3398, r0);
  case 13:
    r0 = s.arg0.fields["loop"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3399]) return breakpoint(s, 14, 3399, r0);
  case 14:
    r0 = true;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3400]) return breakpoint(s, 15, 3400, r0);
  case 15:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim.control.millis();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["startedAt"] = (s.tmp_4);
  case 5:
  case 6:
    s.lastBrkId = 3401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3401]) return breakpoint(s, 16, 3401, r0);
  case 16:
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
animation_MovementAnimation_update__P3503.info = {"start":18765,"length":362,"line":484,"column":8,"endLine":493,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"update","argumentNames":["this"]}

function animation_MovementAnimation_update__P3503_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_MovementAnimation_update__P3503, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  result___17991: undefined,
  arg0: undefined,
} }





function animation_Path_run__P3469(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.runningTime___18013 = undefined;
    s.nodeIndex___18018 = undefined;
    s.nodeTime___18024 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3464_VT)) failedCast(r0);
    s.lastBrkId = 3355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3355]) return breakpoint(s, 10, 3355, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.arg3);
    s.runningTime___18013 = (r0);
    s.lastBrkId = 3356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3356]) return breakpoint(s, 11, 3356, r0);
  case 11:
    r0 = (s.runningTime___18013 / s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.nodeIndex___18018 = (r0);
    s.lastBrkId = 3357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3357]) return breakpoint(s, 12, 3357, r0);
  case 12:
    r0 = (s.runningTime___18013 % s.arg1);
    s.nodeTime___18024 = (r0);
    s.lastBrkId = 3358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3358]) return breakpoint(s, 13, 3358, r0);
  case 13:
    r0 = s.arg0.fields["lastNode"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["lastNode"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 < s.nodeIndex___18018);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["nodes"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3359]) return breakpoint(s, 14, 3359, r0);
  case 14:
    s.tmp_6 = animation_PathNode__C3470_v0_4_mk(s);
    r0 = s.arg0.fields["nodes"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["lastNode"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg2;
    s.tmp_6.arg2 = s.arg1;
    s.tmp_6.arg3 = s.arg1;
    if (!checkSubtype(s.tmp_6.arg0, animation_PathNode__C3470_VT)) failedCast(s.tmp_6.arg0);
    s.tmp_6.fn = s.tmp_6.arg0.vtable.methods.apply;
    s.pc = 15; return s.tmp_6;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 3360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3360]) return breakpoint(s, 16, 3360, r0);
  case 16:
    s.tmp_1 = r0 = s.nodeIndex___18018;
    r0 = s.arg0.fields["nodes"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3361]) return breakpoint(s, 17, 3361, r0);
  case 17:
    r0 = true;
    { step = 9; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 3362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3362]) return breakpoint(s, 18, 3362, r0);
  case 18:
    r0 = (s.arg0).fields["lastNode"] = (s.nodeIndex___18018);
    s.lastBrkId = 3363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3363]) return breakpoint(s, 19, 3363, r0);
  case 19:
    s.tmp_0 = animation_PathNode__C3470_v0_4_mk(s);
    r0 = s.arg0.fields["nodes"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.nodeIndex___18018);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.nodeTime___18024;
    s.tmp_0.arg3 = s.arg1;
    if (!checkSubtype(s.tmp_0.arg0, animation_PathNode__C3470_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.apply;
    s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 3364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3364]) return breakpoint(s, 21, 3364, r0);
  case 21:
    r0 = false;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
animation_Path_run__P3469.info = {"start":11871,"length":990,"line":287,"column":8,"endLine":301,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"run","argumentNames":["this","interval","target","startedAt"]}

function animation_Path_run__P3469_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_run__P3469, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  runningTime___18013: undefined,
  nodeIndex___18018: undefined,
  nodeTime___18024: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function animation_PathNode_apply__P3473(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_PathNode__C3470_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_PathNode_apply__P3473.info = {"start":13011,"length":60,"line":310,"column":8,"endLine":310,"endColumn":68,"fileName":"pxt_modules/animation/animation.ts","functionName":"apply","argumentNames":["this","target","nodeTime","interval"]}

function animation_PathNode_apply__P3473_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_PathNode_apply__P3473, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function animation_ImageAnimation_update__P3500(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.runningTime___18080 = undefined;
    s.frameIndex___18086 = undefined;
    s.newImage___18110 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_ImageAnimation__C3498_VT)) failedCast(r0);
    s.lastBrkId = 3380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3380]) return breakpoint(s, 14, 3380, r0);
  case 14:
    r0 = s.arg0.fields["startedAt"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3381]) return breakpoint(s, 15, 3381, r0);
  case 15:
    s.tmp_2 = r0 = s.arg0;
    r0 = pxsim.control.millis();
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["startedAt"] = (s.tmp_3);
  case 1:
  case 2:
    s.lastBrkId = 3382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3382]) return breakpoint(s, 16, 3382, r0);
  case 16:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = s.arg0.fields["startedAt"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.runningTime___18080 = (r0);
    s.lastBrkId = 3383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3383]) return breakpoint(s, 17, 3383, r0);
  case 17:
    r0 = s.arg0.fields["frameInterval"];
    s.tmp_1 = r0;
    r0 = (s.runningTime___18080 / s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.frameIndex___18086 = (r0);
    s.lastBrkId = 3384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3384]) return breakpoint(s, 18, 3384, r0);
  case 18:
    r0 = s.arg0.fields["lastFrame"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.frameIndex___18086);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["frames"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3385]) return breakpoint(s, 19, 3385, r0);
  case 19:
    r0 = s.arg0.fields["loop"];
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_4;
    { step = 6; continue; }
  case 5:
    s.tmp_7 = r0 = s.frameIndex___18086;
    r0 = s.arg0.fields["frames"];
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 >= s.tmp_8);
  case 6:
    // jmp value (already in r0)
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3386]) return breakpoint(s, 20, 3386, r0);
  case 20:
    r0 = true;
    { step = 13; continue; }
  case 7:
  case 8:
    s.lastBrkId = 3387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3387]) return breakpoint(s, 21, 3387, r0);
  case 21:
    r0 = s.arg0.fields["frames"];
    s.tmp_11 = r0;
    s.tmp_13 = r0 = s.frameIndex___18086;
    r0 = s.arg0.fields["frames"];
    s.tmp_15 = r0;
    r0 = pxsim_Array__length(s.tmp_15);
    s.tmp_14 = r0;
    r0 = (s.tmp_13 % s.tmp_14);
    s.tmp_12 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, s.tmp_12);
    s.newImage___18110 = (r0);
    s.lastBrkId = 3388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3388]) return breakpoint(s, 22, 3388, r0);
  case 22:
    s.tmp_2 = Sprite_image__P2055_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1539; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.newImage___18110);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3389]) return breakpoint(s, 24, 3389, r0);
  case 24:
    s.tmp_3 = Sprite_setImage__P2056_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.newImage___18110;
    s.callLocIdx = 1540; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
  case 9:
  case 10:
  case 11:
  case 12:
    s.lastBrkId = 3390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3390]) return breakpoint(s, 26, 3390, r0);
  case 26:
    r0 = (s.arg0).fields["lastFrame"] = (s.frameIndex___18086);
    s.lastBrkId = 3391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3391]) return breakpoint(s, 27, 3391, r0);
  case 27:
    r0 = false;
  case 13:
    return leave(s, r0)
  default: oops()
} } }
animation_ImageAnimation_update__P3500.info = {"start":17762,"length":747,"line":457,"column":8,"endLine":474,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"update","argumentNames":["this"]}

function animation_ImageAnimation_update__P3500_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_ImageAnimation_update__P3500, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  runningTime___18080: undefined,
  frameIndex___18086: undefined,
  newImage___18110: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_toString__P2122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1566]) return breakpoint(s, 1, 1566, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    s.tmp_4 = sprites_SpriteSet_length__P2114_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 545; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " sprites");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_toString__P2122.info = {"start":2577,"length":66,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteSet_toString__P2122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_toString__P2122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_length__P2114(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2111_VT)) failedCast(r0);
    s.lastBrkId = 1552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1552]) return breakpoint(s, 1, 1552, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_SpriteSet_length__P2114.info = {"start":628,"length":65,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"length","argumentNames":["this"]}
sprites_SpriteSet_length__P2114.isGetter = true;

function sprites_SpriteSet_length__P2114_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_length__P2114, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_Melody_toString__P1607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1598_VT)) failedCast(r0);
    s.lastBrkId = 601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[601]) return breakpoint(s, 1, 601, r0);
  case 1:
    r0 = s.arg0.fields["_text"];
    return leave(s, r0)
  default: oops()
} } }
music_Melody_toString__P1607.info = {"start":9640,"length":53,"line":303,"column":8,"endLine":305,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"toString","argumentNames":["this"]}

function music_Melody_toString__P1607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_toString__P1607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_toString__P2102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1539]) return breakpoint(s, 1, 1539, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = s.arg0.fields["buckets"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__length(s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " buckets, ");
    s.tmp_1 = r0;
    s.tmp_10 = helpers_arrayFilter__P108_mk(s);
    r0 = s.arg0.fields["buckets"];
    s.tmp_10.arg0 = r0;
    s.tmp_10.arg1 = inline__P18147;
    s.callLocIdx = 537; s.pc = 3; return s.tmp_10;
  case 3:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " filled");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_toString__P2102.info = {"start":4109,"length":123,"line":112,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteMap_toString__P2102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_toString__P2102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function inline__P18147(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P18147.info = {"start":4196,"length":8,"line":113,"column":74,"endLine":113,"endColumn":82,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["b"]}

function inline__P18147_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P18147, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_moveSprite__P2187(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___18185 = undefined;
    s.maxDist___18195 = undefined;
    s.ms___18215 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1823]) return breakpoint(s, 16, 1823, r0);
  case 16:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1824]) return breakpoint(s, 17, 1824, r0);
  case 17:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1825]) return breakpoint(s, 18, 1825, r0);
  case 18:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 751; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1826]) return breakpoint(s, 20, 1826, r0);
  case 20:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 752; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1827]) return breakpoint(s, 22, 1827, r0);
  case 22:
    r0 = s.arg1.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 515);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1828]) return breakpoint(s, 23, 1828, r0);
  case 23:
    s.tmp_4 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 753; s.pc = 24; return s.tmp_4;
  case 24:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___18185 = (r0);
    s.lastBrkId = 1829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1829]) return breakpoint(s, 25, 1829, r0);
  case 25:
    s.tmp_0 = r0 = s.tm___18185;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2327_mk(s);
    s.tmp_1.arg0 = s.tm___18185;
    s.callLocIdx = 754; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1830]) return breakpoint(s, 27, 1830, r0);
  case 27:
    { step = 15; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1831]) return breakpoint(s, 28, 1831, r0);
  case 28:
    s.tmp_5 = Fx_toInt__P165_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 755; s.pc = 29; return s.tmp_5;
  case 29:
    r0 = s.retval;
    s.maxDist___18195 = (r0);
    s.lastBrkId = 1832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1832]) return breakpoint(s, 30, 1832, r0);
  case 30:
    s.tmp_2 = Math_abs__P123_mk(s);
    s.tmp_3 = Fx_toInt__P165_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.callLocIdx = 756; s.pc = 32; return s.tmp_3;
  case 32:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 757; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.maxDist___18195);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_5 = Math_abs__P123_mk(s);
    s.tmp_6 = Fx_toInt__P165_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 758; s.pc = 34; return s.tmp_6;
  case 34:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 759; s.pc = 33; return s.tmp_5;
  case 33:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 <= s.maxDist___18195);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1833]) return breakpoint(s, 35, 1833, r0);
  case 35:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2171_VT);
    s.tmp_8 = r0;
    s.tmp_9 = MovingSprite_constructor__P2172_mk(s);
    s.tmp_9.arg0 = s.tmp_8;
    s.tmp_9.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_9.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_9.arg3 = r0;
    s.tmp_9.arg4 = s.arg2;
    s.tmp_9.arg5 = s.arg3;
    s.tmp_9.arg6 = s.arg2;
    s.tmp_9.arg7 = s.arg3;
    s.callLocIdx = 760; s.pc = 36; return s.tmp_9;
  case 36:
    r0 = s.retval;
    s.ms___18215 = (s.tmp_8);
    s.lastBrkId = 1834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1834]) return breakpoint(s, 37, 1834, r0);
  case 37:
    s.tmp_0 = ArcadePhysicsEngine_tilemapCollisions__P3931_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ms___18215;
    s.tmp_0.arg2 = s.tm___18185;
    s.callLocIdx = 761; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    { step = 12; continue; }
  case 7:
    s.lastBrkId = 1835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1835]) return breakpoint(s, 39, 1835, r0);
  case 39:
    s.tmp_1 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_1.arg0 = s.tm___18185;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 762; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_0;
    { step = 9; continue; }
  case 8:
    s.tmp_4 = ArcadePhysicsEngine_canResolveClipping__P3933_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tm___18185;
    s.callLocIdx = 763; s.pc = 41; return s.tmp_4;
  case 41:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 9:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1836]) return breakpoint(s, 42, 1836, r0);
  case 42:
    s.tmp_6 = r0 = s.arg1;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 | 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 1837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1837]) return breakpoint(s, 43, 1837, r0);
  case 43:
    s.tmp_0 = r0 = s.arg1;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -257);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 11:
  case 12:
  case 13:
  case 14:
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_moveSprite__P2187.info = {"start":21785,"length":1276,"line":642,"column":4,"endLine":675,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function ArcadePhysicsEngine_moveSprite__P2187_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_moveSprite__P2187, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tm___18185: undefined,
  maxDist___18195: undefined,
  ms___18215: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_canResolveClipping__P3933(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___18260 = undefined;
    s.sz___18263 = undefined;
    s.maxMove___18268 = undefined;
    s.origY___18270 = undefined;
    s.origX___18273 = undefined;
    s.l___18276 = undefined;
    s.r___18281 = undefined;
    s.t___18286 = undefined;
    s.b___18291 = undefined;
    s.offset___18296 = undefined;
    s.offset___18321 = undefined;
    s.offset___18352 = undefined;
    s.offset___18377 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1838]) return breakpoint(s, 20, 1838, r0);
  case 20:
    s.tmp_3 = Sprite_isStatic__P2058_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 764; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1839]) return breakpoint(s, 22, 1839, r0);
  case 22:
    s.tmp_4 = Sprite_setHitbox__P2057_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 765; s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1840]) return breakpoint(s, 24, 1840, r0);
  case 24:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___18260 = (r0);
    s.lastBrkId = 1841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1841]) return breakpoint(s, 25, 1841, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 766; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.sz___18263 = (r0);
    s.lastBrkId = 1842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1842]) return breakpoint(s, 27, 1842, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2179_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 767; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.maxMove___18268 = (r0);
    s.lastBrkId = 1843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1843]) return breakpoint(s, 29, 1843, r0);
  case 29:
    r0 = s.arg1.fields["_y"];
    s.origY___18270 = (r0);
    s.lastBrkId = 1844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1844]) return breakpoint(s, 30, 1844, r0);
  case 30:
    r0 = s.arg1.fields["_x"];
    s.origX___18273 = (r0);
    s.lastBrkId = 1845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1845]) return breakpoint(s, 31, 1845, r0);
  case 31:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    s.tmp_1 = game_Hitbox_left__P1966_mk(s);
    s.tmp_1.arg0 = s.hbox___18260;
    s.callLocIdx = 768; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 769; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.l___18276 = (r0);
    s.lastBrkId = 1846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1846]) return breakpoint(s, 34, 1846, r0);
  case 34:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    s.tmp_1 = game_Hitbox_right__P1968_mk(s);
    s.tmp_1.arg0 = s.hbox___18260;
    s.callLocIdx = 770; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 771; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.r___18281 = (r0);
    s.lastBrkId = 1847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1847]) return breakpoint(s, 37, 1847, r0);
  case 37:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    s.tmp_1 = game_Hitbox_top__P1967_mk(s);
    s.tmp_1.arg0 = s.hbox___18260;
    s.callLocIdx = 772; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 773; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.t___18286 = (r0);
    s.lastBrkId = 1848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1848]) return breakpoint(s, 40, 1848, r0);
  case 40:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_1.arg0 = s.hbox___18260;
    s.callLocIdx = 774; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 775; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.b___18291 = (r0);
    s.lastBrkId = 1849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1849]) return breakpoint(s, 43, 1849, r0);
  case 43:
    r0 = (s.b___18291 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___18263);
    s.offset___18296 = (r0);
    s.lastBrkId = 1850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1850]) return breakpoint(s, 44, 1850, r0);
  case 44:
    r0 = (s.offset___18296 <= s.maxMove___18268);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1851]) return breakpoint(s, 45, 1851, r0);
  case 45:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P154_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P144_mk(s);
    s.tmp_4.arg0 = s.offset___18296;
    s.callLocIdx = 776; s.pc = 47; return s.tmp_4;
  case 47:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 777; s.pc = 46; return s.tmp_3;
  case 46:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1852]) return breakpoint(s, 48, 1852, r0);
  case 48:
    s.tmp_3 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 778; s.pc = 49; return s.tmp_3;
  case 49:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1853]) return breakpoint(s, 50, 1853, r0);
  case 50:
    r0 = true;
    { step = 19; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1854]) return breakpoint(s, 51, 1854, r0);
  case 51:
    r0 = (s.arg1).fields["_y"] = (s.origY___18270);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 1855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1855]) return breakpoint(s, 52, 1855, r0);
  case 52:
    r0 = (s.t___18286 / s.sz___18263);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___18263);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.t___18286);
    s.offset___18321 = (r0);
    s.lastBrkId = 1856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1856]) return breakpoint(s, 53, 1856, r0);
  case 53:
    r0 = (s.offset___18321 <= s.maxMove___18268);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1857]) return breakpoint(s, 54, 1857, r0);
  case 54:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P144_mk(s);
    s.tmp_4.arg0 = s.offset___18321;
    s.callLocIdx = 779; s.pc = 56; return s.tmp_4;
  case 56:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 780; s.pc = 55; return s.tmp_3;
  case 55:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1858]) return breakpoint(s, 57, 1858, r0);
  case 57:
    s.tmp_3 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 781; s.pc = 58; return s.tmp_3;
  case 58:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1859]) return breakpoint(s, 59, 1859, r0);
  case 59:
    r0 = true;
    { step = 19; continue; }
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 1860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1860]) return breakpoint(s, 60, 1860, r0);
  case 60:
    r0 = (s.arg1).fields["_y"] = (s.origY___18270);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 1861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1861]) return breakpoint(s, 61, 1861, r0);
  case 61:
    r0 = (s.r___18281 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___18263);
    s.offset___18352 = (r0);
    s.lastBrkId = 1862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1862]) return breakpoint(s, 62, 1862, r0);
  case 62:
    r0 = (s.offset___18352 <= s.maxMove___18268);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1863]) return breakpoint(s, 63, 1863, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P154_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P144_mk(s);
    s.tmp_4.arg0 = s.offset___18352;
    s.callLocIdx = 782; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 783; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1864]) return breakpoint(s, 66, 1864, r0);
  case 66:
    s.tmp_3 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 784; s.pc = 67; return s.tmp_3;
  case 67:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1865]) return breakpoint(s, 68, 1865, r0);
  case 68:
    r0 = true;
    { step = 19; continue; }
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1866]) return breakpoint(s, 69, 1866, r0);
  case 69:
    r0 = (s.arg1).fields["_x"] = (s.origX___18273);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1867]) return breakpoint(s, 70, 1867, r0);
  case 70:
    r0 = (s.l___18276 / s.sz___18263);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___18263);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.l___18276);
    s.offset___18377 = (r0);
    s.lastBrkId = 1868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1868]) return breakpoint(s, 71, 1868, r0);
  case 71:
    r0 = (s.offset___18377 <= s.maxMove___18268);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1869]) return breakpoint(s, 72, 1869, r0);
  case 72:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P144_mk(s);
    s.tmp_4.arg0 = s.offset___18377;
    s.callLocIdx = 785; s.pc = 74; return s.tmp_4;
  case 74:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 786; s.pc = 73; return s.tmp_3;
  case 73:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1870]) return breakpoint(s, 75, 1870, r0);
  case 75:
    s.tmp_3 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 787; s.pc = 76; return s.tmp_3;
  case 76:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1871]) return breakpoint(s, 77, 1871, r0);
  case 77:
    r0 = true;
    { step = 19; continue; }
    { step = 16; continue; }
  case 15:
    s.lastBrkId = 1872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1872]) return breakpoint(s, 78, 1872, r0);
  case 78:
    r0 = (s.arg1).fields["_x"] = (s.origX___18273);
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 1873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1873]) return breakpoint(s, 79, 1873, r0);
  case 79:
    r0 = false;
  case 19:
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_canResolveClipping__P3933.info = {"start":23157,"length":2135,"line":678,"column":4,"endLine":749,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"canResolveClipping","argumentNames":["this","s","tm"]}

function ArcadePhysicsEngine_canResolveClipping__P3933_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_canResolveClipping__P3933, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  hbox___18260: undefined,
  sz___18263: undefined,
  maxMove___18268: undefined,
  origY___18270: undefined,
  origX___18273: undefined,
  l___18276: undefined,
  r___18281: undefined,
  t___18286: undefined,
  b___18291: undefined,
  offset___18296: undefined,
  offset___18321: undefined,
  offset___18352: undefined,
  offset___18377: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isStatic__P2058(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1291]) return breakpoint(s, 1, 1291, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite_isStatic__P2058.info = {"start":8266,"length":57,"line":299,"column":4,"endLine":301,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isStatic","argumentNames":["this"]}

function Sprite_isStatic__P2058_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isStatic__P2058, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_bottom__P1969(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1959_VT)) failedCast(r0);
    s.lastBrkId = 1172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1172]) return breakpoint(s, 1, 1172, r0);
  case 1:
    s.tmp_0 = Fx_sub__P154_mk(s);
    s.tmp_1 = Fx_add__P152_mk(s);
    r0 = s.arg0.fields["height"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_top__P1967_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 258; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 259; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 260; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_bottom__P1969.info = {"start":742,"length":139,"line":31,"column":8,"endLine":36,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"bottom","argumentNames":["this"]}
game_Hitbox_bottom__P1969.isGetter = true;

function game_Hitbox_bottom__P1969_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_bottom__P1969, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_right__P1968(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1959_VT)) failedCast(r0);
    s.lastBrkId = 1171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1171]) return breakpoint(s, 1, 1171, r0);
  case 1:
    s.tmp_0 = Fx_sub__P154_mk(s);
    s.tmp_1 = Fx_add__P152_mk(s);
    r0 = s.arg0.fields["width"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_left__P1966_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 255; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 256; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 257; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_right__P1968.info = {"start":594,"length":138,"line":24,"column":8,"endLine":29,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"right","argumentNames":["this"]}
game_Hitbox_right__P1968.isGetter = true;

function game_Hitbox_right__P1968_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_right__P1968, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_top__P1967(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1959_VT)) failedCast(r0);
    s.lastBrkId = 1170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1170]) return breakpoint(s, 1, 1170, r0);
  case 1:
    s.tmp_0 = Fx_add__P152_mk(s);
    r0 = s.arg0.fields["oy"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 254; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_top__P1967.info = {"start":511,"length":73,"line":20,"column":8,"endLine":22,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"top","argumentNames":["this"]}
game_Hitbox_top__P1967.isGetter = true;

function game_Hitbox_top__P1967_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_top__P1967, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_left__P1966(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1959_VT)) failedCast(r0);
    s.lastBrkId = 1169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1169]) return breakpoint(s, 1, 1169, r0);
  case 1:
    s.tmp_0 = Fx_add__P152_mk(s);
    r0 = s.arg0.fields["ox"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_x"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 253; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_left__P1966.info = {"start":427,"length":74,"line":16,"column":8,"endLine":18,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"left","argumentNames":["this"]}
game_Hitbox_left__P1966.isGetter = true;

function game_Hitbox_left__P1966_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_left__P1966, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions__P3931(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___18528 = undefined;
    s.hbox___18551 = undefined;
    s.tileScale___18554 = undefined;
    s.tileSize___18557 = undefined;
    s.xDiff___18561 = undefined;
    s.yDiff___18568 = undefined;
    s.overlappedTiles___18575 = undefined;
    s.right___18580 = undefined;
    s.x0___18584 = undefined;
    s.collidedTiles___18599 = undefined;
    s.y___18601 = undefined;
    s.y0___18615 = undefined;
    s.obstacle___18631 = undefined;
    s.collisionDirection___18665 = undefined;
    s.tile___18691 = undefined;
    s.unnamed2884___U15 = undefined;
    s.unnamed2885___U16 = undefined;
    s.down___18769 = undefined;
    s.y0___18773 = undefined;
    s.collidedTiles___18788 = undefined;
    s.overlappedTiles___18790 = undefined;
    s.x___18792 = undefined;
    s.x0___18802 = undefined;
    s.obstacle___18816 = undefined;
    s.collisionDirection___18850 = undefined;
    s.tile___18876 = undefined;
    s.unnamed2886___U26 = undefined;
    s.unnamed2887___U27 = undefined;
    s.x___18951 = undefined;
    s.x0___18961 = undefined;
    s.y___18971 = undefined;
    s.y0___18981 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1722]) return breakpoint(s, 84, 1722, r0);
  case 84:
    r0 = s.arg1.fields["sprite"];
    s.s___18528 = (r0);
    s.lastBrkId = 1723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1723]) return breakpoint(s, 85, 1723, r0);
  case 85:
    r0 = s.s___18528.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1724]) return breakpoint(s, 86, 1724, r0);
  case 86:
    s.tmp_3 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.s___18528;
    s.callLocIdx = 646; s.pc = 87; return s.tmp_3;
  case 87:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1725]) return breakpoint(s, 88, 1725, r0);
  case 88:
    { step = 83; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1726]) return breakpoint(s, 89, 1726, r0);
  case 89:
    s.tmp_4 = r0 = s.s___18528;
    r0 = s.tmp_4.fields["flags"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 & -257);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["flags"] = (s.tmp_5);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1727]) return breakpoint(s, 90, 1727, r0);
  case 90:
    s.tmp_3 = Sprite_isStatic__P2058_mk(s);
    s.tmp_3.arg0 = s.s___18528;
    s.callLocIdx = 647; s.pc = 91; return s.tmp_3;
  case 91:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1728]) return breakpoint(s, 92, 1728, r0);
  case 92:
    s.tmp_4 = Sprite_setHitbox__P2057_mk(s);
    s.tmp_4.arg0 = s.s___18528;
    s.callLocIdx = 648; s.pc = 93; return s.tmp_4;
  case 93:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1729]) return breakpoint(s, 94, 1729, r0);
  case 94:
    r0 = s.s___18528.fields["_hitbox"];
    s.hbox___18551 = (r0);
    s.lastBrkId = 1730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1730]) return breakpoint(s, 95, 1730, r0);
  case 95:
    s.tmp_0 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.callLocIdx = 649; s.pc = 96; return s.tmp_0;
  case 96:
    r0 = s.retval;
    s.tileScale___18554 = (r0);
    s.lastBrkId = 1731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1731]) return breakpoint(s, 97, 1731, r0);
  case 97:
    r0 = (1 << s.tileScale___18554);
    s.tileSize___18557 = (r0);
    s.lastBrkId = 1732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1732]) return breakpoint(s, 98, 1732, r0);
  case 98:
    s.tmp_0 = Fx_sub__P154_mk(s);
    r0 = s.s___18528.fields["_x"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___18528.fields["_lastX"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 650; s.pc = 99; return s.tmp_0;
  case 99:
    r0 = s.retval;
    s.xDiff___18561 = (r0);
    s.lastBrkId = 1733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1733]) return breakpoint(s, 100, 1733, r0);
  case 100:
    s.tmp_0 = Fx_sub__P154_mk(s);
    r0 = s.s___18528.fields["_y"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___18528.fields["_lastY"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 651; s.pc = 101; return s.tmp_0;
  case 101:
    r0 = s.retval;
    s.yDiff___18568 = (r0);
    s.lastBrkId = 1734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1734]) return breakpoint(s, 102, 1734, r0);
  case 102:
    r0 = pxsim_Array__mk();
    s.overlappedTiles___18575 = (r0);
    s.lastBrkId = 1735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1735]) return breakpoint(s, 103, 1735, r0);
  case 103:
    r0 = (s.xDiff___18561 !== 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 39; continue; }
    s.lastBrkId = 1736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1736]) return breakpoint(s, 104, 1736, r0);
  case 104:
    r0 = (s.xDiff___18561 > 0);
    s.right___18580 = (r0);
    s.lastBrkId = 1737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1737]) return breakpoint(s, 105, 1737, r0);
  case 105:
    r0 = pxsim_numops_toBoolDecr(s.right___18580);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_1 = game_Hitbox_right__P1968_mk(s);
    s.tmp_1.arg0 = s.hbox___18551;
    s.callLocIdx = 652; s.pc = 107; return s.tmp_1;
  case 107:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 653; s.pc = 106; return s.tmp_0;
  case 106:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    s.tmp_2 = Fx_sub__P154_mk(s);
    s.tmp_3 = game_Hitbox_left__P1966_mk(s);
    s.tmp_3.arg0 = s.hbox___18551;
    s.callLocIdx = 654; s.pc = 109; return s.tmp_3;
  case 109:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 655; s.pc = 108; return s.tmp_2;
  case 108:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P151_mk(s);
    s.tmp_6 = Fx_add__P152_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 656; s.pc = 111; return s.tmp_6;
  case 111:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___18554;
    s.callLocIdx = 657; s.pc = 110; return s.tmp_5;
  case 110:
    r0 = s.retval;
    s.x0___18584 = (r0);
    s.lastBrkId = 1738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1738]) return breakpoint(s, 112, 1738, r0);
  case 112:
    r0 = pxsim_Array__mk();
    s.collidedTiles___18599 = (r0);
    s.lastBrkId = 1739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1739]) return breakpoint(s, 113, 1739, r0);
  case 113:
    s.tmp_0 = Fx_sub__P154_mk(s);
    s.tmp_1 = game_Hitbox_top__P1967_mk(s);
    s.tmp_1.arg0 = s.hbox___18551;
    s.callLocIdx = 658; s.pc = 115; return s.tmp_1;
  case 115:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.yDiff___18568;
    s.callLocIdx = 659; s.pc = 114; return s.tmp_0;
  case 114:
    r0 = s.retval;
    s.y___18601 = (r0);
    s.lastBrkId = 1740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1740]) return breakpoint(s, 116, 1740, r0);
  case 116:
  case 9:
    s.lastBrkId = 1741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1741]) return breakpoint(s, 117, 1741, r0);
  case 117:
    s.tmp_1 = r0 = s.y___18601;
    s.tmp_3 = Fx_iadd__P153_mk(s);
    s.tmp_3.arg0 = s.tileSize___18557;
    s.tmp_4 = Fx_sub__P154_mk(s);
    s.tmp_5 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_5.arg0 = s.hbox___18551;
    s.callLocIdx = 660; s.pc = 120; return s.tmp_5;
  case 120:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.yDiff___18568;
    s.callLocIdx = 661; s.pc = 119; return s.tmp_4;
  case 119:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 662; s.pc = 118; return s.tmp_3;
  case 118:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1742]) return breakpoint(s, 121, 1742, r0);
  case 121:
    s.tmp_6 = Fx_toIntShifted__P151_mk(s);
    s.tmp_7 = Fx_add__P152_mk(s);
    s.tmp_8 = Fx_min__P161_mk(s);
    s.tmp_8.arg0 = s.y___18601;
    s.tmp_9 = Fx_sub__P154_mk(s);
    s.tmp_10 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_10.arg0 = s.hbox___18551;
    s.callLocIdx = 663; s.pc = 126; return s.tmp_10;
  case 126:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = s.yDiff___18568;
    s.callLocIdx = 664; s.pc = 125; return s.tmp_9;
  case 125:
    r0 = s.retval;
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 665; s.pc = 124; return s.tmp_8;
  case 124:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 128;
    s.callLocIdx = 666; s.pc = 123; return s.tmp_7;
  case 123:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tileScale___18554;
    s.callLocIdx = 667; s.pc = 122; return s.tmp_6;
  case 122:
    r0 = s.retval;
    s.y0___18615 = (r0);
    s.lastBrkId = 1743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1743]) return breakpoint(s, 127, 1743, r0);
  case 127:
    s.tmp_1 = tiles_TileMap_isObstacle__P2336_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___18584;
    s.tmp_1.arg2 = s.y0___18615;
    s.callLocIdx = 668; s.pc = 128; return s.tmp_1;
  case 128:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1744]) return breakpoint(s, 129, 1744, r0);
  case 129:
    s.tmp_2 = tiles_TileMap_getObstacle__P2337_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___18584;
    s.tmp_2.arg2 = s.y0___18615;
    s.callLocIdx = 669; s.pc = 130; return s.tmp_2;
  case 130:
    r0 = s.retval;
    s.obstacle___18631 = (r0);
    s.lastBrkId = 1745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1745]) return breakpoint(s, 131, 1745, r0);
  case 131:
    r0 = pxsim_pxtcore_mkAction(1, inline__P18639);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___18631);
    s.tmp_4 = helpers_arraySome__P105_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___18599;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 670; s.pc = 132; return s.tmp_4;
  case 132:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1746]) return breakpoint(s, 133, 1746, r0);
  case 133:
    r0 = pxsim_Array__push(s.collidedTiles___18599, s.obstacle___18631);
  case 10:
  case 11:
    { step = 13; continue; }
  case 12:
    s.lastBrkId = 1747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1747]) return breakpoint(s, 134, 1747, r0);
  case 134:
    s.tmp_0 = r0 = s.overlappedTiles___18575;
    s.tmp_2 = tiles_TileMap_getTile__P2329_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___18584;
    s.tmp_2.arg2 = s.y0___18615;
    s.callLocIdx = 671; s.pc = 135; return s.tmp_2;
  case 135:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
  case 13:
    s.lastBrkId = 1748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1748]) return breakpoint(s, 136, 1748, r0);
  case 136:
    s.tmp_0 = Fx_iadd__P153_mk(s);
    s.tmp_0.arg0 = s.tileSize___18557;
    s.tmp_0.arg1 = s.y___18601;
    s.callLocIdx = 672; s.pc = 137; return s.tmp_0;
  case 137:
    r0 = s.retval;
    s.y___18601 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1749]) return breakpoint(s, 138, 1749, r0);
  case 138:
    r0 = pxsim_Array__length(s.collidedTiles___18599);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1750]) return breakpoint(s, 139, 1750, r0);
  case 139:
    r0 = pxsim_numops_toBoolDecr(s.right___18580);
    if (!r0) { step = 15; continue; }
    r0 = 2;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___18665 = (s.tmp_1);
    s.lastBrkId = 1751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1751]) return breakpoint(s, 140, 1751, r0);
  case 140:
    r0 = pxsim_numops_toBoolDecr(s.right___18580);
    if (!r0) { step = 17; continue; }
    s.tmp_0 = Fx_sub__P154_mk(s);
    s.tmp_1 = Fx8__P144_mk(s);
    r0 = (s.x0___18584 << s.tileScale___18554);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 673; s.pc = 142; return s.tmp_1;
  case 142:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___18551.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 674; s.pc = 141; return s.tmp_0;
  case 141:
    r0 = s.retval;
    { step = 18; continue; }
  case 17:
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = (s.x0___18584 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___18554);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 675; s.pc = 143; return s.tmp_2;
  case 143:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___18528;
    s.tmp_7 = Fx_sub__P154_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___18551.fields["ox"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 676; s.pc = 144; return s.tmp_7;
  case 144:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_x"] = (s.tmp_6);
    s.lastBrkId = 1752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1752]) return breakpoint(s, 145, 1752, r0);
  case 145:
    s.tile___18691 = (undefined);
    s.unnamed2884___U15 = (s.collidedTiles___18599);
    s.unnamed2885___U16 = (0);
    s.lastBrkId = 1753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1753]) return breakpoint(s, 146, 1753, r0);
  case 146:
  case 19:
    s.tmp_0 = r0 = s.unnamed2885___U16;
    r0 = pxsim_Array__length(s.unnamed2884___U15);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2884___U15, s.unnamed2885___U16);
    s.tile___18691 = (r0);
    s.lastBrkId = 1754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1754]) return breakpoint(s, 147, 1754, r0);
  case 147:
    s.tmp_2 = Sprite_registerObstacle__P2085_mk(s);
    s.tmp_2.arg0 = s.s___18528;
    s.tmp_2.arg1 = s.collisionDirection___18665;
    s.tmp_2.arg2 = s.tile___18691;
    s.tmp_2.arg3 = s.arg2;
    s.callLocIdx = 677; s.pc = 148; return s.tmp_2;
  case 148:
    r0 = s.retval;
    r0 = (s.unnamed2885___U16 + 1);
    s.unnamed2885___U16 = (r0);
    { step = 19; continue; }
  case 20:
    s.unnamed2884___U15 = (undefined);
    s.lastBrkId = 1755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1755]) return breakpoint(s, 149, 1755, r0);
  case 149:
    r0 = s.s___18528.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1756]) return breakpoint(s, 150, 1756, r0);
  case 150:
    s.tmp_2 = Sprite_destroy__P2087_mk(s);
    s.tmp_2.arg0 = s.s___18528;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 678; s.pc = 151; return s.tmp_2;
  case 151:
    r0 = s.retval;
    { step = 36; continue; }
  case 21:
    s.lastBrkId = 1757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1757]) return breakpoint(s, 152, 1757, r0);
  case 152:
    r0 = s.s___18528.fields["_vx"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 1758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1758]) return breakpoint(s, 153, 1758, r0);
  case 153:
    r0 = s.s___18528.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 30; continue; }
    s.lastBrkId = 1759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1759]) return breakpoint(s, 154, 1759, r0);
  case 154:
    r0 = pxsim_numops_toBoolDecr(s.right___18580);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 22; continue; }
    r0 = s.tmp_5;
    { step = 23; continue; }
  case 22:
    s.tmp_8 = Sprite_vx__P2029_mk(s);
    s.tmp_8.arg0 = s.s___18528;
    s.callLocIdx = 679; s.pc = 155; return s.tmp_8;
  case 155:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
  case 23:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 24; continue; }
    r0 = s.tmp_9;
    { step = 27; continue; }
  case 24:
    s.tmp_10 = r0 = s.right___18580;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 25; continue; }
    r0 = s.tmp_10;
    { step = 26; continue; }
  case 25:
    s.tmp_12 = Sprite_vx__P2029_mk(s);
    s.tmp_12.arg0 = s.s___18528;
    s.callLocIdx = 680; s.pc = 156; return s.tmp_12;
  case 156:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 > 0);
  case 26:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = s.tmp_13;
  case 27:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    if (!r0) { step = 28; continue; }
    s.lastBrkId = 1760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1760]) return breakpoint(s, 157, 1760, r0);
  case 157:
    s.tmp_15 = r0 = s.s___18528;
    s.tmp_17 = Fx_neg__P150_mk(s);
    r0 = s.s___18528.fields["_vx"];
    s.tmp_17.arg0 = r0;
    s.callLocIdx = 681; s.pc = 158; return s.tmp_17;
  case 158:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["_vx"] = (s.tmp_16);
    s.lastBrkId = 1761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1761]) return breakpoint(s, 159, 1761, r0);
  case 159:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.arg1.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 682; s.pc = 160; return s.tmp_2;
  case 160:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
    s.lastBrkId = 1762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1762]) return breakpoint(s, 161, 1762, r0);
  case 161:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.arg1.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 683; s.pc = 162; return s.tmp_2;
  case 162:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
  case 28:
  case 29:
    { step = 31; continue; }
  case 30:
    s.lastBrkId = 1763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1763]) return breakpoint(s, 163, 1763, r0);
  case 163:
    r0 = (s.arg1).fields["dx"] = (0);
    s.lastBrkId = 1764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1764]) return breakpoint(s, 164, 1764, r0);
  case 164:
    r0 = (s.s___18528).fields["_vx"] = (0);
  case 31:
    { step = 35; continue; }
  case 32:
    s.lastBrkId = 1765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1765]) return breakpoint(s, 165, 1765, r0);
  case 165:
    s.tmp_2 = Math_sign__P124_mk(s);
    s.tmp_3 = Fx_toInt__P165_mk(s);
    r0 = s.s___18528.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 684; s.pc = 167; return s.tmp_3;
  case 167:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 685; s.pc = 166; return s.tmp_2;
  case 166:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P124_mk(s);
    s.tmp_6 = Fx_toInt__P165_mk(s);
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 686; s.pc = 169; return s.tmp_6;
  case 169:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 687; s.pc = 168; return s.tmp_5;
  case 168:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 1766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1766]) return breakpoint(s, 170, 1766, r0);
  case 170:
    r0 = (s.arg1).fields["dx"] = (0);
  case 33:
  case 34:
  case 35:
  case 36:
  case 37:
  case 38:
  case 39:
  case 40:
    s.lastBrkId = 1767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1767]) return breakpoint(s, 171, 1767, r0);
  case 171:
    r0 = (s.yDiff___18568 !== 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 73; continue; }
    s.lastBrkId = 1768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1768]) return breakpoint(s, 172, 1768, r0);
  case 172:
    r0 = (s.yDiff___18568 > 0);
    s.down___18769 = (r0);
    s.lastBrkId = 1769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1769]) return breakpoint(s, 173, 1769, r0);
  case 173:
    r0 = pxsim_numops_toBoolDecr(s.down___18769);
    if (!r0) { step = 41; continue; }
    s.tmp_0 = Fx_add__P152_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_1.arg0 = s.hbox___18551;
    s.callLocIdx = 688; s.pc = 175; return s.tmp_1;
  case 175:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 689; s.pc = 174; return s.tmp_0;
  case 174:
    r0 = s.retval;
    { step = 42; continue; }
  case 41:
    s.tmp_2 = Fx_sub__P154_mk(s);
    s.tmp_3 = game_Hitbox_top__P1967_mk(s);
    s.tmp_3.arg0 = s.hbox___18551;
    s.callLocIdx = 690; s.pc = 177; return s.tmp_3;
  case 177:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 691; s.pc = 176; return s.tmp_2;
  case 176:
    r0 = s.retval;
  case 42:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P151_mk(s);
    s.tmp_6 = Fx_add__P152_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 692; s.pc = 179; return s.tmp_6;
  case 179:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___18554;
    s.callLocIdx = 693; s.pc = 178; return s.tmp_5;
  case 178:
    r0 = s.retval;
    s.y0___18773 = (r0);
    s.lastBrkId = 1770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1770]) return breakpoint(s, 180, 1770, r0);
  case 180:
    r0 = pxsim_Array__mk();
    s.collidedTiles___18788 = (r0);
    s.lastBrkId = 1771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1771]) return breakpoint(s, 181, 1771, r0);
  case 181:
    r0 = pxsim_Array__mk();
    s.overlappedTiles___18790 = (r0);
    s.lastBrkId = 1772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1772]) return breakpoint(s, 182, 1772, r0);
  case 182:
    s.tmp_0 = game_Hitbox_left__P1966_mk(s);
    s.tmp_0.arg0 = s.hbox___18551;
    s.callLocIdx = 694; s.pc = 183; return s.tmp_0;
  case 183:
    r0 = s.retval;
    s.x___18792 = (r0);
    s.lastBrkId = 1773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1773]) return breakpoint(s, 184, 1773, r0);
  case 184:
  case 43:
    s.lastBrkId = 1774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1774]) return breakpoint(s, 185, 1774, r0);
  case 185:
    s.tmp_1 = r0 = s.x___18792;
    s.tmp_3 = Fx_iadd__P153_mk(s);
    s.tmp_3.arg0 = s.tileSize___18557;
    s.tmp_4 = game_Hitbox_right__P1968_mk(s);
    s.tmp_4.arg0 = s.hbox___18551;
    s.callLocIdx = 695; s.pc = 187; return s.tmp_4;
  case 187:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 696; s.pc = 186; return s.tmp_3;
  case 186:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 48; continue; }
    s.lastBrkId = 1775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1775]) return breakpoint(s, 188, 1775, r0);
  case 188:
    s.tmp_5 = Fx_toIntShifted__P151_mk(s);
    s.tmp_6 = Fx_add__P152_mk(s);
    s.tmp_7 = Fx_min__P161_mk(s);
    s.tmp_7.arg0 = s.x___18792;
    s.tmp_8 = game_Hitbox_right__P1968_mk(s);
    s.tmp_8.arg0 = s.hbox___18551;
    s.callLocIdx = 697; s.pc = 192; return s.tmp_8;
  case 192:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 698; s.pc = 191; return s.tmp_7;
  case 191:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 699; s.pc = 190; return s.tmp_6;
  case 190:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___18554;
    s.callLocIdx = 700; s.pc = 189; return s.tmp_5;
  case 189:
    r0 = s.retval;
    s.x0___18802 = (r0);
    s.lastBrkId = 1776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1776]) return breakpoint(s, 193, 1776, r0);
  case 193:
    s.tmp_1 = tiles_TileMap_isObstacle__P2336_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___18802;
    s.tmp_1.arg2 = s.y0___18773;
    s.callLocIdx = 701; s.pc = 194; return s.tmp_1;
  case 194:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 46; continue; }
    s.lastBrkId = 1777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1777]) return breakpoint(s, 195, 1777, r0);
  case 195:
    s.tmp_2 = tiles_TileMap_getObstacle__P2337_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___18802;
    s.tmp_2.arg2 = s.y0___18773;
    s.callLocIdx = 702; s.pc = 196; return s.tmp_2;
  case 196:
    r0 = s.retval;
    s.obstacle___18816 = (r0);
    s.lastBrkId = 1778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1778]) return breakpoint(s, 197, 1778, r0);
  case 197:
    r0 = pxsim_pxtcore_mkAction(1, inline__P18824);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___18816);
    s.tmp_4 = helpers_arraySome__P105_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___18788;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 703; s.pc = 198; return s.tmp_4;
  case 198:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 44; continue; }
    s.lastBrkId = 1779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1779]) return breakpoint(s, 199, 1779, r0);
  case 199:
    r0 = pxsim_Array__push(s.collidedTiles___18788, s.obstacle___18816);
  case 44:
  case 45:
    { step = 47; continue; }
  case 46:
    s.lastBrkId = 1780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1780]) return breakpoint(s, 200, 1780, r0);
  case 200:
    s.tmp_0 = r0 = s.overlappedTiles___18790;
    s.tmp_2 = tiles_TileMap_getTile__P2329_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___18802;
    s.tmp_2.arg2 = s.y0___18773;
    s.callLocIdx = 704; s.pc = 201; return s.tmp_2;
  case 201:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
  case 47:
    s.lastBrkId = 1781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1781]) return breakpoint(s, 202, 1781, r0);
  case 202:
    s.tmp_0 = Fx_iadd__P153_mk(s);
    s.tmp_0.arg0 = s.tileSize___18557;
    s.tmp_0.arg1 = s.x___18792;
    s.callLocIdx = 705; s.pc = 203; return s.tmp_0;
  case 203:
    r0 = s.retval;
    s.x___18792 = (r0);
    { step = 43; continue; }
  case 48:
    s.lastBrkId = 1782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1782]) return breakpoint(s, 204, 1782, r0);
  case 204:
    r0 = pxsim_Array__length(s.collidedTiles___18788);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 71; continue; }
    s.lastBrkId = 1783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1783]) return breakpoint(s, 205, 1783, r0);
  case 205:
    r0 = pxsim_numops_toBoolDecr(s.down___18769);
    if (!r0) { step = 49; continue; }
    r0 = 3;
    { step = 50; continue; }
  case 49:
    r0 = 1;
  case 50:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___18850 = (s.tmp_1);
    s.lastBrkId = 1784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1784]) return breakpoint(s, 206, 1784, r0);
  case 206:
    r0 = pxsim_numops_toBoolDecr(s.down___18769);
    if (!r0) { step = 51; continue; }
    s.tmp_0 = Fx_sub__P154_mk(s);
    s.tmp_1 = Fx8__P144_mk(s);
    r0 = (s.y0___18773 << s.tileScale___18554);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 706; s.pc = 208; return s.tmp_1;
  case 208:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___18551.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 707; s.pc = 207; return s.tmp_0;
  case 207:
    r0 = s.retval;
    { step = 52; continue; }
  case 51:
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = (s.y0___18773 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___18554);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 708; s.pc = 209; return s.tmp_2;
  case 209:
    r0 = s.retval;
  case 52:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___18528;
    s.tmp_7 = Fx_sub__P154_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___18551.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 709; s.pc = 210; return s.tmp_7;
  case 210:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 1785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1785]) return breakpoint(s, 211, 1785, r0);
  case 211:
    s.tile___18876 = (undefined);
    s.unnamed2886___U26 = (s.collidedTiles___18788);
    s.unnamed2887___U27 = (0);
    s.lastBrkId = 1786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1786]) return breakpoint(s, 212, 1786, r0);
  case 212:
  case 53:
    s.tmp_0 = r0 = s.unnamed2887___U27;
    r0 = pxsim_Array__length(s.unnamed2886___U26);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 54; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2886___U26, s.unnamed2887___U27);
    s.tile___18876 = (r0);
    s.lastBrkId = 1787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1787]) return breakpoint(s, 213, 1787, r0);
  case 213:
    s.tmp_2 = Sprite_registerObstacle__P2085_mk(s);
    s.tmp_2.arg0 = s.s___18528;
    s.tmp_2.arg1 = s.collisionDirection___18850;
    s.tmp_2.arg2 = s.tile___18876;
    s.tmp_2.arg3 = s.arg2;
    s.callLocIdx = 710; s.pc = 214; return s.tmp_2;
  case 214:
    r0 = s.retval;
    r0 = (s.unnamed2887___U27 + 1);
    s.unnamed2887___U27 = (r0);
    { step = 53; continue; }
  case 54:
    s.unnamed2886___U26 = (undefined);
    s.lastBrkId = 1788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1788]) return breakpoint(s, 215, 1788, r0);
  case 215:
    r0 = s.s___18528.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 55; continue; }
    s.lastBrkId = 1789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1789]) return breakpoint(s, 216, 1789, r0);
  case 216:
    s.tmp_2 = Sprite_destroy__P2087_mk(s);
    s.tmp_2.arg0 = s.s___18528;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 711; s.pc = 217; return s.tmp_2;
  case 217:
    r0 = s.retval;
    { step = 70; continue; }
  case 55:
    s.lastBrkId = 1790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1790]) return breakpoint(s, 218, 1790, r0);
  case 218:
    r0 = s.s___18528.fields["_vy"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 66; continue; }
    s.lastBrkId = 1791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1791]) return breakpoint(s, 219, 1791, r0);
  case 219:
    r0 = s.s___18528.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 64; continue; }
    s.lastBrkId = 1792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1792]) return breakpoint(s, 220, 1792, r0);
  case 220:
    r0 = pxsim_numops_toBoolDecr(s.down___18769);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 56; continue; }
    r0 = s.tmp_5;
    { step = 57; continue; }
  case 56:
    s.tmp_8 = Sprite_vy__P2031_mk(s);
    s.tmp_8.arg0 = s.s___18528;
    s.callLocIdx = 712; s.pc = 221; return s.tmp_8;
  case 221:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
  case 57:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 58; continue; }
    r0 = s.tmp_9;
    { step = 61; continue; }
  case 58:
    s.tmp_10 = r0 = s.down___18769;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 59; continue; }
    r0 = s.tmp_10;
    { step = 60; continue; }
  case 59:
    s.tmp_12 = Sprite_vy__P2031_mk(s);
    s.tmp_12.arg0 = s.s___18528;
    s.callLocIdx = 713; s.pc = 222; return s.tmp_12;
  case 222:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 > 0);
  case 60:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = s.tmp_13;
  case 61:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    if (!r0) { step = 62; continue; }
    s.lastBrkId = 1793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1793]) return breakpoint(s, 223, 1793, r0);
  case 223:
    s.tmp_15 = r0 = s.s___18528;
    s.tmp_17 = Fx_neg__P150_mk(s);
    r0 = s.s___18528.fields["_vy"];
    s.tmp_17.arg0 = r0;
    s.callLocIdx = 714; s.pc = 224; return s.tmp_17;
  case 224:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["_vy"] = (s.tmp_16);
    s.lastBrkId = 1794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1794]) return breakpoint(s, 225, 1794, r0);
  case 225:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.arg1.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 715; s.pc = 226; return s.tmp_2;
  case 226:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
    s.lastBrkId = 1795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1795]) return breakpoint(s, 227, 1795, r0);
  case 227:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.arg1.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 716; s.pc = 228; return s.tmp_2;
  case 228:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
  case 62:
  case 63:
    { step = 65; continue; }
  case 64:
    s.lastBrkId = 1796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1796]) return breakpoint(s, 229, 1796, r0);
  case 229:
    r0 = (s.arg1).fields["dy"] = (0);
    s.lastBrkId = 1797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1797]) return breakpoint(s, 230, 1797, r0);
  case 230:
    r0 = (s.s___18528).fields["_vy"] = (0);
  case 65:
    { step = 69; continue; }
  case 66:
    s.lastBrkId = 1798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1798]) return breakpoint(s, 231, 1798, r0);
  case 231:
    s.tmp_2 = Math_sign__P124_mk(s);
    s.tmp_3 = Fx_toInt__P165_mk(s);
    r0 = s.s___18528.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 717; s.pc = 233; return s.tmp_3;
  case 233:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 718; s.pc = 232; return s.tmp_2;
  case 232:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P124_mk(s);
    s.tmp_6 = Fx_toInt__P165_mk(s);
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 719; s.pc = 235; return s.tmp_6;
  case 235:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 720; s.pc = 234; return s.tmp_5;
  case 234:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 67; continue; }
    s.lastBrkId = 1799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1799]) return breakpoint(s, 236, 1799, r0);
  case 236:
    r0 = (s.arg1).fields["dy"] = (0);
  case 67:
  case 68:
  case 69:
  case 70:
  case 71:
  case 72:
  case 73:
  case 74:
    s.lastBrkId = 1800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1800]) return breakpoint(s, 237, 1800, r0);
  case 237:
    s.tmp_0 = game_Hitbox_left__P1966_mk(s);
    s.tmp_0.arg0 = s.hbox___18551;
    s.callLocIdx = 721; s.pc = 238; return s.tmp_0;
  case 238:
    r0 = s.retval;
    s.x___18951 = (r0);
    s.lastBrkId = 1801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1801]) return breakpoint(s, 239, 1801, r0);
  case 239:
  case 75:
    s.lastBrkId = 1802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1802]) return breakpoint(s, 240, 1802, r0);
  case 240:
    s.tmp_1 = r0 = s.x___18951;
    s.tmp_3 = Fx_iadd__P153_mk(s);
    s.tmp_3.arg0 = s.tileSize___18557;
    s.tmp_4 = game_Hitbox_right__P1968_mk(s);
    s.tmp_4.arg0 = s.hbox___18551;
    s.callLocIdx = 722; s.pc = 242; return s.tmp_4;
  case 242:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 723; s.pc = 241; return s.tmp_3;
  case 241:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 80; continue; }
    s.lastBrkId = 1803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1803]) return breakpoint(s, 243, 1803, r0);
  case 243:
    s.tmp_5 = Fx_toIntShifted__P151_mk(s);
    s.tmp_6 = Fx_add__P152_mk(s);
    s.tmp_7 = Fx_min__P161_mk(s);
    s.tmp_7.arg0 = s.x___18951;
    s.tmp_8 = game_Hitbox_right__P1968_mk(s);
    s.tmp_8.arg0 = s.hbox___18551;
    s.callLocIdx = 724; s.pc = 247; return s.tmp_8;
  case 247:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 725; s.pc = 246; return s.tmp_7;
  case 246:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 726; s.pc = 245; return s.tmp_6;
  case 245:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___18554;
    s.callLocIdx = 727; s.pc = 244; return s.tmp_5;
  case 244:
    r0 = s.retval;
    s.x0___18961 = (r0);
    s.lastBrkId = 1804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1804]) return breakpoint(s, 248, 1804, r0);
  case 248:
    s.tmp_0 = game_Hitbox_top__P1967_mk(s);
    s.tmp_0.arg0 = s.hbox___18551;
    s.callLocIdx = 728; s.pc = 249; return s.tmp_0;
  case 249:
    r0 = s.retval;
    s.y___18971 = (r0);
    s.lastBrkId = 1805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1805]) return breakpoint(s, 250, 1805, r0);
  case 250:
  case 76:
    s.lastBrkId = 1806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1806]) return breakpoint(s, 251, 1806, r0);
  case 251:
    s.tmp_1 = r0 = s.y___18971;
    s.tmp_3 = Fx_iadd__P153_mk(s);
    s.tmp_3.arg0 = s.tileSize___18557;
    s.tmp_4 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_4.arg0 = s.hbox___18551;
    s.callLocIdx = 729; s.pc = 253; return s.tmp_4;
  case 253:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 730; s.pc = 252; return s.tmp_3;
  case 252:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 79; continue; }
    s.lastBrkId = 1807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1807]) return breakpoint(s, 254, 1807, r0);
  case 254:
    s.tmp_5 = Fx_toIntShifted__P151_mk(s);
    s.tmp_6 = Fx_add__P152_mk(s);
    s.tmp_7 = Fx_min__P161_mk(s);
    s.tmp_7.arg0 = s.y___18971;
    s.tmp_8 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_8.arg0 = s.hbox___18551;
    s.callLocIdx = 731; s.pc = 258; return s.tmp_8;
  case 258:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 732; s.pc = 257; return s.tmp_7;
  case 257:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 733; s.pc = 256; return s.tmp_6;
  case 256:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___18554;
    s.callLocIdx = 734; s.pc = 255; return s.tmp_5;
  case 255:
    r0 = s.retval;
    s.y0___18981 = (r0);
    s.lastBrkId = 1808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1808]) return breakpoint(s, 259, 1808, r0);
  case 259:
    s.tmp_3 = tiles_TileMap_isObstacle__P2336_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.x0___18961;
    s.tmp_3.arg2 = s.y0___18981;
    s.callLocIdx = 735; s.pc = 260; return s.tmp_3;
  case 260:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 77; continue; }
    s.lastBrkId = 1809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1809]) return breakpoint(s, 261, 1809, r0);
  case 261:
    s.tmp_4 = r0 = s.overlappedTiles___18575;
    s.tmp_6 = tiles_TileMap_getTile__P2329_mk(s);
    s.tmp_6.arg0 = s.arg2;
    s.tmp_6.arg1 = s.x0___18961;
    s.tmp_6.arg2 = s.y0___18981;
    s.callLocIdx = 736; s.pc = 262; return s.tmp_6;
  case 262:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.tmp_5);
  case 77:
  case 78:
    s.lastBrkId = 1810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1810]) return breakpoint(s, 263, 1810, r0);
  case 263:
    s.tmp_0 = Fx_iadd__P153_mk(s);
    s.tmp_0.arg0 = s.tileSize___18557;
    s.tmp_0.arg1 = s.y___18971;
    s.callLocIdx = 737; s.pc = 264; return s.tmp_0;
  case 264:
    r0 = s.retval;
    s.y___18971 = (r0);
    { step = 76; continue; }
  case 79:
    s.lastBrkId = 1811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1811]) return breakpoint(s, 265, 1811, r0);
  case 265:
    s.tmp_0 = Fx_iadd__P153_mk(s);
    s.tmp_0.arg0 = s.tileSize___18557;
    s.tmp_0.arg1 = s.x___18951;
    s.callLocIdx = 738; s.pc = 266; return s.tmp_0;
  case 266:
    r0 = s.retval;
    s.x___18951 = (r0);
    { step = 75; continue; }
  case 80:
    s.lastBrkId = 1812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1812]) return breakpoint(s, 267, 1812, r0);
  case 267:
    r0 = pxsim_Array__length(s.overlappedTiles___18575);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 81; continue; }
    s.lastBrkId = 1813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1813]) return breakpoint(s, 268, 1813, r0);
  case 268:
    s.tmp_1 = ArcadePhysicsEngine_tilemapOverlaps__P3932_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.s___18528;
    s.tmp_1.arg2 = s.overlappedTiles___18575;
    s.callLocIdx = 739; s.pc = 269; return s.tmp_1;
  case 269:
    r0 = s.retval;
  case 81:
  case 82:
  case 83:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions__P3931.info = {"start":11859,"length":8619,"line":370,"column":4,"endLine":606,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapCollisions","argumentNames":["this","movingSprite","tm"]}

function ArcadePhysicsEngine_tilemapCollisions__P3931_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions__P3931, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  s___18528: undefined,
  hbox___18551: undefined,
  tileScale___18554: undefined,
  tileSize___18557: undefined,
  xDiff___18561: undefined,
  yDiff___18568: undefined,
  overlappedTiles___18575: undefined,
  right___18580: undefined,
  x0___18584: undefined,
  collidedTiles___18599: undefined,
  y___18601: undefined,
  y0___18615: undefined,
  obstacle___18631: undefined,
  collisionDirection___18665: undefined,
  tile___18691: undefined,
  unnamed2884___U15: undefined,
  unnamed2885___U16: undefined,
  down___18769: undefined,
  y0___18773: undefined,
  collidedTiles___18788: undefined,
  overlappedTiles___18790: undefined,
  x___18792: undefined,
  x0___18802: undefined,
  obstacle___18816: undefined,
  collisionDirection___18850: undefined,
  tile___18876: undefined,
  unnamed2886___U26: undefined,
  unnamed2887___U27: undefined,
  x___18951: undefined,
  x0___18961: undefined,
  y___18971: undefined,
  y0___18981: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P18639(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P18639.info = {"start":13980,"length":39,"line":434,"column":44,"endLine":434,"endColumn":83,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function inline__P18639_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P18639, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P18824(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P18824.info = {"start":17215,"length":39,"line":516,"column":44,"endLine":516,"endColumn":83,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function inline__P18824_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P18824, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps__P3932(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.alreadyHandled___19020 = undefined;
    s.tile___19023 = undefined;
    s.unnamed2888___U2 = undefined;
    s.unnamed2889___U3 = undefined;
    s.tileOverlapHandlers___19044 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1814]) return breakpoint(s, 8, 1814, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.alreadyHandled___19020 = (r0);
    s.lastBrkId = 1815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1815]) return breakpoint(s, 9, 1815, r0);
  case 9:
    s.tile___19023 = (undefined);
    s.unnamed2888___U2 = (s.arg2);
    s.unnamed2889___U3 = (0);
    s.lastBrkId = 1816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1816]) return breakpoint(s, 10, 1816, r0);
  case 10:
  case 1:
    s.tmp_0 = r0 = s.unnamed2889___U3;
    r0 = pxsim_Array__length(s.unnamed2888___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2888___U2, s.unnamed2889___U3);
    s.tile___19023 = (r0);
    s.lastBrkId = 1817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1817]) return breakpoint(s, 11, 1817, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, inline__P19027);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.tile___19023);
    s.tmp_4 = helpers_arraySome__P105_mk(s);
    s.tmp_4.arg0 = s.alreadyHandled___19020;
    s.tmp_4.arg1 = s.tmp_2;
    s.callLocIdx = 744; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1818]) return breakpoint(s, 13, 1818, r0);
  case 13:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1819]) return breakpoint(s, 14, 1819, r0);
  case 14:
    r0 = pxsim_Array__push(s.alreadyHandled___19020, s.tile___19023);
    s.lastBrkId = 1820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1820]) return breakpoint(s, 15, 1820, r0);
  case 15:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 745; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = r0.fields["tileOverlapHandlers"];
    s.tileOverlapHandlers___19044 = (r0);
    s.lastBrkId = 1821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1821]) return breakpoint(s, 17, 1821, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.tileOverlapHandlers___19044);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1822]) return breakpoint(s, 18, 1822, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(2, inline__P19052);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tile___19023);
    r0 = pxsim_pxtcore_mkAction(2, inline__P19068);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 1, s.tile___19023);
    s.tmp_2 = helpers_arrayForEach__P107_mk(s);
    s.tmp_3 = helpers_arrayFilter__P108_mk(s);
    s.tmp_3.arg0 = s.tileOverlapHandlers___19044;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 748; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 750; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = (s.unnamed2889___U3 + 1);
    s.unnamed2889___U3 = (r0);
    { step = 1; continue; }
  case 7:
    s.unnamed2888___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps__P3932.info = {"start":20755,"length":699,"line":614,"column":4,"endLine":630,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapOverlaps","argumentNames":["this","sprite","overlappedTiles"]}

function ArcadePhysicsEngine_tilemapOverlaps__P3932_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps__P3932, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  alreadyHandled___19020: undefined,
  tile___19023: undefined,
  unnamed2888___U2: undefined,
  unnamed2889___U3: undefined,
  tileOverlapHandlers___19044: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P19027(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_2 = tiles_Location_col__P2290_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 740; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_Location_col__P2290_mk(s);
    s.tmp_4.arg0 = s.caps[0];
    s.callLocIdx = 741; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 === s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = tiles_Location_row__P2291_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 742; s.pc = 5; return s.tmp_6;
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = tiles_Location_row__P2291_mk(s);
    s.tmp_8.arg0 = s.caps[0];
    s.callLocIdx = 743; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 === s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
inline__P19027.info = {"start":20968,"length":45,"line":618,"column":36,"endLine":618,"endColumn":81,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["l"]}

function inline__P19027_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19027, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function inline__P19052(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_1 = r0;
    s.tmp_3 = Sprite_kind__P2070_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.callLocIdx = 746; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["tileKind"];
    s.tmp_4 = r0;
    s.tmp_6 = tiles_getTileImage__P2345_mk(s);
    s.tmp_6.arg0 = s.caps[1];
    s.callLocIdx = 747; s.pc = 4; return s.tmp_6;
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.equals(s.tmp_4, s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
    return leave(s, r0)
  default: oops()
} } }
inline__P19052.info = {"start":21282,"length":81,"line":626,"column":28,"endLine":626,"endColumn":109,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19052_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19052, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function inline__P19068(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 749; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 749; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 749; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 749; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P19068.info = {"start":21394,"length":28,"line":627,"column":29,"endLine":627,"endColumn":57,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19068_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19068, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_getTileImage__P2345(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___19076 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2369]) return breakpoint(s, 6, 2369, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 983; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___19076 = (r0);
    s.lastBrkId = 2370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2370]) return breakpoint(s, 8, 2370, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___19076.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2371]) return breakpoint(s, 9, 2371, r0);
  case 9:
    r0 = pxsim.image.ofBuffer(_hex19086);
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2372]) return breakpoint(s, 10, 2372, r0);
  case 10:
    s.tmp_5 = tiles_TileMap_getTileImage__P2339_mk(s);
    r0 = s.scene___19076.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_6 = tiles_Location_tileSet__P2295_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 984; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 985; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_getTileImage__P2345.info = {"start":16636,"length":207,"line":525,"column":4,"endLine":529,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["loc"]}

function tiles_getTileImage__P2345_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_getTileImage__P2345, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___19076: undefined,
  arg0: undefined,
} }

const _hex19086 = pxsim.BufferMethods.createBufferFromHex("8704000000000000")




function tiles_TileMap_getTileImage__P2339(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2366]) return breakpoint(s, 1, 2366, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2313_mk(s);
    s.tmp_1 = tiles_TileMap_data__P4000_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 979; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 980; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileImage__P2339.info = {"start":13699,"length":96,"line":442,"column":8,"endLine":444,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMap_getTileImage__P2339_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileImage__P2339, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_Location_tileSet__P2295(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2223]) return breakpoint(s, 1, 2223, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_getTileIndex__P2330_mk(s);
    r0 = s.arg0.fields["tileMap"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_col"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["_row"];
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 900; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileSet__P2295.info = {"start":981,"length":101,"line":43,"column":8,"endLine":45,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileSet","argumentNames":["this"]}
tiles_Location_tileSet__P2295.isGetter = true;

function tiles_Location_tileSet__P2295_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileSet__P2295, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_TileMap_getTileIndex__P2330(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2271]) return breakpoint(s, 1, 2271, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTile__P2310_mk(s);
    s.tmp_1 = tiles_TileMap_data__P4000_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 925; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 926; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileIndex__P2330.info = {"start":7380,"length":105,"line":273,"column":8,"endLine":275,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileIndex","argumentNames":["this","col","row"]}

function tiles_TileMap_getTileIndex__P2330_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileIndex__P2330, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_row__P2291(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2215]) return breakpoint(s, 1, 2215, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_row__P2291.info = {"start":467,"length":51,"line":23,"column":8,"endLine":25,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"row","argumentNames":["this"]}
tiles_Location_row__P2291.isGetter = true;

function tiles_Location_row__P2291_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_row__P2291, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_col__P2290(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2289_VT)) failedCast(r0);
    s.lastBrkId = 2214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2214]) return breakpoint(s, 1, 2214, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_col__P2290.info = {"start":406,"length":51,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"col","argumentNames":["this"]}
tiles_Location_col__P2290.isGetter = true;

function tiles_Location_col__P2290_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_col__P2290, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMap_getObstacle__P2337(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___19221 = undefined;
    s.tile___19233 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2347]) return breakpoint(s, 3, 2347, r0);
  case 3:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2316_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 959; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = tiles_TileMapData_getTile__P2310_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg1;
    s.tmp_2.arg2 = s.arg2;
    s.callLocIdx = 960; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.index___19221 = (s.tmp_3);
    s.lastBrkId = 2348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2348]) return breakpoint(s, 6, 2348, r0);
  case 6:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2313_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___19221;
    s.callLocIdx = 961; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tile___19233 = (r0);
    s.lastBrkId = 2349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2349]) return breakpoint(s, 8, 2349, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_StaticObstacle__C2146_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_StaticObstacle_constructor__P2152_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.tile___19233;
    s.tmp_2 = r0 = s.arg2;
    s.tmp_4 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 962; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.tmp_5 = r0 = s.arg1;
    s.tmp_7 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 963; s.pc = 11; return s.tmp_7;
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 << s.tmp_6);
    s.tmp_1.arg3 = r0;
    s.tmp_8 = tiles_TileMap_layer__P2325_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 964; s.pc = 12; return s.tmp_8;
  case 12:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_1.arg5 = s.index___19221;
    s.callLocIdx = 965; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getObstacle__P2337.info = {"start":12642,"length":410,"line":411,"column":8,"endLine":421,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_getObstacle__P2337_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getObstacle__P2337, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  index___19221: undefined,
  tile___19233: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_layer__P2325(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2267]) return breakpoint(s, 1, 2267, r0);
  case 1:
    r0 = s.arg0.fields["_layer"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_layer__P2325.info = {"start":6897,"length":63,"line":251,"column":8,"endLine":253,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"layer","argumentNames":["this"]}
tiles_TileMap_layer__P2325.isGetter = true;

function tiles_TileMap_layer__P2325_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_layer__P2325, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_StaticObstacle_constructor__P2152(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2146_VT)) failedCast(r0);
    s.lastBrkId = 1573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1573]) return breakpoint(s, 1, 1573, r0);
  case 1:
    r0 = (s.arg0).fields["image"] = (s.arg1);
    s.lastBrkId = 1574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1574]) return breakpoint(s, 2, 1574, r0);
  case 2:
    r0 = (s.arg0).fields["layer"] = (s.arg4);
    s.lastBrkId = 1575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1575]) return breakpoint(s, 3, 1575, r0);
  case 3:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 1576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1576]) return breakpoint(s, 4, 1576, r0);
  case 4:
    r0 = (s.arg0).fields["left"] = (s.arg3);
    s.lastBrkId = 1577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1577]) return breakpoint(s, 5, 1577, r0);
  case 5:
    r0 = (s.arg0).fields["tileIndex"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_constructor__P2152.info = {"start":563,"length":261,"line":28,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"inline","argumentNames":["this","image","top","left","layer","tileIndex"]}

function sprites_StaticObstacle_constructor__P2152_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_constructor__P2152, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function tiles_TileMap_isObstacle__P2336(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2342]) return breakpoint(s, 6, 2342, r0);
  case 6:
    s.tmp_3 = tiles_TileMap_enabled__P2327_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 956; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2343]) return breakpoint(s, 8, 2343, r0);
  case 8:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2344]) return breakpoint(s, 9, 2344, r0);
  case 9:
    s.tmp_5 = tiles_TileMapData_isOutsideMap__P2316_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.tmp_5.arg2 = s.arg2;
    s.callLocIdx = 957; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2345]) return breakpoint(s, 11, 2345, r0);
  case 11:
    r0 = true;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2346]) return breakpoint(s, 12, 2346, r0);
  case 12:
    s.tmp_6 = tiles_TileMapData_isWall__P2315_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.tmp_6.arg2 = s.arg2;
    s.callLocIdx = 958; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isObstacle__P2336.info = {"start":12421,"length":211,"line":404,"column":8,"endLine":409,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_isObstacle__P2336_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isObstacle__P2336, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isWall__P2315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2304_VT)) failedCast(r0);
    s.lastBrkId = 2253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2253]) return breakpoint(s, 1, 2253, r0);
  case 1:
    r0 = s.arg0.fields["layers"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_1, s.arg1, s.arg2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 2);
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isWall__P2315.info = {"start":5463,"length":107,"line":195,"column":8,"endLine":197,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isWall","argumentNames":["this","col","row"]}

function tiles_TileMapData_isWall__P2315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isWall__P2315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_getTile__P2329(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2270]) return breakpoint(s, 1, 2270, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C2289_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_Location_constructor__P2292_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg0;
    s.callLocIdx = 924; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTile__P2329.info = {"start":7259,"length":111,"line":269,"column":8,"endLine":271,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMap_getTile__P2329_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTile__P2329, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_registerObstacle__P2085(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.collisionHandlers___19127 = undefined;
    s.wallCollisionHandlers___19134 = undefined;
    s.wallHandlersToRun___19159 = undefined;
    s.asTileLocation___19172 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1391]) return breakpoint(s, 9, 1391, r0);
  case 9:
    r0 = s.arg0.fields["_obstacles"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    s.lastBrkId = 1392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1392]) return breakpoint(s, 10, 1392, r0);
  case 10:
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 432; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    r0 = r0.fields["collisionHandlers"];
    s.tmp_0 = r0;
    s.tmp_3 = if_tileIndex_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "tileIndex");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["tileIndex"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["tileIndex"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 433; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    s.collisionHandlers___19127 = (r0);
    s.lastBrkId = 1393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1393]) return breakpoint(s, 13, 1393, r0);
  case 13:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 434; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["wallCollisionHandlers"];
    s.wallCollisionHandlers___19134 = (r0);
    s.lastBrkId = 1394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1394]) return breakpoint(s, 15, 1394, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.collisionHandlers___19127);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1395]) return breakpoint(s, 16, 1395, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, inline__P19142);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P19148);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P107_mk(s);
    s.tmp_3 = helpers_arrayFilter__P108_mk(s);
    s.tmp_3.arg0 = s.collisionHandlers___19127;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 436; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 438; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1396]) return breakpoint(s, 19, 1396, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(s.wallCollisionHandlers___19134);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1397]) return breakpoint(s, 20, 1397, r0);
  case 20:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 439; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 1398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1398]) return breakpoint(s, 22, 1398, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, inline__P19161);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFilter__P108_mk(s);
    s.tmp_1.arg0 = s.wallCollisionHandlers___19134;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 441; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.wallHandlersToRun___19159 = (r0);
    s.lastBrkId = 1399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1399]) return breakpoint(s, 24, 1399, r0);
  case 24:
    r0 = pxsim_Array__length(s.wallHandlersToRun___19159);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1400]) return breakpoint(s, 25, 1400, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_getTile__P2329_mk(s);
    s.tmp_1.arg0 = s.arg3;
    s.tmp_3 = if_left_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "left");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["left"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["left"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 442; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_5.arg0 = s.arg3;
    s.callLocIdx = 443; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >> s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = if_top_1_mk(s);
    s.tmp_7.arg0 = s.arg2;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "top");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["top"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["top"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 444; s.pc = 29; return s.tmp_7; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    s.tmp_9 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_9.arg0 = s.arg3;
    s.callLocIdx = 445; s.pc = 30; return s.tmp_9;
  case 30:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_6 >> s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 446; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.asTileLocation___19172 = (r0);
    s.lastBrkId = 1401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1401]) return breakpoint(s, 31, 1401, r0);
  case 31:
    r0 = pxsim_pxtcore_mkAction(2, inline__P19188);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.asTileLocation___19172);
    s.tmp_1 = helpers_arrayForEach__P107_mk(s);
    s.tmp_1.arg0 = s.wallHandlersToRun___19159;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 448; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle__P2085.info = {"start":26932,"length":965,"line":817,"column":4,"endLine":837,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"registerObstacle","argumentNames":["this","direction","other","tm"]}

function Sprite_registerObstacle__P2085_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle__P2085, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  collisionHandlers___19127: undefined,
  wallCollisionHandlers___19134: undefined,
  wallHandlersToRun___19159: undefined,
  asTileLocation___19172: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P19142(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2070_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 435; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P19142.info = {"start":27330,"length":26,"line":824,"column":24,"endLine":824,"endColumn":50,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19142_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19142, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P19148(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 437; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 437; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 437; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 437; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P19148.info = {"start":27383,"length":20,"line":825,"column":25,"endLine":825,"endColumn":45,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19148_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19148, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P19161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2070_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 440; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P19161.info = {"start":27589,"length":32,"line":830,"column":24,"endLine":830,"endColumn":56,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P19188(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 447; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 447; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 447; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 447; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P19188.info = {"start":27829,"length":36,"line":834,"column":29,"endLine":834,"endColumn":65,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19188_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19188, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_min__P161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[266]) return breakpoint(s, 4, 266, r0);
  case 4:
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[267]) return breakpoint(s, 5, 267, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[268]) return breakpoint(s, 6, 268, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_min__P161.info = {"start":1675,"length":117,"line":50,"column":4,"endLine":55,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"min","argumentNames":["a","b"]}

function Fx_min__P161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_min__P161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_toIntShifted__P151(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[254]) return breakpoint(s, 1, 254, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 >> s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
Fx_toIntShifted__P151.info = {"start":404,"length":102,"line":17,"column":4,"endLine":19,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toIntShifted","argumentNames":["a","n"]}

function Fx_toIntShifted__P151_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toIntShifted__P151, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySome__P105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___19203 = undefined;
    s.i___19206 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[102]) return breakpoint(s, 6, 102, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___19203 = (r0);
    s.lastBrkId = 103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[103]) return breakpoint(s, 7, 103, r0);
  case 7:
    s.i___19206 = (0);
    s.lastBrkId = 104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[104]) return breakpoint(s, 8, 104, r0);
  case 8:
  case 1:
    s.lastBrkId = 105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[105]) return breakpoint(s, 9, 105, r0);
  case 9:
    r0 = (s.i___19206 < s.len___19203);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[106]) return breakpoint(s, 10, 106, r0);
  case 10:
    s.tmp_2 = lambda_3_mk(s);
    s.tmp_2.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___19206);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.i___19206;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 5; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[107]) return breakpoint(s, 12, 107, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[108]) return breakpoint(s, 13, 108, r0);
  case 13:
    r0 = (s.i___19206 + 1);
    s.i___19206 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[109]) return breakpoint(s, 14, 109, r0);
  case 14:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySome__P105.info = {"start":6833,"length":296,"line":238,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySome","argumentNames":["arr","callbackfn"]}

function helpers_arraySome__P105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySome__P105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___19203: undefined,
  i___19206: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_isOnWall__P2338(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___18443 = undefined;
    s.left___18446 = undefined;
    s.right___18452 = undefined;
    s.top___18458 = undefined;
    s.bottom___18464 = undefined;
    s.col___18470 = undefined;
    s.row___18476 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2350]) return breakpoint(s, 8, 2350, r0);
  case 8:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___18443 = (r0);
    s.lastBrkId = 2351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2351]) return breakpoint(s, 9, 2351, r0);
  case 9:
    s.tmp_0 = Fx_toIntShifted__P151_mk(s);
    s.tmp_1 = game_Hitbox_left__P1966_mk(s);
    s.tmp_1.arg0 = s.hbox___18443;
    s.callLocIdx = 966; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 967; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 968; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.left___18446 = (r0);
    s.lastBrkId = 2352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2352]) return breakpoint(s, 13, 2352, r0);
  case 13:
    s.tmp_0 = Fx_toIntShifted__P151_mk(s);
    s.tmp_1 = game_Hitbox_right__P1968_mk(s);
    s.tmp_1.arg0 = s.hbox___18443;
    s.callLocIdx = 969; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 970; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 971; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.right___18452 = (r0);
    s.lastBrkId = 2353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2353]) return breakpoint(s, 17, 2353, r0);
  case 17:
    s.tmp_0 = Fx_toIntShifted__P151_mk(s);
    s.tmp_1 = game_Hitbox_top__P1967_mk(s);
    s.tmp_1.arg0 = s.hbox___18443;
    s.callLocIdx = 972; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 973; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 974; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.top___18458 = (r0);
    s.lastBrkId = 2354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2354]) return breakpoint(s, 21, 2354, r0);
  case 21:
    s.tmp_0 = Fx_toIntShifted__P151_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P1969_mk(s);
    s.tmp_1.arg0 = s.hbox___18443;
    s.callLocIdx = 975; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2319_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 976; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 977; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.bottom___18464 = (r0);
    s.lastBrkId = 2355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2355]) return breakpoint(s, 25, 2355, r0);
  case 25:
    s.col___18470 = (s.left___18446);
    s.lastBrkId = 2356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2356]) return breakpoint(s, 26, 2356, r0);
  case 26:
  case 1:
    s.lastBrkId = 2357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2357]) return breakpoint(s, 27, 2357, r0);
  case 27:
    r0 = (s.col___18470 <= s.right___18452);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2358]) return breakpoint(s, 28, 2358, r0);
  case 28:
    s.row___18476 = (s.top___18458);
    s.lastBrkId = 2359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2359]) return breakpoint(s, 29, 2359, r0);
  case 29:
  case 2:
    s.lastBrkId = 2360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2360]) return breakpoint(s, 30, 2360, r0);
  case 30:
    r0 = (s.row___18476 <= s.bottom___18464);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2361]) return breakpoint(s, 31, 2361, r0);
  case 31:
    s.tmp_2 = tiles_TileMap_isObstacle__P2336_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.col___18470;
    s.tmp_2.arg2 = s.row___18476;
    s.callLocIdx = 978; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2362]) return breakpoint(s, 33, 2362, r0);
  case 33:
    r0 = true;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2363]) return breakpoint(s, 34, 2363, r0);
  case 34:
    r0 = (s.row___18476 + 1);
    s.row___18476 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 2364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2364]) return breakpoint(s, 35, 2364, r0);
  case 35:
    r0 = (s.col___18470 + 1);
    s.col___18470 = (r0);
    { step = 1; continue; }
  case 6:
    s.lastBrkId = 2365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2365]) return breakpoint(s, 36, 2365, r0);
  case 36:
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isOnWall__P2338.info = {"start":13062,"length":627,"line":423,"column":8,"endLine":440,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOnWall","argumentNames":["this","s"]}

function tiles_TileMap_isOnWall__P2338_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isOnWall__P2338, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  hbox___18443: undefined,
  left___18446: undefined,
  right___18452: undefined,
  top___18458: undefined,
  bottom___18464: undefined,
  col___18470: undefined,
  row___18476: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function MovingSprite_constructor__P2172(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, MovingSprite__C2171_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["cachedVx"] = (s.arg2);
    r0 = (s.arg0).fields["cachedVy"] = (s.arg3);
    r0 = (s.arg0).fields["dx"] = (s.arg4);
    r0 = (s.arg0).fields["dy"] = (s.arg5);
    r0 = (s.arg0).fields["xStep"] = (s.arg6);
    r0 = (s.arg0).fields["yStep"] = (s.arg7);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
MovingSprite_constructor__P2172.info = {"start":678,"length":313,"line":30,"column":4,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","sprite","cachedVx","cachedVy","dx","dy","xStep","yStep"]}

function MovingSprite_constructor__P2172_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MovingSprite_constructor__P2172, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function ArcadePhysicsEngine_move__P2185(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtf___19284 = undefined;
    s.dt2___19291 = undefined;
    s.scene___19295 = undefined;
    s.tileMap___19298 = undefined;
    s.movingSprites___19301 = undefined;
    s.MAX_STEP_COUNT___19332 = undefined;
    s.overlapHandlers___19344 = undefined;
    s.selected___19351 = undefined;
    s.buffers___19352 = undefined;
    s.count___19356 = undefined;
    s.currMovers___19366 = undefined;
    s.remainingMovers___19373 = undefined;
    s.ms___19378 = undefined;
    s.unnamed2878___U13 = undefined;
    s.unnamed2879___U14 = undefined;
    s.s___19380 = undefined;
    s.stepX___19473 = undefined;
    s.stepY___19487 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1603]) return breakpoint(s, 47, 1603, r0);
  case 47:
    s.tmp_0 = Fx_min__P161_mk(s);
    s.tmp_0.arg0 = globals.MAX_TIME_STEP___2168;
    s.tmp_1 = Fx8__P144_mk(s);
    r0 = (s.arg1 * 1000);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 568; s.pc = 49; return s.tmp_1;
  case 49:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 569; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    s.dtf___19284 = (r0);
    s.lastBrkId = 1604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1604]) return breakpoint(s, 50, 1604, r0);
  case 50:
    s.tmp_0 = Fx_idiv__P158_mk(s);
    s.tmp_0.arg0 = s.dtf___19284;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 570; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.dt2___19291 = (r0);
    s.lastBrkId = 1605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1605]) return breakpoint(s, 52, 1605, r0);
  case 52:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 571; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.scene___19295 = (r0);
    s.lastBrkId = 1606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1606]) return breakpoint(s, 54, 1606, r0);
  case 54:
    r0 = s.scene___19295.fields["tileMap"];
    s.tileMap___19298 = (r0);
    s.lastBrkId = 1607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1607]) return breakpoint(s, 55, 1607, r0);
  case 55:
    r0 = pxsim_pxtcore_mkAction(3, inline__P19303);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.dtf___19284);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.dt2___19291);
    s.tmp_1 = helpers_arrayMap__P104_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 573; s.pc = 56; return s.tmp_1;
  case 56:
    r0 = s.retval;
    s.movingSprites___19301 = (r0);
    s.lastBrkId = 1608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1608]) return breakpoint(s, 57, 1608, r0);
  case 57:
    s.tmp_0 = helpers_arrayForEach__P107_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = inline__P19315;
    s.callLocIdx = 577; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    s.lastBrkId = 1611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1611]) return breakpoint(s, 59, 1611, r0);
  case 59:
    s.tmp_0 = sprites_SpriteMap_clear__P2100_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 578; s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
    s.lastBrkId = 1612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1612]) return breakpoint(s, 61, 1612, r0);
  case 61:
    s.tmp_0 = sprites_SpriteMap_resizeBuckets__P2099_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 579; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.lastBrkId = 1613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1613]) return breakpoint(s, 63, 1613, r0);
  case 63:
    s.tmp_0 = Fx_toInt__P165_mk(s);
    s.tmp_1 = Fx_idiv__P158_mk(s);
    s.tmp_2 = Fx_mul__P155_mk(s);
    s.tmp_3 = Fx_div__P157_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 580; s.pc = 67; return s.tmp_3;
  case 67:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.dtf___19284;
    s.callLocIdx = 581; s.pc = 66; return s.tmp_2;
  case 66:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 582; s.pc = 65; return s.tmp_1;
  case 65:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 583; s.pc = 64; return s.tmp_0;
  case 64:
    r0 = s.retval;
    s.MAX_STEP_COUNT___19332 = (r0);
    s.lastBrkId = 1614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1614]) return breakpoint(s, 68, 1614, r0);
  case 68:
    s.tmp_0 = helpers_arraySlice__P112_mk(s);
    r0 = s.scene___19295.fields["overlapHandlers"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 584; s.pc = 69; return s.tmp_0;
  case 69:
    r0 = s.retval;
    s.overlapHandlers___19344 = (r0);
    s.lastBrkId = 1615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1615]) return breakpoint(s, 70, 1615, r0);
  case 70:
    s.selected___19351 = (0);
    s.lastBrkId = 1616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1616]) return breakpoint(s, 71, 1616, r0);
  case 71:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.movingSprites___19301);
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.buffers___19352 = (s.tmp_0);
    s.lastBrkId = 1617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1617]) return breakpoint(s, 72, 1617, r0);
  case 72:
    s.count___19356 = (0);
    s.lastBrkId = 1618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1618]) return breakpoint(s, 73, 1618, r0);
  case 73:
  case 1:
    s.lastBrkId = 1619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1619]) return breakpoint(s, 74, 1619, r0);
  case 74:
    r0 = (s.count___19356 < s.MAX_STEP_COUNT___19332);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__getAt(s.buffers___19352, s.selected___19351);
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 46; continue; }
    s.lastBrkId = 1620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1620]) return breakpoint(s, 75, 1620, r0);
  case 75:
    r0 = pxsim_Array__getAt(s.buffers___19352, s.selected___19351);
    s.currMovers___19366 = (r0);
    s.lastBrkId = 1621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1621]) return breakpoint(s, 76, 1621, r0);
  case 76:
    r0 = (s.selected___19351 ^ 1);
    s.selected___19351 = (r0);
    s.lastBrkId = 1622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1622]) return breakpoint(s, 77, 1622, r0);
  case 77:
    r0 = pxsim_Array__getAt(s.buffers___19352, s.selected___19351);
    s.remainingMovers___19373 = (r0);
    s.lastBrkId = 1623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1623]) return breakpoint(s, 78, 1623, r0);
  case 78:
    s.ms___19378 = (undefined);
    s.unnamed2878___U13 = (s.currMovers___19366);
    s.unnamed2879___U14 = (0);
    s.lastBrkId = 1624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1624]) return breakpoint(s, 79, 1624, r0);
  case 79:
  case 4:
    s.tmp_0 = r0 = s.unnamed2879___U14;
    r0 = pxsim_Array__length(s.unnamed2878___U13);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 43; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2878___U13, s.unnamed2879___U14);
    s.ms___19378 = (r0);
    s.lastBrkId = 1625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1625]) return breakpoint(s, 80, 1625, r0);
  case 80:
    r0 = s.ms___19378.fields["sprite"];
    s.s___19380 = (r0);
    s.lastBrkId = 1626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1626]) return breakpoint(s, 81, 1626, r0);
  case 81:
    r0 = s.ms___19378.fields["cachedVx"];
    s.tmp_1 = r0;
    r0 = s.s___19380.fields["_vx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1627]) return breakpoint(s, 82, 1627, r0);
  case 82:
    r0 = s.s___19380.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1628]) return breakpoint(s, 83, 1628, r0);
  case 83:
    r0 = (s.ms___19378).fields["dx"] = (0);
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 1629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1629]) return breakpoint(s, 84, 1629, r0);
  case 84:
    r0 = s.s___19380.fields["_vx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = s.ms___19378.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 11; continue; }
  case 8:
    r0 = s.s___19380.fields["_vx"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_4;
    { step = 10; continue; }
  case 9:
    r0 = s.ms___19378.fields["cachedVx"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 10:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 11:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1630]) return breakpoint(s, 85, 1630, r0);
  case 85:
    s.tmp_9 = r0 = s.ms___19378;
    s.tmp_11 = Fx_neg__P150_mk(s);
    r0 = s.ms___19378.fields["dx"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 585; s.pc = 86; return s.tmp_11;
  case 86:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dx"] = (s.tmp_10);
    s.lastBrkId = 1631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1631]) return breakpoint(s, 87, 1631, r0);
  case 87:
    s.tmp_0 = r0 = s.ms___19378;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.ms___19378.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 586; s.pc = 88; return s.tmp_2;
  case 88:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1632]) return breakpoint(s, 89, 1632, r0);
  case 89:
    r0 = s.s___19380.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.ms___19378).fields["cachedVx"] = (s.tmp_0);
  case 15:
  case 16:
    s.lastBrkId = 1633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1633]) return breakpoint(s, 90, 1633, r0);
  case 90:
    r0 = s.ms___19378.fields["cachedVy"];
    s.tmp_1 = r0;
    r0 = s.s___19380.fields["_vy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.lastBrkId = 1634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1634]) return breakpoint(s, 91, 1634, r0);
  case 91:
    r0 = s.s___19380.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1635]) return breakpoint(s, 92, 1635, r0);
  case 92:
    r0 = (s.ms___19378).fields["dy"] = (0);
    { step = 26; continue; }
  case 17:
    s.lastBrkId = 1636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1636]) return breakpoint(s, 93, 1636, r0);
  case 93:
    r0 = s.s___19380.fields["_vy"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = s.ms___19378.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 20; continue; }
    r0 = s.tmp_3;
    { step = 23; continue; }
  case 20:
    r0 = s.s___19380.fields["_vy"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 21; continue; }
    r0 = s.tmp_4;
    { step = 22; continue; }
  case 21:
    r0 = s.ms___19378.fields["cachedVy"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 22:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 23:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1637]) return breakpoint(s, 94, 1637, r0);
  case 94:
    s.tmp_9 = r0 = s.ms___19378;
    s.tmp_11 = Fx_neg__P150_mk(s);
    r0 = s.ms___19378.fields["dy"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 587; s.pc = 95; return s.tmp_11;
  case 95:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dy"] = (s.tmp_10);
    s.lastBrkId = 1638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1638]) return breakpoint(s, 96, 1638, r0);
  case 96:
    s.tmp_0 = r0 = s.ms___19378;
    s.tmp_2 = Fx_neg__P150_mk(s);
    r0 = s.ms___19378.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 588; s.pc = 97; return s.tmp_2;
  case 97:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
  case 24:
  case 25:
  case 26:
    s.lastBrkId = 1639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1639]) return breakpoint(s, 98, 1639, r0);
  case 98:
    r0 = s.s___19380.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.ms___19378).fields["cachedVy"] = (s.tmp_0);
  case 27:
  case 28:
    s.lastBrkId = 1640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1640]) return breakpoint(s, 99, 1640, r0);
  case 99:
    s.tmp_2 = Fx_abs__P160_mk(s);
    r0 = s.ms___19378.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 589; s.pc = 100; return s.tmp_2;
  case 100:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P160_mk(s);
    r0 = s.ms___19378.fields["dx"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 590; s.pc = 101; return s.tmp_4;
  case 101:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 29; continue; }
    r0 = s.ms___19378.fields["dx"];
    { step = 30; continue; }
  case 29:
    r0 = s.ms___19378.fields["xStep"];
  case 30:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepX___19473 = (s.tmp_5);
    s.lastBrkId = 1641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1641]) return breakpoint(s, 102, 1641, r0);
  case 102:
    s.tmp_2 = Fx_abs__P160_mk(s);
    r0 = s.ms___19378.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 591; s.pc = 103; return s.tmp_2;
  case 103:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P160_mk(s);
    r0 = s.ms___19378.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 592; s.pc = 104; return s.tmp_4;
  case 104:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = s.ms___19378.fields["dy"];
    { step = 32; continue; }
  case 31:
    r0 = s.ms___19378.fields["yStep"];
  case 32:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepY___19487 = (s.tmp_5);
    s.lastBrkId = 1642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1642]) return breakpoint(s, 105, 1642, r0);
  case 105:
    s.tmp_0 = r0 = s.ms___19378;
    s.tmp_2 = Fx_sub__P154_mk(s);
    r0 = s.ms___19378.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___19473;
    s.callLocIdx = 593; s.pc = 106; return s.tmp_2;
  case 106:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
    s.lastBrkId = 1643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1643]) return breakpoint(s, 107, 1643, r0);
  case 107:
    s.tmp_0 = r0 = s.ms___19378;
    s.tmp_2 = Fx_sub__P154_mk(s);
    r0 = s.ms___19378.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___19487;
    s.callLocIdx = 594; s.pc = 108; return s.tmp_2;
  case 108:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
    s.lastBrkId = 1644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1644]) return breakpoint(s, 109, 1644, r0);
  case 109:
    r0 = s.s___19380.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.s___19380).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1645]) return breakpoint(s, 110, 1645, r0);
  case 110:
    r0 = s.s___19380.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.s___19380).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1646]) return breakpoint(s, 111, 1646, r0);
  case 111:
    s.tmp_0 = r0 = s.s___19380;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.s___19380.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___19473;
    s.callLocIdx = 595; s.pc = 112; return s.tmp_2;
  case 112:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1647]) return breakpoint(s, 113, 1647, r0);
  case 113:
    s.tmp_0 = r0 = s.s___19380;
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.s___19380.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___19487;
    s.callLocIdx = 596; s.pc = 114; return s.tmp_2;
  case 114:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1648]) return breakpoint(s, 115, 1648, r0);
  case 115:
    r0 = s.s___19380.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 515);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1649]) return breakpoint(s, 116, 1649, r0);
  case 116:
    s.tmp_4 = sprites_SpriteMap_insertAABB__P2101_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.s___19380;
    s.callLocIdx = 597; s.pc = 117; return s.tmp_4;
  case 117:
    r0 = s.retval;
    s.lastBrkId = 1650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1650]) return breakpoint(s, 118, 1650, r0);
  case 118:
    s.tmp_0 = r0 = s.tileMap___19298;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 33; continue; }
    r0 = s.tmp_0;
    { step = 34; continue; }
  case 33:
    s.tmp_1 = tiles_TileMap_enabled__P2327_mk(s);
    s.tmp_1.arg0 = s.tileMap___19298;
    s.callLocIdx = 598; s.pc = 119; return s.tmp_1;
  case 119:
    r0 = s.retval;
  case 34:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 35; continue; }
    s.lastBrkId = 1651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1651]) return breakpoint(s, 120, 1651, r0);
  case 120:
    s.tmp_3 = ArcadePhysicsEngine_tilemapCollisions__P3931_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.ms___19378;
    s.tmp_3.arg2 = s.tileMap___19298;
    s.callLocIdx = 599; s.pc = 121; return s.tmp_3;
  case 121:
    r0 = s.retval;
  case 35:
  case 36:
  case 37:
  case 38:
    s.lastBrkId = 1652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1652]) return breakpoint(s, 122, 1652, r0);
  case 122:
    s.tmp_2 = Fx_abs__P160_mk(s);
    r0 = s.ms___19378.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 600; s.pc = 123; return s.tmp_2;
  case 123:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.MIN_MOVE_GAP___2170);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 40; continue; }
  case 39:
    s.tmp_4 = Fx_abs__P160_mk(s);
    r0 = s.ms___19378.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 601; s.pc = 124; return s.tmp_4;
  case 124:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > globals.MIN_MOVE_GAP___2170);
  case 40:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 1653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1653]) return breakpoint(s, 125, 1653, r0);
  case 125:
    r0 = pxsim_Array__push(s.remainingMovers___19373, s.ms___19378);
  case 41:
  case 42:
    r0 = (s.unnamed2879___U14 + 1);
    s.unnamed2879___U14 = (r0);
    { step = 4; continue; }
  case 43:
    s.unnamed2878___U13 = (undefined);
    s.lastBrkId = 1654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1654]) return breakpoint(s, 126, 1654, r0);
  case 126:
    s.tmp_0 = ArcadePhysicsEngine_spriteCollisions__P3930_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.currMovers___19366;
    s.tmp_0.arg2 = s.overlapHandlers___19344;
    s.callLocIdx = 602; s.pc = 127; return s.tmp_0;
  case 127:
    r0 = s.retval;
    s.lastBrkId = 1655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1655]) return breakpoint(s, 128, 1655, r0);
  case 128:
  case 44:
    s.lastBrkId = 1656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1656]) return breakpoint(s, 129, 1656, r0);
  case 129:
    r0 = pxsim_Array__length(s.currMovers___19366);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    s.lastBrkId = 1657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1657]) return breakpoint(s, 130, 1657, r0);
  case 130:
    r0 = pxsim_Array_.pop(s.currMovers___19366);
    { step = 44; continue; }
  case 45:
    s.lastBrkId = 1658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1658]) return breakpoint(s, 131, 1658, r0);
  case 131:
    r0 = (s.count___19356 + 1);
    s.count___19356 = (r0);
    { step = 1; continue; }
  case 46:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move__P2185.info = {"start":2551,"length":3971,"line":109,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function ArcadePhysicsEngine_move__P2185_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move__P2185, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  dtf___19284: undefined,
  dt2___19291: undefined,
  scene___19295: undefined,
  tileMap___19298: undefined,
  movingSprites___19301: undefined,
  MAX_STEP_COUNT___19332: undefined,
  overlapHandlers___19344: undefined,
  selected___19351: undefined,
  buffers___19352: undefined,
  count___19356: undefined,
  currMovers___19366: undefined,
  remainingMovers___19373: undefined,
  ms___19378: undefined,
  unnamed2878___U13: undefined,
  unnamed2879___U14: undefined,
  s___19380: undefined,
  stepX___19473: undefined,
  stepY___19487: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P19303(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = ArcadePhysicsEngine_createMovingSprite__P3929_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.caps[1];
    s.tmp_0.arg3 = s.caps[2];
    s.callLocIdx = 572; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
inline__P19303.info = {"start":2943,"length":51,"line":121,"column":17,"endLine":121,"endColumn":68,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["sprite"]}

function inline__P19303_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19303, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P19315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1609]) return breakpoint(s, 5, 1609, r0);
  case 5:
    s.tmp_1 = Sprite_vx__P2029_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 574; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2031_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 575; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1610]) return breakpoint(s, 8, 1610, r0);
  case 8:
    s.tmp_4 = Sprite_clearObstacles__P2084_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 576; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P19315.info = {"start":3077,"length":66,"line":124,"column":29,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["s"]}

function inline__P19315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions__P3930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ms___19588 = undefined;
    s.unnamed2880___U1 = undefined;
    s.unnamed2881___U2 = undefined;
    s.sprite___19590 = undefined;
    s.overSprites___19597 = undefined;
    s.overlapper___19605 = undefined;
    s.unnamed2882___U6 = undefined;
    s.unnamed2883___U7 = undefined;
    s.thisKind___19611 = undefined;
    s.otherKind___19615 = undefined;
    s.higher___19628 = undefined;
    s.lower___19637 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1696]) return breakpoint(s, 22, 1696, r0);
  case 22:
    s.lastBrkId = 1697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1697]) return breakpoint(s, 23, 1697, r0);
  case 23:
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1698]) return breakpoint(s, 24, 1698, r0);
  case 24:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1699]) return breakpoint(s, 25, 1699, r0);
  case 25:
    s.ms___19588 = (undefined);
    s.unnamed2880___U1 = (s.arg1);
    s.unnamed2881___U2 = (0);
    s.lastBrkId = 1700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1700]) return breakpoint(s, 26, 1700, r0);
  case 26:
  case 3:
    s.tmp_0 = r0 = s.unnamed2881___U2;
    r0 = pxsim_Array__length(s.unnamed2880___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2880___U1, s.unnamed2881___U2);
    s.ms___19588 = (r0);
    s.lastBrkId = 1701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1701]) return breakpoint(s, 27, 1701, r0);
  case 27:
    r0 = s.ms___19588.fields["sprite"];
    s.sprite___19590 = (r0);
    s.lastBrkId = 1702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1702]) return breakpoint(s, 28, 1702, r0);
  case 28:
    r0 = s.sprite___19590.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 515);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1703]) return breakpoint(s, 29, 1703, r0);
  case 29:
    { step = 19; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1704]) return breakpoint(s, 30, 1704, r0);
  case 30:
    s.tmp_2 = sprites_SpriteMap_overlaps__P2097_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_2.arg0 = r0;
    r0 = s.ms___19588.fields["sprite"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 640; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.overSprites___19597 = (r0);
    s.lastBrkId = 1705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1705]) return breakpoint(s, 32, 1705, r0);
  case 32:
    s.overlapper___19605 = (undefined);
    s.unnamed2882___U6 = (s.overSprites___19597);
    s.unnamed2883___U7 = (0);
    s.lastBrkId = 1706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1706]) return breakpoint(s, 33, 1706, r0);
  case 33:
  case 6:
    s.tmp_0 = r0 = s.unnamed2883___U7;
    r0 = pxsim_Array__length(s.unnamed2882___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2882___U6, s.unnamed2883___U7);
    s.overlapper___19605 = (r0);
    s.lastBrkId = 1707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1707]) return breakpoint(s, 34, 1707, r0);
  case 34:
    r0 = s.overlapper___19605.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 515);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1708]) return breakpoint(s, 35, 1708, r0);
  case 35:
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1709]) return breakpoint(s, 36, 1709, r0);
  case 36:
    s.tmp_4 = Sprite_kind__P2070_mk(s);
    s.tmp_4.arg0 = s.sprite___19590;
    s.callLocIdx = 641; s.pc = 37; return s.tmp_4;
  case 37:
    r0 = s.retval;
    s.thisKind___19611 = (r0);
    s.lastBrkId = 1710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1710]) return breakpoint(s, 38, 1710, r0);
  case 38:
    s.tmp_0 = Sprite_kind__P2070_mk(s);
    s.tmp_0.arg0 = s.overlapper___19605;
    s.callLocIdx = 642; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.otherKind___19615 = (r0);
    s.lastBrkId = 1711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1711]) return breakpoint(s, 40, 1711, r0);
  case 40:
    r0 = s.sprite___19590.fields["_kindsOverlappedWith"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.otherKind___19615, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1712]) return breakpoint(s, 41, 1712, r0);
  case 41:
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 1713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1713]) return breakpoint(s, 42, 1713, r0);
  case 42:
    r0 = s.sprite___19590.fields["id"];
    s.tmp_4 = r0;
    r0 = s.overlapper___19605.fields["id"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 > s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    r0 = s.sprite___19590;
    { step = 12; continue; }
  case 11:
    r0 = s.overlapper___19605;
  case 12:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.higher___19628 = (s.tmp_6);
    s.lastBrkId = 1714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1714]) return breakpoint(s, 43, 1714, r0);
  case 43:
    r0 = (s.higher___19628 === s.sprite___19590);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = s.overlapper___19605;
    { step = 14; continue; }
  case 13:
    r0 = s.sprite___19590;
  case 14:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.lower___19637 = (s.tmp_1);
    s.lastBrkId = 1715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1715]) return breakpoint(s, 44, 1715, r0);
  case 44:
    r0 = s.higher___19628.fields["_overlappers"];
    s.tmp_2 = r0;
    r0 = s.lower___19637.fields["id"];
    s.tmp_3 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.tmp_3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1716]) return breakpoint(s, 45, 1716, r0);
  case 45:
    r0 = pxsim_pxtcore_mkAction(2, inline__P19657);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.thisKind___19611);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.otherKind___19615);
    r0 = pxsim_pxtcore_mkAction(5, inline__P19679);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 0, s.higher___19628);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 1, s.lower___19637);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 2, s.sprite___19590);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 3, s.overlapper___19605);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 4, s.thisKind___19611);
    s.tmp_6 = helpers_arrayForEach__P107_mk(s);
    s.tmp_7 = helpers_arrayFilter__P108_mk(s);
    s.tmp_7.arg0 = s.arg2;
    s.tmp_7.arg1 = s.tmp_4;
    s.callLocIdx = 643; s.pc = 47; return s.tmp_7;
  case 47:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 645; s.pc = 46; return s.tmp_6;
  case 46:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = (s.unnamed2883___U7 + 1);
    s.unnamed2883___U7 = (r0);
    { step = 6; continue; }
  case 18:
    s.unnamed2882___U6 = (undefined);
  case 19:
    r0 = (s.unnamed2881___U2 + 1);
    s.unnamed2881___U2 = (r0);
    { step = 3; continue; }
  case 20:
    s.unnamed2880___U1 = (undefined);
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions__P3930.info = {"start":9599,"length":2254,"line":324,"column":4,"endLine":368,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"spriteCollisions","argumentNames":["this","movedSprites","handlers"]}

function ArcadePhysicsEngine_spriteCollisions__P3930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions__P3930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ms___19588: undefined,
  unnamed2880___U1: undefined,
  unnamed2881___U2: undefined,
  sprite___19590: undefined,
  overSprites___19597: undefined,
  overlapper___19605: undefined,
  unnamed2882___U6: undefined,
  unnamed2883___U7: undefined,
  thisKind___19611: undefined,
  otherKind___19615: undefined,
  higher___19628: undefined,
  lower___19637: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P19657(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === s.caps[1]);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["kind"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 === s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 5; continue; }
  case 4:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.caps[0]);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.tmp_8;
    return leave(s, r0)
  default: oops()
} } }
inline__P19657.info = {"start":10958,"length":137,"line":350,"column":32,"endLine":351,"endColumn":81,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19657_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19657, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function inline__P19679(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1717]) return breakpoint(s, 1, 1717, r0);
  case 1:
    r0 = s.caps[0].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[1].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1718]) return breakpoint(s, 2, 1718, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(6, inline__P19689);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.caps[2]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.caps[3]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.caps[4]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.caps[0]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.caps[1]);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P19679.info = {"start":11155,"length":648,"line":353,"column":33,"endLine":364,"endColumn":25,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function inline__P19679_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19679, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P19689(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1719]) return breakpoint(s, 7, 1719, r0);
  case 7:
    r0 = s.caps[0].fields["flags"];
    s.tmp_4 = r0;
    r0 = s.caps[1].fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 | s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 515);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1720]) return breakpoint(s, 8, 1720, r0);
  case 8:
    r0 = s.caps[2].fields["kind"];
    s.tmp_7 = r0;
    r0 = (s.caps[3] === s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 1; continue; }
    r0 = s.caps[0];
    { step = 2; continue; }
  case 1:
    r0 = s.caps[1];
  case 2:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.caps[2].fields["kind"];
    s.tmp_10 = r0;
    r0 = (s.caps[3] === s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 3; continue; }
    r0 = s.caps[1];
    { step = 4; continue; }
  case 3:
    r0 = s.caps[0];
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    s.tmp_12 = if_handler_3_mk(s);
    s.tmp_12.arg0 = s.caps[2];
    s.tmp_12.arg1 = s.tmp_8;
    s.tmp_12.arg2 = s.tmp_11;
    if (!s.tmp_12.arg0.vtable.iface) {
      setupLambda(s.tmp_12, pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "handler"), 3);
      s.callLocIdx = 644; s.pc = 9; return s.tmp_12;
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["handler"];
      if (s.tmp_12.fn == null) { setupLambda(s.tmp_12, s.tmp_12.arg0.fields["handler"], 3); s.callLocIdx = 644; s.pc = 9; return s.tmp_12; }
      else if (s.tmp_12.fn.isGetter) { s.tmp_12.stage2Call = true; s.callLocIdx = 644; s.pc = 9; return s.tmp_12;; }
     else { s.callLocIdx = 644; s.pc = 9; return s.tmp_12; }
    }
  case 9:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1721]) return breakpoint(s, 10, 1721, r0);
  case 10:
    r0 = s.caps[4].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[5].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P19689.info = {"start":11276,"length":499,"line":355,"column":50,"endLine":363,"endColumn":29,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":[]}

function inline__P19689_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19689, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
} }





function sprites_SpriteMap_overlaps__P2097(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___19722 = undefined;
    s.o___19726 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1477]) return breakpoint(s, 1, 1477, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_neighbors__P2096_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 510; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.n___19722 = (r0);
    s.lastBrkId = 1478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1478]) return breakpoint(s, 3, 1478, r0);
  case 3:
    r0 = pxsim_pxtcore_mkAction(1, inline__P19728);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayFilter__P108_mk(s);
    s.tmp_1.arg0 = s.n___19722;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 512; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.o___19726 = (r0);
    s.lastBrkId = 1479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1479]) return breakpoint(s, 5, 1479, r0);
  case 5:
    r0 = s.o___19726;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_overlaps__P2097.info = {"start":923,"length":189,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"overlaps","argumentNames":["this","sprite"]}

function sprites_SpriteMap_overlaps__P2097_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_overlaps__P2097, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  n___19722: undefined,
  o___19726: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P19728(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_overlapsWith__P2080_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 511; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
inline__P19728.info = {"start":1037,"length":41,"line":32,"column":31,"endLine":32,"endColumn":72,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["neighbor"]}

function inline__P19728_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P19728, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_neighbors__P2096(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___19770 = undefined;
    s.layer___19772 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1469]) return breakpoint(s, 1, 1469, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.n___19770 = (r0);
    s.lastBrkId = 1470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1470]) return breakpoint(s, 2, 1470, r0);
  case 2:
    r0 = s.arg1.fields["layer"];
    s.layer___19772 = (r0);
    s.lastBrkId = 1471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1471]) return breakpoint(s, 3, 1471, r0);
  case 3:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P3908_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2062_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 498; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2066_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 499; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19772;
    s.tmp_0.arg4 = s.n___19770;
    s.callLocIdx = 500; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 1472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1472]) return breakpoint(s, 7, 1472, r0);
  case 7:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P3908_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2062_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 501; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2068_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 502; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19772;
    s.tmp_0.arg4 = s.n___19770;
    s.callLocIdx = 503; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1473]) return breakpoint(s, 11, 1473, r0);
  case 11:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P3908_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2064_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 504; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2066_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 505; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19772;
    s.tmp_0.arg4 = s.n___19770;
    s.callLocIdx = 506; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1474]) return breakpoint(s, 15, 1474, r0);
  case 15:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P3908_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2064_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 507; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2068_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 508; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19772;
    s.tmp_0.arg4 = s.n___19770;
    s.callLocIdx = 509; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1475]) return breakpoint(s, 19, 1475, r0);
  case 19:
    r0 = pxsim_Array_.removeElement(s.n___19770, s.arg1);
    s.lastBrkId = 1476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1476]) return breakpoint(s, 20, 1476, r0);
  case 20:
    r0 = s.n___19770;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_neighbors__P2096.info = {"start":376,"length":442,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"neighbors","argumentNames":["this","sprite"]}

function sprites_SpriteMap_neighbors__P2096_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_neighbors__P2096, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  n___19770: undefined,
  layer___19772: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_mergeAtKey__P3908(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___19813 = undefined;
    s.bucket___19818 = undefined;
    s.sprite___19825 = undefined;
    s.unnamed2876___U3 = undefined;
    s.unnamed2877___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1532]) return breakpoint(s, 9, 1532, r0);
  case 9:
    s.tmp_0 = sprites_SpriteMap_key__P3906_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 536; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.k___19813 = (r0);
    s.lastBrkId = 1533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1533]) return breakpoint(s, 11, 1533, r0);
  case 11:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___19813);
    s.bucket___19818 = (r0);
    s.lastBrkId = 1534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1534]) return breakpoint(s, 12, 1534, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.bucket___19818);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1535]) return breakpoint(s, 13, 1535, r0);
  case 13:
    s.sprite___19825 = (undefined);
    s.unnamed2876___U3 = (s.bucket___19818);
    s.unnamed2877___U4 = (0);
    s.lastBrkId = 1536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1536]) return breakpoint(s, 14, 1536, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed2877___U4;
    r0 = pxsim_Array__length(s.unnamed2876___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2876___U3, s.unnamed2877___U4);
    s.sprite___19825 = (r0);
    s.lastBrkId = 1537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1537]) return breakpoint(s, 15, 1537, r0);
  case 15:
    r0 = s.sprite___19825.fields["layer"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & s.arg3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array_.indexOf(s.arg4, s.sprite___19825, undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1538]) return breakpoint(s, 16, 1538, r0);
  case 16:
    r0 = pxsim_Array__push(s.arg4, s.sprite___19825);
  case 4:
  case 5:
    r0 = (s.unnamed2877___U4 + 1);
    s.unnamed2877___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed2876___U3 = (undefined);
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_mergeAtKey__P3908.info = {"start":3715,"length":384,"line":101,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"mergeAtKey","argumentNames":["this","x","y","layer","n"]}

function sprites_SpriteMap_mergeAtKey__P3908_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_mergeAtKey__P3908, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  k___19813: undefined,
  bucket___19818: undefined,
  sprite___19825: undefined,
  unnamed2876___U3: undefined,
  unnamed2877___U4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function sprites_SpriteMap_key__P3906(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.xi___19846 = undefined;
    s.yi___19858 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1510]) return breakpoint(s, 1, 1510, r0);
  case 1:
    s.tmp_0 = Math_clamp__P122_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 524; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.xi___19846 = (r0);
    s.lastBrkId = 1511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1511]) return breakpoint(s, 3, 1511, r0);
  case 3:
    s.tmp_0 = Math_clamp__P122_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["rowCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg2, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 525; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.yi___19858 = (r0);
    s.lastBrkId = 1512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1512]) return breakpoint(s, 5, 1512, r0);
  case 5:
    s.tmp_0 = r0 = s.xi___19846;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_2 = r0;
    r0 = (s.yi___19858 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_key__P3906.info = {"start":2592,"length":270,"line":76,"column":8,"endLine":80,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"key","argumentNames":["this","x","y"]}

function sprites_SpriteMap_key__P3906_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_key__P3906, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  xi___19846: undefined,
  yi___19858: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_overlapsWith__P2080(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1382]) return breakpoint(s, 8, 1382, r0);
  case 8:
    s.lastBrkId = 1383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1383]) return breakpoint(s, 9, 1383, r0);
  case 9:
    r0 = (s.arg1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1384]) return breakpoint(s, 10, 1384, r0);
  case 10:
    r0 = false;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1385]) return breakpoint(s, 11, 1385, r0);
  case 11:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 513);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1386]) return breakpoint(s, 12, 1386, r0);
  case 12:
    r0 = false;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1387]) return breakpoint(s, 13, 1387, r0);
  case 13:
    r0 = s.arg1.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 513);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1388]) return breakpoint(s, 14, 1388, r0);
  case 14:
    r0 = false;
    { step = 7; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1389]) return breakpoint(s, 15, 1389, r0);
  case 15:
    r0 = s.arg1.fields["_image"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_6 = r0;
    s.tmp_9 = Sprite_left__P2062_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 428; s.pc = 16; return s.tmp_9;
  case 16:
    r0 = s.retval;
    s.tmp_8 = r0;
    s.tmp_11 = Sprite_left__P2062_mk(s);
    s.tmp_11.arg0 = s.arg1;
    s.callLocIdx = 429; s.pc = 17; return s.tmp_11;
  case 17:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_8 - s.tmp_10);
    s.tmp_7 = r0;
    s.tmp_14 = Sprite_top__P2066_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 430; s.pc = 18; return s.tmp_14;
  case 18:
    r0 = s.retval;
    s.tmp_13 = r0;
    s.tmp_16 = Sprite_top__P2066_mk(s);
    s.tmp_16.arg0 = s.arg1;
    s.callLocIdx = 431; s.pc = 19; return s.tmp_16;
  case 19:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_13 - s.tmp_15);
    s.tmp_12 = r0;
    r0 = pxsim_ImageMethods.overlapsWith(s.tmp_5, s.tmp_6, s.tmp_7, s.tmp_12);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
Sprite_overlapsWith__P2080.info = {"start":24476,"length":434,"line":748,"column":4,"endLine":756,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function Sprite_overlapsWith__P2080_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_overlapsWith__P2080, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_createMovingSprite__P3929(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ovx___20060 = undefined;
    s.ovy___20065 = undefined;
    s.fx___20092 = undefined;
    s.c___20099 = undefined;
    s.fy___20142 = undefined;
    s.c___20149 = undefined;
    s.dx___20188 = undefined;
    s.dy___20197 = undefined;
    s.xStep___20206 = undefined;
    s.yStep___20208 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1659]) return breakpoint(s, 25, 1659, r0);
  case 25:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P3934_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 603; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.ovx___20060 = (r0);
    s.lastBrkId = 1660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1660]) return breakpoint(s, 27, 1660, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P3934_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 604; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.ovy___20065 = (r0);
    s.lastBrkId = 1661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1661]) return breakpoint(s, 29, 1661, r0);
  case 29:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1662]) return breakpoint(s, 30, 1662, r0);
  case 30:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1663]) return breakpoint(s, 31, 1663, r0);
  case 31:
    r0 = s.arg1.fields["_ax"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1664]) return breakpoint(s, 32, 1664, r0);
  case 32:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P158_mk(s);
    s.tmp_5 = Fx_mul__P155_mk(s);
    r0 = s.arg1.fields["_ax"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 605; s.pc = 35; return s.tmp_5;
  case 35:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 606; s.pc = 34; return s.tmp_4;
  case 34:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 607; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 1665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1665]) return breakpoint(s, 36, 1665, r0);
  case 36:
    r0 = s.arg1.fields["_fx"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1666]) return breakpoint(s, 37, 1666, r0);
  case 37:
    s.tmp_1 = Fx_idiv__P158_mk(s);
    s.tmp_2 = Fx_mul__P155_mk(s);
    r0 = s.arg1.fields["_fx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 608; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 609; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.fx___20092 = (r0);
    s.lastBrkId = 1667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1667]) return breakpoint(s, 40, 1667, r0);
  case 40:
    s.tmp_0 = Fx_compare__P159_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fx___20092;
    s.callLocIdx = 610; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.c___20099 = (r0);
    s.lastBrkId = 1668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1668]) return breakpoint(s, 42, 1668, r0);
  case 42:
    r0 = (s.c___20099 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1669]) return breakpoint(s, 43, 1669, r0);
  case 43:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P161_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___20092;
    s.callLocIdx = 611; s.pc = 45; return s.tmp_4;
  case 45:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 612; s.pc = 44; return s.tmp_3;
  case 44:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 5; continue; }
  case 2:
    s.lastBrkId = 1670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1670]) return breakpoint(s, 46, 1670, r0);
  case 46:
    r0 = (s.c___20099 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1671]) return breakpoint(s, 47, 1671, r0);
  case 47:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P162_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P154_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___20092;
    s.callLocIdx = 613; s.pc = 49; return s.tmp_4;
  case 49:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 614; s.pc = 48; return s.tmp_3;
  case 48:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1672]) return breakpoint(s, 50, 1672, r0);
  case 50:
    r0 = (s.arg1).fields["_vx"] = (0);
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1673]) return breakpoint(s, 51, 1673, r0);
  case 51:
    r0 = s.arg1.fields["_ay"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1674]) return breakpoint(s, 52, 1674, r0);
  case 52:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P158_mk(s);
    s.tmp_5 = Fx_mul__P155_mk(s);
    r0 = s.arg1.fields["_ay"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 615; s.pc = 55; return s.tmp_5;
  case 55:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 616; s.pc = 54; return s.tmp_4;
  case 54:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 617; s.pc = 53; return s.tmp_3;
  case 53:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 16; continue; }
  case 9:
    s.lastBrkId = 1675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1675]) return breakpoint(s, 56, 1675, r0);
  case 56:
    r0 = s.arg1.fields["_fy"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1676]) return breakpoint(s, 57, 1676, r0);
  case 57:
    s.tmp_1 = Fx_idiv__P158_mk(s);
    s.tmp_2 = Fx_mul__P155_mk(s);
    r0 = s.arg1.fields["_fy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 618; s.pc = 59; return s.tmp_2;
  case 59:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 619; s.pc = 58; return s.tmp_1;
  case 58:
    r0 = s.retval;
    s.fy___20142 = (r0);
    s.lastBrkId = 1677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1677]) return breakpoint(s, 60, 1677, r0);
  case 60:
    s.tmp_0 = Fx_compare__P159_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fy___20142;
    s.callLocIdx = 620; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.c___20149 = (r0);
    s.lastBrkId = 1678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1678]) return breakpoint(s, 62, 1678, r0);
  case 62:
    r0 = (s.c___20149 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1679]) return breakpoint(s, 63, 1679, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P161_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___20142;
    s.callLocIdx = 621; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 622; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 13; continue; }
  case 10:
    s.lastBrkId = 1680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1680]) return breakpoint(s, 66, 1680, r0);
  case 66:
    r0 = (s.c___20149 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1681]) return breakpoint(s, 67, 1681, r0);
  case 67:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P161_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P154_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___20142;
    s.callLocIdx = 623; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 624; s.pc = 68; return s.tmp_3;
  case 68:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1682]) return breakpoint(s, 70, 1682, r0);
  case 70:
    r0 = (s.arg1).fields["_vy"] = (0);
  case 12:
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 1683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1683]) return breakpoint(s, 71, 1683, r0);
  case 71:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P3934_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 625; s.pc = 72; return s.tmp_2;
  case 72:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    s.lastBrkId = 1684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1684]) return breakpoint(s, 73, 1684, r0);
  case 73:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P3934_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 626; s.pc = 74; return s.tmp_2;
  case 74:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    s.lastBrkId = 1685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1685]) return breakpoint(s, 75, 1685, r0);
  case 75:
    s.tmp_0 = Fx_idiv__P158_mk(s);
    s.tmp_1 = Fx_mul__P155_mk(s);
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.ovx___20060;
    s.callLocIdx = 627; s.pc = 78; return s.tmp_2;
  case 78:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg3;
    s.callLocIdx = 628; s.pc = 77; return s.tmp_1;
  case 77:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1000;
    s.callLocIdx = 629; s.pc = 76; return s.tmp_0;
  case 76:
    r0 = s.retval;
    s.dx___20188 = (r0);
    s.lastBrkId = 1686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1686]) return breakpoint(s, 79, 1686, r0);
  case 79:
    s.tmp_0 = Fx_idiv__P158_mk(s);
    s.tmp_1 = Fx_mul__P155_mk(s);
    s.tmp_2 = Fx_add__P152_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.ovy___20065;
    s.callLocIdx = 630; s.pc = 82; return s.tmp_2;
  case 82:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg3;
    s.callLocIdx = 631; s.pc = 81; return s.tmp_1;
  case 81:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1000;
    s.callLocIdx = 632; s.pc = 80; return s.tmp_0;
  case 80:
    r0 = s.retval;
    s.dy___20197 = (r0);
    s.lastBrkId = 1687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1687]) return breakpoint(s, 83, 1687, r0);
  case 83:
    s.xStep___20206 = (s.dx___20188);
    s.lastBrkId = 1688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1688]) return breakpoint(s, 84, 1688, r0);
  case 84:
    s.yStep___20208 = (s.dy___20197);
    s.lastBrkId = 1689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1689]) return breakpoint(s, 85, 1689, r0);
  case 85:
  case 17:
    s.lastBrkId = 1690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1690]) return breakpoint(s, 86, 1690, r0);
  case 86:
    s.tmp_2 = Fx_abs__P160_mk(s);
    s.tmp_2.arg0 = s.xStep___20206;
    s.callLocIdx = 633; s.pc = 87; return s.tmp_2;
  case 87:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    s.tmp_5 = Fx_abs__P160_mk(s);
    s.tmp_5.arg0 = s.yStep___20208;
    s.callLocIdx = 634; s.pc = 88; return s.tmp_5;
  case 88:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 19:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1691]) return breakpoint(s, 89, 1691, r0);
  case 89:
    s.tmp_10 = Fx_abs__P160_mk(s);
    s.tmp_10.arg0 = s.xStep___20206;
    s.callLocIdx = 635; s.pc = 90; return s.tmp_10;
  case 90:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 > s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1692]) return breakpoint(s, 91, 1692, r0);
  case 91:
    s.tmp_12 = Fx_idiv__P158_mk(s);
    s.tmp_12.arg0 = s.xStep___20206;
    s.tmp_12.arg1 = 2;
    s.callLocIdx = 636; s.pc = 92; return s.tmp_12;
  case 92:
    r0 = s.retval;
    s.xStep___20206 = (r0);
  case 20:
  case 21:
    s.lastBrkId = 1693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1693]) return breakpoint(s, 93, 1693, r0);
  case 93:
    s.tmp_2 = Fx_abs__P160_mk(s);
    s.tmp_2.arg0 = s.yStep___20208;
    s.callLocIdx = 637; s.pc = 94; return s.tmp_2;
  case 94:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1694]) return breakpoint(s, 95, 1694, r0);
  case 95:
    s.tmp_4 = Fx_idiv__P158_mk(s);
    s.tmp_4.arg0 = s.yStep___20208;
    s.tmp_4.arg1 = 2;
    s.callLocIdx = 638; s.pc = 96; return s.tmp_4;
  case 96:
    r0 = s.retval;
    s.yStep___20208 = (r0);
  case 22:
  case 23:
    { step = 17; continue; }
  case 24:
    s.lastBrkId = 1695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1695]) return breakpoint(s, 97, 1695, r0);
  case 97:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2171_VT);
    s.tmp_0 = r0;
    s.tmp_1 = MovingSprite_constructor__P2172_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_1.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.dx___20188;
    s.tmp_1.arg5 = s.dy___20197;
    s.tmp_1.arg6 = s.xStep___20206;
    s.tmp_1.arg7 = s.yStep___20208;
    s.callLocIdx = 639; s.pc = 98; return s.tmp_1;
  case 98:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_createMovingSprite__P3929.info = {"start":6528,"length":3065,"line":213,"column":4,"endLine":322,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"createMovingSprite","argumentNames":["this","sprite","dtMs","dt2"]}

function ArcadePhysicsEngine_createMovingSprite__P3929_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_createMovingSprite__P3929, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  ovx___20060: undefined,
  ovy___20065: undefined,
  fx___20092: undefined,
  c___20099: undefined,
  fy___20142: undefined,
  c___20149: undefined,
  dx___20188: undefined,
  dy___20197: undefined,
  xStep___20206: undefined,
  yStep___20208: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_constrain__P3934(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1874]) return breakpoint(s, 1, 1874, r0);
  case 1:
    s.tmp_0 = Fx_max__P162_mk(s);
    s.tmp_1 = Fx_min__P161_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 788; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxNegativeVelocity"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 789; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constrain__P3934.info = {"start":25298,"length":191,"line":751,"column":4,"endLine":759,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"constrain","argumentNames":["this","v"]}

function ArcadePhysicsEngine_constrain__P3934_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constrain__P3934, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_max__P162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[269]) return breakpoint(s, 4, 269, r0);
  case 4:
    r0 = (s.arg0 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[270]) return breakpoint(s, 5, 270, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[271]) return breakpoint(s, 6, 271, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_max__P162.info = {"start":1797,"length":117,"line":56,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"max","argumentNames":["a","b"]}

function Fx_max__P162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_max__P162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_compare__P159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[262]) return breakpoint(s, 1, 262, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_compare__P159.info = {"start":1395,"length":106,"line":41,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"compare","argumentNames":["a","b"]}

function Fx_compare__P159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_compare__P159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAABB__P2101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.left___19878 = undefined;
    s.top___19881 = undefined;
    s.xn___19884 = undefined;
    s.yn___19895 = undefined;
    s.x___19906 = undefined;
    s.y___19911 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1519]) return breakpoint(s, 5, 1519, r0);
  case 5:
    s.tmp_0 = Sprite_left__P2062_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 527; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.left___19878 = (r0);
    s.lastBrkId = 1520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1520]) return breakpoint(s, 7, 1520, r0);
  case 7:
    s.tmp_0 = Sprite_top__P2066_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 528; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.top___19881 = (r0);
    s.lastBrkId = 1521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1521]) return breakpoint(s, 9, 1521, r0);
  case 9:
    s.tmp_3 = Sprite_width__P2060_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 529; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.xn___19884 = (r0);
    s.lastBrkId = 1522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1522]) return breakpoint(s, 11, 1522, r0);
  case 11:
    s.tmp_3 = Sprite_height__P2061_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 530; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.yn___19895 = (r0);
    s.lastBrkId = 1523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1523]) return breakpoint(s, 13, 1523, r0);
  case 13:
    s.x___19906 = (0);
    s.lastBrkId = 1524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1524]) return breakpoint(s, 14, 1524, r0);
  case 14:
  case 1:
    s.lastBrkId = 1525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1525]) return breakpoint(s, 15, 1525, r0);
  case 15:
    r0 = (s.x___19906 <= s.xn___19884);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1526]) return breakpoint(s, 16, 1526, r0);
  case 16:
    s.y___19911 = (0);
    s.lastBrkId = 1527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1527]) return breakpoint(s, 17, 1527, r0);
  case 17:
  case 2:
    s.lastBrkId = 1528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1528]) return breakpoint(s, 18, 1528, r0);
  case 18:
    r0 = (s.y___19911 <= s.yn___19895);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1529]) return breakpoint(s, 19, 1529, r0);
  case 19:
    s.tmp_1 = sprites_SpriteMap_insertAtKey__P3907_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = r0 = s.left___19878;
    s.tmp_4 = Math_min__P126_mk(s);
    s.tmp_5 = Sprite_width__P2060_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 531; s.pc = 22; return s.tmp_5;
  case 22:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_6 = r0;
    r0 = (s.x___19906 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 532; s.pc = 21; return s.tmp_4;
  case 21:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = r0 = s.top___19881;
    s.tmp_9 = Math_min__P126_mk(s);
    s.tmp_10 = Sprite_height__P2061_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 533; s.pc = 24; return s.tmp_10;
  case 24:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_11 = r0;
    r0 = (s.y___19911 * s.tmp_11);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 534; s.pc = 23; return s.tmp_9;
  case 23:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.arg1;
    s.callLocIdx = 535; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1530]) return breakpoint(s, 25, 1530, r0);
  case 25:
    r0 = (s.y___19911 + 1);
    s.y___19911 = (r0);
    { step = 2; continue; }
  case 3:
    s.lastBrkId = 1531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1531]) return breakpoint(s, 26, 1531, r0);
  case 26:
    r0 = (s.x___19906 + 1);
    s.x___19906 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAABB__P2101.info = {"start":3184,"length":521,"line":91,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAABB","argumentNames":["this","sprite"]}

function sprites_SpriteMap_insertAABB__P2101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAABB__P2101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  left___19878: undefined,
  top___19881: undefined,
  xn___19884: undefined,
  yn___19895: undefined,
  x___19906: undefined,
  y___19911: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAtKey__P3907(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___19946 = undefined;
    s.bucket___19951 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1513]) return breakpoint(s, 5, 1513, r0);
  case 5:
    s.tmp_0 = sprites_SpriteMap_key__P3906_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 526; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.k___19946 = (r0);
    s.lastBrkId = 1514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1514]) return breakpoint(s, 7, 1514, r0);
  case 7:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___19946);
    s.bucket___19951 = (r0);
    s.lastBrkId = 1515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1515]) return breakpoint(s, 8, 1515, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.bucket___19951);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1516]) return breakpoint(s, 9, 1516, r0);
  case 9:
    r0 = s.arg0.fields["buckets"];
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.k___19946;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_2, s.tmp_3, s.tmp_4);
    s.bucket___19951 = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1517]) return breakpoint(s, 10, 1517, r0);
  case 10:
    r0 = pxsim_Array_.indexOf(s.bucket___19951, s.arg3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1518]) return breakpoint(s, 11, 1518, r0);
  case 11:
    r0 = pxsim_Array__push(s.bucket___19951, s.arg3);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAtKey__P3907.info = {"start":2872,"length":302,"line":82,"column":8,"endLine":89,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAtKey","argumentNames":["this","x","y","sprite"]}

function sprites_SpriteMap_insertAtKey__P3907_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAtKey__P3907, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  k___19946: undefined,
  bucket___19951: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_SpriteMap_clear__P2100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1509]) return breakpoint(s, 1, 1509, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_clear__P2100.info = {"start":2532,"length":50,"line":72,"column":8,"endLine":74,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"clear","argumentNames":["this"]}

function sprites_SpriteMap_clear__P2100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_clear__P2100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_resizeBuckets__P2099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.maxWidth___19983 = undefined;
    s.maxHeight___19984 = undefined;
    s.sprite___19986 = undefined;
    s.unnamed2874___U3 = undefined;
    s.unnamed2875___U4 = undefined;
    s.tMap___20002 = undefined;
    s.areaWidth___20006 = undefined;
    s.areaHeight___20013 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1494]) return breakpoint(s, 11, 1494, r0);
  case 11:
    s.maxWidth___19983 = (0);
    s.lastBrkId = 1495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1495]) return breakpoint(s, 12, 1495, r0);
  case 12:
    s.maxHeight___19984 = (0);
    s.lastBrkId = 1496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1496]) return breakpoint(s, 13, 1496, r0);
  case 13:
    s.sprite___19986 = (undefined);
    s.unnamed2874___U3 = (s.arg1);
    s.unnamed2875___U4 = (0);
    s.lastBrkId = 1497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1497]) return breakpoint(s, 14, 1497, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed2875___U4;
    r0 = pxsim_Array__length(s.unnamed2874___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2874___U3, s.unnamed2875___U4);
    s.sprite___19986 = (r0);
    s.lastBrkId = 1498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1498]) return breakpoint(s, 15, 1498, r0);
  case 15:
    s.tmp_4 = Sprite_width__P2060_mk(s);
    s.tmp_4.arg0 = s.sprite___19986;
    s.callLocIdx = 515; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > s.maxWidth___19983);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1499]) return breakpoint(s, 17, 1499, r0);
  case 17:
    s.tmp_5 = Sprite_width__P2060_mk(s);
    s.tmp_5.arg0 = s.sprite___19986;
    s.callLocIdx = 516; s.pc = 18; return s.tmp_5;
  case 18:
    r0 = s.retval;
    s.maxWidth___19983 = (r0);
  case 2:
  case 3:
    s.lastBrkId = 1500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1500]) return breakpoint(s, 19, 1500, r0);
  case 19:
    s.tmp_2 = Sprite_height__P2061_mk(s);
    s.tmp_2.arg0 = s.sprite___19986;
    s.callLocIdx = 517; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.maxHeight___19984);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1501]) return breakpoint(s, 21, 1501, r0);
  case 21:
    s.tmp_3 = Sprite_height__P2061_mk(s);
    s.tmp_3.arg0 = s.sprite___19986;
    s.callLocIdx = 518; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.maxHeight___19984 = (r0);
  case 4:
  case 5:
    r0 = (s.unnamed2875___U4 + 1);
    s.unnamed2875___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed2874___U3 = (undefined);
    s.lastBrkId = 1502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1502]) return breakpoint(s, 23, 1502, r0);
  case 23:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 519; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tMap___20002 = (r0);
    s.lastBrkId = 1503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1503]) return breakpoint(s, 25, 1503, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(s.tMap___20002);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = tiles_TileMap_areaWidth__P2323_mk(s);
    s.tmp_0.arg0 = s.tMap___20002;
    s.callLocIdx = 520; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaWidth___20006 = (s.tmp_1);
    s.lastBrkId = 1504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1504]) return breakpoint(s, 27, 1504, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.tMap___20002);
    if (!r0) { step = 9; continue; }
    s.tmp_0 = tiles_TileMap_areaHeight__P2324_mk(s);
    s.tmp_0.arg0 = s.tMap___20002;
    s.callLocIdx = 521; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaHeight___20013 = (s.tmp_1);
    s.lastBrkId = 1505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1505]) return breakpoint(s, 29, 1505, r0);
  case 29:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P122_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaWidth___20006 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxWidth___19983 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 522; s.pc = 30; return s.tmp_2;
  case 30:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellWidth"] = (s.tmp_1);
    s.lastBrkId = 1506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1506]) return breakpoint(s, 31, 1506, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P122_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaHeight___20013 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxHeight___19984 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 523; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellHeight"] = (s.tmp_1);
    s.lastBrkId = 1507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1507]) return breakpoint(s, 33, 1507, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaHeight___20013, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rowCount"] = (s.tmp_1);
    s.lastBrkId = 1508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1508]) return breakpoint(s, 34, 1508, r0);
  case 34:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaWidth___20006, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columnCount"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_resizeBuckets__P2099.info = {"start":1696,"length":826,"line":52,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"resizeBuckets","argumentNames":["this","sprites"]}

function sprites_SpriteMap_resizeBuckets__P2099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_resizeBuckets__P2099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  maxWidth___19983: undefined,
  maxHeight___19984: undefined,
  sprite___19986: undefined,
  unnamed2874___U3: undefined,
  unnamed2875___U4: undefined,
  tMap___20002: undefined,
  areaWidth___20006: undefined,
  areaHeight___20013: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_clearObstacles__P2084(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1390]) return breakpoint(s, 1, 1390, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_clearObstacles__P2084.info = {"start":26872,"length":54,"line":813,"column":4,"endLine":815,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"clearObstacles","argumentNames":["this"]}

function Sprite_clearObstacles__P2084_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_clearObstacles__P2084, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx_idiv__P158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[261]) return breakpoint(s, 1, 261, r0);
  case 1:
    r0 = pxsim.Math_.idiv(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_idiv__P158.info = {"start":1279,"length":111,"line":38,"column":4,"endLine":40,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"idiv","argumentNames":["a","b"]}

function Fx_idiv__P158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_idiv__P158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_div__P157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[260]) return breakpoint(s, 1, 260, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_div__P157.info = {"start":1145,"length":129,"line":35,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"div","argumentNames":["a","b"]}

function Fx_div__P157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_div__P157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_draw__P2184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1602]) return breakpoint(s, 1, 1602, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_draw__P2098_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 567; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_draw__P2184.info = {"start":2506,"length":39,"line":105,"column":4,"endLine":107,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function ArcadePhysicsEngine_draw__P2184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_draw__P2184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_draw__P2098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___20286 = undefined;
    s.y___20292 = undefined;
    s.left___20298 = undefined;
    s.top___20303 = undefined;
    s.k___20308 = undefined;
    s.b___20313 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2094_VT)) failedCast(r0);
    s.lastBrkId = 1480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1480]) return breakpoint(s, 9, 1480, r0);
  case 9:
    s.x___20286 = (0);
    s.lastBrkId = 1481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1481]) return breakpoint(s, 10, 1481, r0);
  case 10:
  case 1:
    s.lastBrkId = 1482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1482]) return breakpoint(s, 11, 1482, r0);
  case 11:
    r0 = s.arg0.fields["columnCount"];
    s.tmp_1 = r0;
    r0 = (s.x___20286 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1483]) return breakpoint(s, 12, 1483, r0);
  case 12:
    s.y___20292 = (0);
    s.lastBrkId = 1484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1484]) return breakpoint(s, 13, 1484, r0);
  case 13:
  case 2:
    s.lastBrkId = 1485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1485]) return breakpoint(s, 14, 1485, r0);
  case 14:
    r0 = s.arg0.fields["rowCount"];
    s.tmp_1 = r0;
    r0 = (s.y___20292 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1486]) return breakpoint(s, 15, 1486, r0);
  case 15:
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = (s.x___20286 * s.tmp_2);
    s.left___20298 = (r0);
    s.lastBrkId = 1487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1487]) return breakpoint(s, 16, 1487, r0);
  case 16:
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_0 = r0;
    r0 = (s.y___20292 * s.tmp_0);
    s.top___20303 = (r0);
    s.lastBrkId = 1488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1488]) return breakpoint(s, 17, 1488, r0);
  case 17:
    s.tmp_0 = sprites_SpriteMap_key__P3906_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.left___20298;
    s.tmp_0.arg2 = s.top___20303;
    s.callLocIdx = 513; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.k___20308 = (r0);
    s.lastBrkId = 1489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1489]) return breakpoint(s, 19, 1489, r0);
  case 19:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___20308);
    s.b___20313 = (r0);
    s.lastBrkId = 1490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1490]) return breakpoint(s, 20, 1490, r0);
  case 20:
    s.tmp_0 = r0 = s.b___20313;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__length(s.b___20313);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1491]) return breakpoint(s, 21, 1491, r0);
  case 21:
    s.tmp_2 = helpers_imageDrawRect__P1731_mk(s);
    s.tmp_2.arg0 = globals.screen___1802;
    s.tmp_2.arg1 = s.left___20298;
    s.tmp_2.arg2 = s.top___20303;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2.arg3 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2.arg4 = r0;
    s.tmp_2.arg5 = 5;
    s.callLocIdx = 514; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1492]) return breakpoint(s, 23, 1492, r0);
  case 23:
    r0 = (s.y___20292 + 1);
    s.y___20292 = (r0);
    { step = 2; continue; }
  case 7:
    s.lastBrkId = 1493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1493]) return breakpoint(s, 24, 1493, r0);
  case 24:
    r0 = (s.x___20286 + 1);
    s.x___20286 = (r0);
    { step = 1; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_draw__P2098.info = {"start":1122,"length":496,"line":36,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"draw","argumentNames":["this"]}

function sprites_SpriteMap_draw__P2098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_draw__P2098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  x___20286: undefined,
  y___20292: undefined,
  left___20298: undefined,
  top___20303: undefined,
  k___20308: undefined,
  b___20313: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_removeSprite__P2183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1601]) return breakpoint(s, 1, 1601, r0);
  case 1:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_removeSprite__P2183.info = {"start":2420,"length":80,"line":101,"column":4,"endLine":103,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_removeSprite__P2183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_removeSprite__P2183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_addSprite__P2182(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___20350 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2173_VT)) failedCast(r0);
    s.lastBrkId = 1597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1597]) return breakpoint(s, 5, 1597, r0);
  case 5:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1598]) return breakpoint(s, 6, 1598, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 565; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___20350 = (r0);
    s.lastBrkId = 1599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1599]) return breakpoint(s, 8, 1599, r0);
  case 8:
    s.tmp_0 = r0 = s.tm___20350;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_isOnWall__P2338_mk(s);
    s.tmp_1.arg0 = s.tm___20350;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 566; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1600]) return breakpoint(s, 10, 1600, r0);
  case 10:
    s.tmp_3 = r0 = s.arg1;
    r0 = s.tmp_3.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["flags"] = (s.tmp_4);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_addSprite__P2182.info = {"start":2194,"length":220,"line":93,"column":4,"endLine":99,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_addSprite__P2182_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_addSprite__P2182, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tm___20350: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_data__P4000(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2317_VT)) failedCast(r0);
    s.lastBrkId = 2262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2262]) return breakpoint(s, 1, 2262, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_data__P4000.info = {"start":6344,"length":75,"line":231,"column":8,"endLine":233,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"data","argumentNames":["this"]}
tiles_TileMap_data__P4000.isGetter = true;

function tiles_TileMap_data__P4000_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_data__P4000, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_BackgroundLayer_constructor__P2282(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2275_VT)) failedCast(r0);
    s.lastBrkId = 2153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2153]) return breakpoint(s, 7, 2153, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P125_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 895; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["distance"] = (s.tmp_1);
    s.lastBrkId = 2154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2154]) return breakpoint(s, 9, 2154, r0);
  case 9:
    r0 = (s.arg0).fields["img"] = (s.arg3);
    s.lastBrkId = 2155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2155]) return breakpoint(s, 10, 2155, r0);
  case 10:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 2156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2156]) return breakpoint(s, 11, 2156, r0);
  case 11:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 2157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2157]) return breakpoint(s, 12, 2157, r0);
  case 12:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 2158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2158]) return breakpoint(s, 13, 2158, r0);
  case 13:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 2159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2159]) return breakpoint(s, 14, 2159, r0);
  case 14:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 2160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2160]) return breakpoint(s, 15, 2160, r0);
  case 15:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 2161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2161]) return breakpoint(s, 16, 2161, r0);
  case 16:
    r0 = (s.arg0).fields["repeatX"] = (false);
    s.lastBrkId = 2162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2162]) return breakpoint(s, 17, 2162, r0);
  case 17:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 2163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2163]) return breakpoint(s, 18, 2163, r0);
  case 18:
    r0 = (s.arg0).fields["alignX"] = (s.arg2);
    s.lastBrkId = 2164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2164]) return breakpoint(s, 19, 2164, r0);
  case 19:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 2165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2165]) return breakpoint(s, 20, 2165, r0);
  case 20:
    { step = 6; continue; }
  case 4:
  case 5:
    s.lastBrkId = 2166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2166]) return breakpoint(s, 21, 2166, r0);
  case 21:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 2167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2167]) return breakpoint(s, 22, 2167, r0);
  case 22:
    r0 = (s.arg0).fields["repeatY"] = (false);
    s.lastBrkId = 2168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2168]) return breakpoint(s, 23, 2168, r0);
  case 23:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 2169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2169]) return breakpoint(s, 24, 2169, r0);
  case 24:
    r0 = (s.arg0).fields["alignY"] = (s.arg2);
    s.lastBrkId = 2170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2170]) return breakpoint(s, 25, 2170, r0);
  case 25:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_constructor__P2282.info = {"start":1936,"length":1117,"line":72,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","distance","alignment","img"]}

function scene_BackgroundLayer_constructor__P2282_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_constructor__P2282, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_y__P2370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2410]) return breakpoint(s, 1, 2410, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_y__P2370.info = {"start":1398,"length":79,"line":49,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"y","argumentNames":["this"]}
scene_Camera_y__P2370.isGetter = true;

function scene_Camera_y__P2370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_y__P2370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Camera_x__P2369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2409]) return breakpoint(s, 1, 2409, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_x__P2369.info = {"start":1311,"length":78,"line":46,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"x","argumentNames":["this"]}
scene_Camera_x__P2369.isGetter = true;

function scene_Camera_x__P2369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_x__P2369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ShapeFactory_createParticle__P2744(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20433 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2740_VT)) failedCast(r0);
    s.lastBrkId = 3197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3197]) return breakpoint(s, 1, 3197, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_createParticle__P2730_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1435; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___20433 = (r0);
    s.lastBrkId = 3198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3198]) return breakpoint(s, 3, 3198, r0);
  case 3:
    s.tmp_0 = r0 = s.p___20433;
    s.tmp_2 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 14;
    s.callLocIdx = 1436; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.tmp_1);
    s.lastBrkId = 3199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3199]) return breakpoint(s, 5, 3199, r0);
  case 5:
    r0 = s.p___20433;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_createParticle__P2744.info = {"start":7505,"length":178,"line":239,"column":8,"endLine":243,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ShapeFactory_createParticle__P2744_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_createParticle__P2744, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  p___20433: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_createParticle__P2730(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20445 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C2724_VT)) failedCast(r0);
    s.lastBrkId = 3168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3168]) return breakpoint(s, 3, 3168, r0);
  case 3:
    s.tmp_0 = particles_SprayFactory_createParticle__P2720_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1402; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.p___20445 = (r0);
    s.lastBrkId = 3169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3169]) return breakpoint(s, 5, 3169, r0);
  case 5:
    s.tmp_0 = r0 = s.p___20445;
    s.tmp_2 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["minLifespan"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["maxLifespan"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1403; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 3170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3170]) return breakpoint(s, 7, 3170, r0);
  case 7:
    s.tmp_0 = r0 = s.p___20445;
    s.tmp_2 = Fx_iadd__P153_mk(s);
    s.tmp_4 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1404; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2.arg0 = r0;
    r0 = s.p___20445.fields["_x"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1405; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 3171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3171]) return breakpoint(s, 10, 3171, r0);
  case 10:
    s.tmp_1 = if_height_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "height");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["height"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["height"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1407; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_height_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "height");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["height"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["height"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1408; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.p___20445;
    s.tmp_7 = Fx_iadd__P153_mk(s);
    s.tmp_9 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = 0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 1406; s.pc = 14; return s.tmp_9;
  case 14:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.tmp_4);
    s.tmp_7.arg0 = r0;
    r0 = s.p___20445.fields["_y"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1409; s.pc = 13; return s.tmp_7;
  case 13:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 3172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3172]) return breakpoint(s, 15, 3172, r0);
  case 15:
    r0 = s.p___20445;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_createParticle__P2730.info = {"start":4334,"length":426,"line":148,"column":8,"endLine":156,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_AreaFactory_createParticle__P2730_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_createParticle__P2730, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  p___20445: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_SprayFactory_createParticle__P2720(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20493 = undefined;
    s.angle___20497 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2718_VT)) failedCast(r0);
    s.lastBrkId = 3153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3153]) return breakpoint(s, 1, 3153, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_createParticle__P2716_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1391; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___20493 = (r0);
    s.lastBrkId = 3154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3154]) return breakpoint(s, 3, 3154, r0);
  case 3:
    r0 = s.arg0.fields["minAngle"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_3.arg0 = globals.galois___4426;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["spread"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1392; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % 100);
    s.angle___20497 = (r0);
    s.lastBrkId = 3155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3155]) return breakpoint(s, 5, 3155, r0);
  case 5:
    s.tmp_0 = r0 = s.p___20493;
    s.tmp_2 = Fx_mul__P155_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedSin___4421, s.angle___20497);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1393; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 3156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3156]) return breakpoint(s, 7, 3156, r0);
  case 7:
    s.tmp_0 = r0 = s.p___20493;
    s.tmp_2 = Fx_mul__P155_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedCos___4422, s.angle___20497);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1394; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 3157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3157]) return breakpoint(s, 9, 3157, r0);
  case 9:
    r0 = s.p___20493;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_createParticle__P2720.info = {"start":2851,"length":333,"line":105,"column":8,"endLine":113,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_SprayFactory_createParticle__P2720_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_createParticle__P2720, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___20493: undefined,
  angle___20497: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ScreenEffect_startScreenEffect__P2795(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C2793_VT)) failedCast(r0);
    s.lastBrkId = 3269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3269]) return breakpoint(s, 14, 3269, r0);
  case 14:
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3270]) return breakpoint(s, 15, 3270, r0);
  case 15:
    { step = 13; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3271]) return breakpoint(s, 16, 3271, r0);
  case 16:
    r0 = s.arg0.fields["source"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    s.tmp_4 = particles_ParticleSource_enabled__P2690_mk(s);
    r0 = s.arg0.fields["source"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1473; s.pc = 17; return s.tmp_4;
  case 17:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3272]) return breakpoint(s, 18, 3272, r0);
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3273]) return breakpoint(s, 19, 3273, r0);
  case 19:
    r0 = s.arg0.fields["source"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6).fields["lifespan"] = (s.arg1);
  case 5:
  case 6:
    s.lastBrkId = 3274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3274]) return breakpoint(s, 20, 3274, r0);
  case 20:
    { step = 13; continue; }
  case 7:
  case 8:
    s.lastBrkId = 3275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3275]) return breakpoint(s, 21, 3275, r0);
  case 21:
    s.tmp_0 = effects_ScreenEffect_endScreenEffect__P2796_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1474; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 3276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3276]) return breakpoint(s, 23, 3276, r0);
  case 23:
    r0 = pxsim_pxtcore_mkClassInstance(effects_SceneAnchor__C4454_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_SceneAnchor_constructor__P4459_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1475; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 9; continue; }
    r0 = s.arg2;
    { step = 10; continue; }
  case 9:
    r0 = s.arg0.fields["sceneDefaultRate"];
  case 10:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = if_sourceFactory_3_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.tmp_0;
    s.tmp_5.arg2 = s.tmp_2;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1476; s.pc = 25; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1476; s.pc = 25; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 1476; s.pc = 25; return s.tmp_5;; }
     else { s.callLocIdx = 1476; s.pc = 25; return s.tmp_5; }
    }
  case 25:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["source"] = (s.tmp_4);
    s.lastBrkId = 3277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3277]) return breakpoint(s, 26, 3277, r0);
  case 26:
    r0 = s.arg0.fields["source"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["priority"] = (10);
    s.lastBrkId = 3278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3278]) return breakpoint(s, 27, 3278, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3279]) return breakpoint(s, 28, 3279, r0);
  case 28:
    r0 = s.arg0.fields["source"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.arg1);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_startScreenEffect__P2795.info = {"start":3680,"length":601,"line":97,"column":8,"endLine":112,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"startScreenEffect","argumentNames":["this","duration","particlesPerSecond"]}

function effects_ScreenEffect_startScreenEffect__P2795_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_startScreenEffect__P2795, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_SceneAnchor_constructor__P4459(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4454_VT)) failedCast(r0);
    s.lastBrkId = 3262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3262]) return breakpoint(s, 1, 3262, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1469; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["camera"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_SceneAnchor_constructor__P4459.info = {"start":2296,"length":79,"line":55,"column":8,"endLine":57,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this"]}

function effects_SceneAnchor_constructor__P4459_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_constructor__P4459, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function effects_ScreenEffect_endScreenEffect__P2796(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C2793_VT)) failedCast(r0);
    s.lastBrkId = 3280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3280]) return breakpoint(s, 3, 3280, r0);
  case 3:
    r0 = s.arg0.fields["source"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3281]) return breakpoint(s, 4, 3281, r0);
  case 4:
    s.tmp_1 = particles_ParticleSource_destroy__P2692_mk(s);
    r0 = s.arg0.fields["source"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1477; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 3282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3282]) return breakpoint(s, 6, 3282, r0);
  case 6:
    r0 = (s.arg0).fields["source"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_endScreenEffect__P2796.info = {"start":4677,"length":160,"line":122,"column":8,"endLine":127,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"endScreenEffect","argumentNames":["this"]}

function effects_ScreenEffect_endScreenEffect__P2796_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_endScreenEffect__P2796, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_startScreenEffect__P2820(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.wasRunning___20585 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2816_VT)) failedCast(r0);
    s.lastBrkId = 3305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3305]) return breakpoint(s, 8, 3305, r0);
  case 8:
    s.tmp_3 = scene_Background_hasBackgroundImage__P2273_mk(s);
    s.tmp_4 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1497; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    r0 = r0.fields["background"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1498; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3306]) return breakpoint(s, 11, 3306, r0);
  case 11:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3307]) return breakpoint(s, 12, 3307, r0);
  case 12:
    r0 = s.arg0.fields["times"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 != undefined);
    s.wasRunning___20585 = (r0);
    s.lastBrkId = 3308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3308]) return breakpoint(s, 13, 3308, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    r0 = s.arg1;
    { step = 4; continue; }
  case 3:
    r0 = 15;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["times"] = (s.tmp_0);
    s.lastBrkId = 3309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3309]) return breakpoint(s, 14, 3309, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.wasRunning___20585);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3310]) return breakpoint(s, 15, 3310, r0);
  case 15:
    r0 = pxsim_pxtcore_mkAction(2, inline__P20598);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 1, s.arg2);
    r0 = pxsim.control.runInParallel(s.tmp_2);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_startScreenEffect__P2820.info = {"start":1457,"length":637,"line":41,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"startScreenEffect","argumentNames":["this","times","delay"]}

function effects_ImageEffect_startScreenEffect__P2820_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_startScreenEffect__P2820, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  wasRunning___20585: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P20598(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3311]) return breakpoint(s, 5, 3311, r0);
  case 5:
  case 1:
    s.lastBrkId = 3312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3312]) return breakpoint(s, 6, 3312, r0);
  case 6:
    r0 = s.caps[0].fields["times"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3313]) return breakpoint(s, 7, 3313, r0);
  case 7:
    s.tmp_2 = effects_ImageEffect_change__P2819_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.tmp_3 = scene_backgroundImage__P2460_mk(s);
    s.callLocIdx = 1499; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1500; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 3314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3314]) return breakpoint(s, 10, 3314, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.caps[1]);
    if (!r0) { step = 2; continue; }
    r0 = s.caps[1];
    { step = 3; continue; }
  case 2:
    r0 = s.caps[0].fields["preferredDelay"];
  case 3:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    s.tmp_1 = pause__P402_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1501; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3315]) return breakpoint(s, 12, 3315, r0);
  case 12:
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["times"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["times"] = (s.tmp_1);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 3316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3316]) return breakpoint(s, 13, 3316, r0);
  case 13:
    r0 = (s.caps[0]).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P20598.info = {"start":1764,"length":304,"line":47,"column":38,"endLine":54,"endColumn":17,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":[]}

function inline__P20598_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P20598, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_backgroundImage__P2460(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___20617 = undefined;
    s.lastBrkId = 2529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2529]) return breakpoint(s, 1, 2529, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 1049; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___20617 = (r0);
    s.lastBrkId = 2530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2530]) return breakpoint(s, 3, 2530, r0);
  case 3:
    s.tmp_0 = scene_Background_image__P2271_mk(s);
    r0 = s.scene___20617.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1050; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_backgroundImage__P2460.info = {"start":2273,"length":130,"line":90,"column":4,"endLine":93,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"backgroundImage","argumentNames":[]}

function scene_backgroundImage__P2460_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_backgroundImage__P2460, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___20617: undefined,
} }





function scene_Background_hasBackgroundImage__P2273(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2265_VT)) failedCast(r0);
    s.lastBrkId = 2144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2144]) return breakpoint(s, 1, 2144, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_Background_hasBackgroundImage__P2273.info = {"start":1081,"length":75,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"hasBackgroundImage","argumentNames":["this"]}

function scene_Background_hasBackgroundImage__P2273_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_hasBackgroundImage__P2273, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function particles_ParticleSource___draw__P2684(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___20630 = undefined;
    s.left___20633 = undefined;
    s.top___20643 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 2998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2998]) return breakpoint(s, 9, 2998, r0);
  case 9:
    r0 = s.arg0.fields["head"];
    s.current___20630 = (r0);
    s.lastBrkId = 2999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2999]) return breakpoint(s, 10, 2999, r0);
  case 10:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = s.arg1.fields["drawOffsetX"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1324; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.left___20633 = (s.tmp_3);
    s.lastBrkId = 3000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3000]) return breakpoint(s, 12, 3000, r0);
  case 12:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    s.tmp_2 = Fx8__P144_mk(s);
    r0 = s.arg1.fields["drawOffsetY"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1325; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.top___20643 = (s.tmp_3);
    s.lastBrkId = 3001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3001]) return breakpoint(s, 14, 3001, r0);
  case 14:
  case 5:
    s.lastBrkId = 3002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3002]) return breakpoint(s, 15, 3002, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.current___20630);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 3003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3003]) return breakpoint(s, 16, 3003, r0);
  case 16:
    r0 = s.current___20630.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3004]) return breakpoint(s, 17, 3004, r0);
  case 17:
    s.tmp_2 = particles_ParticleSource_drawParticle__P4412_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.current___20630;
    s.tmp_2.arg2 = s.left___20633;
    s.tmp_2.arg3 = s.top___20643;
    s.callLocIdx = 1326; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 3005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3005]) return breakpoint(s, 19, 3005, r0);
  case 19:
    r0 = s.current___20630.fields["next"];
    s.current___20630 = (r0);
    { step = 5; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource___draw__P2684.info = {"start":3199,"length":468,"line":111,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"__draw","argumentNames":["this","camera"]}

function particles_ParticleSource___draw__P2684_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource___draw__P2684, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  current___20630: undefined,
  left___20633: undefined,
  top___20643: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_drawParticle__P4412(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2678_VT)) failedCast(r0);
    s.lastBrkId = 3077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3077]) return breakpoint(s, 1, 3077, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory__C2714_v1_4_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_1 = Fx_sub__P154_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 1348; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_2 = Fx_sub__P154_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 1349; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C2714_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawParticle;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_drawParticle__P4412.info = {"start":8598,"length":174,"line":286,"column":8,"endLine":288,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"drawParticle","argumentNames":["this","p","screenLeft","screenTop"]}

function particles_ParticleSource_drawParticle__P4412_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_drawParticle__P4412, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_ParticleFactory_drawParticle__P2717(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C2714_VT)) failedCast(r0);
    s.lastBrkId = 3148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3148]) return breakpoint(s, 1, 3148, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_2 = Fx_toInt__P165_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1385; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P165_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1386; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_drawParticle__P2717.info = {"start":2265,"length":118,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_ParticleFactory_drawParticle__P2717_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_drawParticle__P2717, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_TrailFactory_createParticle__P2738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___17828 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_TrailFactory__C2732_VT)) failedCast(r0);
    s.lastBrkId = 3181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3181]) return breakpoint(s, 1, 3181, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_createParticle__P2716_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1418; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___17828 = (r0);
    s.lastBrkId = 3182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3182]) return breakpoint(s, 3, 3182, r0);
  case 3:
    s.tmp_0 = r0 = s.p___17828;
    s.tmp_2 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["minLifespan"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["maxLifespan"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1419; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 3183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3183]) return breakpoint(s, 5, 3183, r0);
  case 5:
    s.tmp_0 = r0 = s.p___17828;
    s.tmp_2 = Fx_iadd__P153_mk(s);
    s.tmp_4 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1420; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2.arg0 = r0;
    r0 = s.p___17828.fields["_x"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1421; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 3184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3184]) return breakpoint(s, 8, 3184, r0);
  case 8:
    s.tmp_0 = r0 = s.p___17828;
    s.tmp_2 = Fx_iadd__P153_mk(s);
    s.tmp_4 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1422; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2.arg0 = r0;
    r0 = s.p___17828.fields["_y"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1423; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 3185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3185]) return breakpoint(s, 11, 3185, r0);
  case 11:
    s.tmp_0 = r0 = s.p___17828;
    s.tmp_2 = Math_FastRandom_randomRange__P2590_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 15;
    s.callLocIdx = 1424; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.tmp_1);
    s.lastBrkId = 3186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3186]) return breakpoint(s, 13, 3186, r0);
  case 13:
    r0 = s.p___17828;
    return leave(s, r0)
  default: oops()
} } }
particles_TrailFactory_createParticle__P2738.info = {"start":5683,"length":461,"line":185,"column":8,"endLine":194,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_TrailFactory_createParticle__P2738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_TrailFactory_createParticle__P2738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  p___17828: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_toString__P2090(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1467]) return breakpoint(s, 1, 1467, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "(");
    s.tmp_7 = r0;
    s.tmp_14 = Sprite_x__P2025_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 494; s.pc = 3; return s.tmp_14;
  case 3:
    r0 = s.retval;
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_12);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, ",");
    s.tmp_5 = r0;
    s.tmp_17 = Sprite_y__P2027_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.callLocIdx = 495; s.pc = 5; return s.tmp_17;
  case 5:
    r0 = s.retval;
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")->(");
    s.tmp_3 = r0;
    s.tmp_20 = Sprite_vx__P2029_mk(s);
    s.tmp_20.arg0 = s.arg0;
    s.callLocIdx = 496; s.pc = 7; return s.tmp_20;
  case 7:
    r0 = s.retval;
    s.tmp_19 = r0;
    if ((s.tmp_19) && (s.tmp_19).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_19);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_19) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_18);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_23 = Sprite_vy__P2031_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 497; s.pc = 9; return s.tmp_23;
  case 9:
    r0 = s.retval;
    s.tmp_22 = r0;
    if ((s.tmp_22) && (s.tmp_22).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_22);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_22) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_21);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
Sprite_toString__P2090.info = {"start":33194,"length":93,"line":980,"column":4,"endLine":982,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"toString","argumentNames":["this"]}

function Sprite_toString__P2090_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_toString__P2090, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  arg0: undefined,
} }





function Sprite___update__P2078(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bounce___20762 = undefined;
    s.tm___20767 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1349]) return breakpoint(s, 33, 1349, r0);
  case 33:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1350]) return breakpoint(s, 34, 1350, r0);
  case 34:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.arg2 * 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 1351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1351]) return breakpoint(s, 35, 1351, r0);
  case 35:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1352]) return breakpoint(s, 36, 1352, r0);
  case 36:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1353]) return breakpoint(s, 37, 1353, r0);
  case 37:
    s.tmp_0 = Sprite__destroyCore__P2088_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 398; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1354]) return breakpoint(s, 39, 1354, r0);
  case 39:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_isOutOfScreen__P2076_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 399; s.pc = 40; return s.tmp_2;
  case 40:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1355]) return breakpoint(s, 41, 1355, r0);
  case 41:
    s.tmp_4 = Sprite_destroy__P2087_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = undefined;
    s.tmp_4.arg2 = undefined;
    s.callLocIdx = 400; s.pc = 42; return s.tmp_4;
  case 42:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1356]) return breakpoint(s, 43, 1356, r0);
  case 43:
    r0 = s.arg0.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 32);
    s.bounce___20762 = (r0);
    s.lastBrkId = 1357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1357]) return breakpoint(s, 44, 1357, r0);
  case 44:
    s.tmp_0 = game_currentScene__P2532_mk(s);
    s.callLocIdx = 401; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___20767 = (r0);
    s.lastBrkId = 1358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1358]) return breakpoint(s, 46, 1358, r0);
  case 46:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 8);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 9:
    s.tmp_2 = r0 = s.bounce___20762;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_2;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.tm___20767);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 12:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 1359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1359]) return breakpoint(s, 47, 1359, r0);
  case 47:
    s.tmp_8 = Sprite_left__P2062_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 402; s.pc = 48; return s.tmp_8;
  case 48:
    r0 = s.retval;
    s.tmp_7 = r0;
    s.tmp_10 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 403; s.pc = 49; return s.tmp_10;
  case 49:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_7 < s.tmp_9);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1360]) return breakpoint(s, 50, 1360, r0);
  case 50:
    s.tmp_11 = Sprite_left__P2063_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.tmp_12 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_12.arg0 = s.arg1;
    s.callLocIdx = 404; s.pc = 52; return s.tmp_12;
  case 52:
    r0 = s.retval;
    s.tmp_11.arg1 = r0;
    s.callLocIdx = 405; s.pc = 51; return s.tmp_11;
  case 51:
    r0 = s.retval;
    s.lastBrkId = 1361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1361]) return breakpoint(s, 53, 1361, r0);
  case 53:
    r0 = pxsim_numops_toBoolDecr(s.bounce___20762);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1362]) return breakpoint(s, 54, 1362, r0);
  case 54:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vx__P2029_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 406; s.pc = 56; return s.tmp_2;
  case 56:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 407; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
  case 13:
  case 14:
    { step = 20; continue; }
  case 15:
    s.lastBrkId = 1363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1363]) return breakpoint(s, 57, 1363, r0);
  case 57:
    s.tmp_2 = Sprite_right__P2064_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 408; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 409; s.pc = 59; return s.tmp_5;
  case 59:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1364]) return breakpoint(s, 60, 1364, r0);
  case 60:
    s.tmp_7 = Sprite_right__P2065_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_9 = scene_Camera_offsetX__P2365_mk(s);
    s.tmp_9.arg0 = s.arg1;
    s.callLocIdx = 410; s.pc = 62; return s.tmp_9;
  case 62:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_10 = r0;
    r0 = (s.tmp_8 + s.tmp_10);
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 411; s.pc = 61; return s.tmp_7;
  case 61:
    r0 = s.retval;
    s.lastBrkId = 1365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1365]) return breakpoint(s, 63, 1365, r0);
  case 63:
    r0 = pxsim_numops_toBoolDecr(s.bounce___20762);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 1366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1366]) return breakpoint(s, 64, 1366, r0);
  case 64:
    s.tmp_0 = Sprite_vx__P2030_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vx__P2029_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 412; s.pc = 66; return s.tmp_2;
  case 66:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 413; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.lastBrkId = 1367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1367]) return breakpoint(s, 67, 1367, r0);
  case 67:
    s.tmp_2 = Sprite_top__P2066_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 414; s.pc = 68; return s.tmp_2;
  case 68:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 415; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 < s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 1368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1368]) return breakpoint(s, 70, 1368, r0);
  case 70:
    s.tmp_5 = Sprite_top__P2067_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 416; s.pc = 72; return s.tmp_6;
  case 72:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 417; s.pc = 71; return s.tmp_5;
  case 71:
    r0 = s.retval;
    s.lastBrkId = 1369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1369]) return breakpoint(s, 73, 1369, r0);
  case 73:
    r0 = pxsim_numops_toBoolDecr(s.bounce___20762);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1370]) return breakpoint(s, 74, 1370, r0);
  case 74:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vy__P2031_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 418; s.pc = 76; return s.tmp_2;
  case 76:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 419; s.pc = 75; return s.tmp_0;
  case 75:
    r0 = s.retval;
  case 21:
  case 22:
    { step = 28; continue; }
  case 23:
    s.lastBrkId = 1371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1371]) return breakpoint(s, 77, 1371, r0);
  case 77:
    s.tmp_2 = Sprite_bottom__P2068_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 420; s.pc = 78; return s.tmp_2;
  case 78:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 421; s.pc = 79; return s.tmp_5;
  case 79:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 1372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1372]) return breakpoint(s, 80, 1372, r0);
  case 80:
    s.tmp_7 = Sprite_bottom__P2069_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_9 = scene_Camera_offsetY__P2367_mk(s);
    s.tmp_9.arg0 = s.arg1;
    s.callLocIdx = 422; s.pc = 82; return s.tmp_9;
  case 82:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_10 = r0;
    r0 = (s.tmp_8 + s.tmp_10);
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 423; s.pc = 81; return s.tmp_7;
  case 81:
    r0 = s.retval;
    s.lastBrkId = 1373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1373]) return breakpoint(s, 83, 1373, r0);
  case 83:
    r0 = pxsim_numops_toBoolDecr(s.bounce___20762);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1374]) return breakpoint(s, 84, 1374, r0);
  case 84:
    s.tmp_0 = Sprite_vy__P2032_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vy__P2031_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 424; s.pc = 86; return s.tmp_2;
  case 86:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 425; s.pc = 85; return s.tmp_0;
  case 85:
    r0 = s.retval;
  case 24:
  case 25:
  case 26:
  case 27:
  case 28:
  case 29:
  case 30:
    s.lastBrkId = 1375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1375]) return breakpoint(s, 87, 1375, r0);
  case 87:
    r0 = s.arg0.fields["updateSay"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    s.lastBrkId = 1376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1376]) return breakpoint(s, 88, 1376, r0);
  case 88:
    s.tmp_1 = if_updateSay_3_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    s.tmp_1.arg2 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "updateSay"), 3);
      s.callLocIdx = 426; s.pc = 89; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["updateSay"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["updateSay"], 3); s.callLocIdx = 426; s.pc = 89; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 426; s.pc = 89; return s.tmp_1;; }
     else { s.callLocIdx = 426; s.pc = 89; return s.tmp_1; }
    }
  case 89:
    r0 = s.retval;
  case 31:
  case 32:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___update__P2078.info = {"start":22253,"length":1390,"line":682,"column":4,"endLine":721,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function Sprite___update__P2078_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___update__P2078, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  bounce___20762: undefined,
  tm___20767: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isOutOfScreen__P2076(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___20844 = undefined;
    s.oy___20852 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1325]) return breakpoint(s, 11, 1325, r0);
  case 11:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["drawOffsetX"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.ox___20844 = (s.tmp_2);
    s.lastBrkId = 1326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1326]) return breakpoint(s, 12, 1326, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetY"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___20852 = (s.tmp_2);
    s.lastBrkId = 1327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1327]) return breakpoint(s, 13, 1327, r0);
  case 13:
    s.tmp_3 = Sprite_right__P2064_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 367; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.ox___20844);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = Sprite_bottom__P2068_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 368; s.pc = 15; return s.tmp_6;
  case 15:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.oy___20852);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_7;
    { step = 8; continue; }
  case 7:
    s.tmp_10 = Sprite_left__P2062_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 369; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.ox___20844);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_11 = r0;
    r0 = (s.tmp_8 > s.tmp_11);
  case 8:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_12;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_top__P2066_mk(s);
    s.tmp_15.arg0 = s.arg0;
    s.callLocIdx = 370; s.pc = 17; return s.tmp_15;
  case 17:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_14 - s.oy___20852);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_16 = r0;
    r0 = (s.tmp_13 > s.tmp_16);
  case 10:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isOutOfScreen__P2076.info = {"start":20500,"length":358,"line":636,"column":4,"endLine":640,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isOutOfScreen","argumentNames":["this","camera"]}

function Sprite_isOutOfScreen__P2076_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isOutOfScreen__P2076, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  ox___20844: undefined,
  oy___20852: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_data__P2042(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1246]) return breakpoint(s, 1, 1246, r0);
  case 1:
    r0 = (s.arg0).fields["_data"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_data__P2042.info = {"start":4292,"length":56,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this","value"]}

function Sprite_data__P2042_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2042, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___update__P1866(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___update__P1866.info = {"start":1027,"length":46,"line":45,"column":8,"endLine":45,"endColumn":54,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function sprites_BaseSprite___update__P1866_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___update__P1866, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite___draw__P1864(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    s.lastBrkId = 995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[995]) return breakpoint(s, 3, 995, r0);
  case 3:
    s.tmp_1 = sprites_BaseSprite__C1858_v0_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSprite__C1858_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.__visible;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[996]) return breakpoint(s, 5, 996, r0);
  case 5:
    s.tmp_2 = sprites_BaseSprite__C1858_v2_2_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_2.arg0, sprites_BaseSprite__C1858_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.__drawCore;
    s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___draw__P1864.info = {"start":840,"length":131,"line":37,"column":8,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__draw","argumentNames":["this","camera"]}

function sprites_BaseSprite___draw__P1864_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___draw__P1864, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___drawCore__P1865(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___drawCore__P1865.info = {"start":981,"length":36,"line":43,"column":8,"endLine":43,"endColumn":44,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function sprites_BaseSprite___drawCore__P1865_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___drawCore__P1865, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___visible__P1861(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1858_VT)) failedCast(r0);
    s.lastBrkId = 990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[990]) return breakpoint(s, 1, 990, r0);
  case 1:
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___visible__P1861.info = {"start":524,"length":57,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__visible","argumentNames":["this"]}

function sprites_BaseSprite___visible__P1861_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___visible__P1861, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_AnyButton_isPressed__P3897(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctrl___20900 = undefined;
    s.b___20904 = undefined;
    s.unnamed2872___U2 = undefined;
    s.unnamed2873___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_AnyButton__C3895_VT)) failedCast(r0);
    s.lastBrkId = 1054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1054]) return breakpoint(s, 6, 1054, r0);
  case 6:
    s.tmp_0 = controller__player1__P1917_mk(s);
    s.callLocIdx = 192; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.ctrl___20900 = (r0);
    s.lastBrkId = 1055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1055]) return breakpoint(s, 8, 1055, r0);
  case 8:
    s.b___20904 = (undefined);
    r0 = s.ctrl___20900.fields["buttons"];
    s.unnamed2872___U2 = (r0);
    s.unnamed2873___U3 = (0);
    s.lastBrkId = 1056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1056]) return breakpoint(s, 9, 1056, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed2873___U3;
    r0 = pxsim_Array__length(s.unnamed2872___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2872___U2, s.unnamed2873___U3);
    s.b___20904 = (r0);
    s.lastBrkId = 1057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1057]) return breakpoint(s, 10, 1057, r0);
  case 10:
    s.tmp_3 = controller_Button__C1903_v0_1_mk(s);
    s.tmp_3.arg0 = s.b___20904;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C1903_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1058]) return breakpoint(s, 12, 1058, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed2873___U3 + 1);
    s.unnamed2873___U3 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed2872___U2 = (undefined);
    s.lastBrkId = 1059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1059]) return breakpoint(s, 13, 1059, r0);
  case 13:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_AnyButton_isPressed__P3897.info = {"start":5874,"length":202,"line":185,"column":8,"endLine":192,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_AnyButton_isPressed__P3897_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_AnyButton_isPressed__P3897, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ctrl___20900: undefined,
  b___20904: undefined,
  unnamed2872___U2: undefined,
  unnamed2873___U3: undefined,
  arg0: undefined,
} }





function controller_Button_toString__P1908(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1903_VT)) failedCast(r0);
    s.lastBrkId = 1008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1008]) return breakpoint(s, 3, 1008, r0);
  case 3:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "down";
    { step = 2; continue; }
  case 1:
    r0 = "up";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("btn ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, " ");
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    return leave(s, r0)
  default: oops()
} } }
controller_Button_toString__P1908.info = {"start":1479,"length":100,"line":63,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"toString","argumentNames":["this"]}

function controller_Button_toString__P1908_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_toString__P1908, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function effects_SceneAnchor_height__P4458(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4454_VT)) failedCast(r0);
    s.lastBrkId = 3266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3266]) return breakpoint(s, 1, 3266, r0);
  case 1:
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_height__P4458.info = {"start":2634,"length":58,"line":71,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"height","argumentNames":["this"]}
effects_SceneAnchor_height__P4458.isGetter = true;

function effects_SceneAnchor_height__P4458_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_height__P4458, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_SceneAnchor_width__P4457(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4454_VT)) failedCast(r0);
    s.lastBrkId = 3265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3265]) return breakpoint(s, 1, 3265, r0);
  case 1:
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_width__P4457.info = {"start":2568,"length":56,"line":67,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"width","argumentNames":["this"]}
effects_SceneAnchor_width__P4457.isGetter = true;

function effects_SceneAnchor_width__P4457_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_width__P4457, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_SceneAnchor_y__P4456(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4454_VT)) failedCast(r0);
    s.lastBrkId = 3264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3264]) return breakpoint(s, 1, 3264, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetY__P2367_mk(s);
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1471; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1802);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_y__P4456.info = {"start":2476,"length":82,"line":63,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"y","argumentNames":["this"]}
effects_SceneAnchor_y__P4456.isGetter = true;

function effects_SceneAnchor_y__P4456_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_y__P4456, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function effects_SceneAnchor_x__P4455(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4454_VT)) failedCast(r0);
    s.lastBrkId = 3263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3263]) return breakpoint(s, 1, 3263, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetX__P2365_mk(s);
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1470; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1802);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_x__P4455.info = {"start":2385,"length":81,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"x","argumentNames":["this"]}
effects_SceneAnchor_x__P4455.isGetter = true;

function effects_SceneAnchor_x__P4455_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_x__P4455, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_width__P2156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2146_VT)) failedCast(r0);
    s.lastBrkId = 1581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1581]) return breakpoint(s, 1, 1581, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_width__P2156.info = {"start":1088,"length":68,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"width","argumentNames":["this"]}
sprites_StaticObstacle_width__P2156.isGetter = true;

function sprites_StaticObstacle_width__P2156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_width__P2156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_height__P2155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2146_VT)) failedCast(r0);
    s.lastBrkId = 1580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1580]) return breakpoint(s, 1, 1580, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_height__P2155.info = {"start":1008,"length":70,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"height","argumentNames":["this"]}
sprites_StaticObstacle_height__P2155.isGetter = true;

function sprites_StaticObstacle_height__P2155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_height__P2155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_y__P2154(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2146_VT)) failedCast(r0);
    s.lastBrkId = 1579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1579]) return breakpoint(s, 1, 1579, r0);
  case 1:
    r0 = s.arg0.fields["top"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_height__P2155_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 550; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_y__P2154.info = {"start":921,"length":77,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"y","argumentNames":["this"]}
sprites_StaticObstacle_y__P2154.isGetter = true;

function sprites_StaticObstacle_y__P2154_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_y__P2154, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_x__P2153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2146_VT)) failedCast(r0);
    s.lastBrkId = 1578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1578]) return breakpoint(s, 1, 1578, r0);
  case 1:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_width__P2156_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 549; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_x__P2153.info = {"start":834,"length":77,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"x","argumentNames":["this"]}
sprites_StaticObstacle_x__P2153.isGetter = true;

function sprites_StaticObstacle_x__P2153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_x__P2153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function animation_PathNode_constructor__P3472(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_PathNode__C3470_VT)) failedCast(r0);
    s.lastBrkId = 3365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3365]) return breakpoint(s, 1, 3365, r0);
  case 1:
    r0 = (s.arg0).fields["setStart"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_PathNode_constructor__P3472.info = {"start":12941,"length":60,"line":306,"column":8,"endLine":308,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["this"]}

function animation_PathNode_constructor__P3472_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_PathNode_constructor__P3472, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function animation_Path_constructor__P3465(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3464_VT)) failedCast(r0);
    s.lastBrkId = 3353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3353]) return breakpoint(s, 1, 3353, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["nodes"] = (s.tmp_1);
    s.lastBrkId = 3354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3354]) return breakpoint(s, 2, 3354, r0);
  case 2:
    r0 = (s.arg0).fields["lastNode"] = (-1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_Path_constructor__P3465.info = {"start":777,"length":86,"line":32,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/animation/animation.ts","functionName":"inline","argumentNames":["this"]}

function animation_Path_constructor__P3465_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_constructor__P3465, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function particles_AshFactory_drawParticle__P2761(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AshFactory__C2758_VT)) failedCast(r0);
    s.lastBrkId = 3248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3248]) return breakpoint(s, 1, 3248, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_2 = Fx_toInt__P165_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1462; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P165_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1463; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg1.fields["color"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.tmp_5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AshFactory_drawParticle__P2761.info = {"start":13926,"length":117,"line":444,"column":8,"endLine":446,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_AshFactory_drawParticle__P2761_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AshFactory_drawParticle__P2761, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Renderable___drawCore__P2381(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2378_VT)) failedCast(r0);
    s.lastBrkId = 2435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2435]) return breakpoint(s, 1, 2435, r0);
  case 1:
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.screen___1802;
    s.tmp_0.arg2 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 1012; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 1012; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1012; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 1012; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___drawCore__P2381.info = {"start":390,"length":86,"line":14,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function scene_Renderable___drawCore__P2381_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___drawCore__P2381, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Renderable___visible__P2380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2378_VT)) failedCast(r0);
    s.lastBrkId = 2434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2434]) return breakpoint(s, 1, 2434, r0);
  case 1:
    s.tmp_0 = if_shouldBeVisible_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "shouldBeVisible"), 1);
      s.callLocIdx = 1011; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["shouldBeVisible"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["shouldBeVisible"], 1); s.callLocIdx = 1011; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1011; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 1011; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___visible__P2380.info = {"start":305,"length":75,"line":10,"column":8,"endLine":12,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__visible","argumentNames":["this"]}

function scene_Renderable___visible__P2380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___visible__P2380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Camera_top__P2373(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2412]) return breakpoint(s, 1, 2412, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_top__P2373.info = {"start":1638,"length":58,"line":58,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"top","argumentNames":["this"]}
scene_Camera_top__P2373.isGetter = true;

function scene_Camera_top__P2373_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_top__P2373, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_left__P2371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2360_VT)) failedCast(r0);
    s.lastBrkId = 2411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2411]) return breakpoint(s, 1, 2411, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_left__P2371.info = {"start":1486,"length":59,"line":52,"column":8,"endLine":54,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"left","argumentNames":["this"]}
scene_Camera_left__P2371.isGetter = true;

function scene_Camera_left__P2371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_left__P2371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ShapeFactory_drawParticle__P2743(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pImage___21021 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2740_VT)) failedCast(r0);
    s.lastBrkId = 3194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3194]) return breakpoint(s, 1, 3194, r0);
  case 1:
    s.tmp_1 = Math_FastRandom_pickRandom__P2591_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["sources"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1430; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.pImage___21021 = (r0);
    s.lastBrkId = 3195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3195]) return breakpoint(s, 3, 3195, r0);
  case 3:
    r0 = s.arg1.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.pImage___21021, 15, s.tmp_0);
    s.lastBrkId = 3196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3196]) return breakpoint(s, 4, 3196, r0);
  case 4:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_1 = r0 = s.pImage___21021;
    s.tmp_3 = Fx_toInt__P165_mk(s);
    s.tmp_4 = Fx_sub__P154_mk(s);
    s.tmp_4.arg0 = s.arg2;
    r0 = s.arg0.fields["ox"];
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1431; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1432; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = Fx_toInt__P165_mk(s);
    s.tmp_7 = Fx_sub__P154_mk(s);
    s.tmp_7.arg0 = s.arg3;
    r0 = s.arg0.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1433; s.pc = 8; return s.tmp_7;
  case 8:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1434; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_drawParticle__P2743.info = {"start":7172,"length":323,"line":229,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_ShapeFactory_drawParticle__P2743_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_drawParticle__P2743, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  pImage___21021: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Math_FastRandom_pickRandom__P2591(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2586_VT)) failedCast(r0);
    s.lastBrkId = 2742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2742]) return breakpoint(s, 6, 2742, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2743]) return breakpoint(s, 7, 2743, r0);
  case 7:
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2744]) return breakpoint(s, 8, 2744, r0);
  case 8:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_FastRandom_randomRange__P2590_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 1143; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_pickRandom__P2591.info = {"start":2358,"length":192,"line":70,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"pickRandom","argumentNames":["this","list"]}

function Math_FastRandom_pickRandom__P2591_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_pickRandom__P2591, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_drawParticle__P2731(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.col___21067 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C2724_VT)) failedCast(r0);
    s.lastBrkId = 3173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3173]) return breakpoint(s, 5, 3173, r0);
  case 5:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 500);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 4;
    { step = 4; continue; }
  case 1:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 250);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = 5;
    { step = 3; continue; }
  case 2:
    r0 = 1;
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.col___21067 = (s.tmp_5);
    s.lastBrkId = 3174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3174]) return breakpoint(s, 6, 3174, r0);
  case 6:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_2 = Fx_toInt__P165_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1410; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P165_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1411; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.col___21067);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_drawParticle__P2731.info = {"start":4770,"length":222,"line":158,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_AreaFactory_drawParticle__P2731_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_drawParticle__P2731, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  col___21067: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_SprayFactory_drawParticle__P2721(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2718_VT)) failedCast(r0);
    s.lastBrkId = 3158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3158]) return breakpoint(s, 1, 3158, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_2 = Fx_toInt__P165_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1395; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P165_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1396; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_drawParticle__P2721.info = {"start":3194,"length":118,"line":115,"column":8,"endLine":117,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_SprayFactory_drawParticle__P2721_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_drawParticle__P2721, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_TrailFactory_drawParticle__P2739(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_TrailFactory__C2732_VT)) failedCast(r0);
    s.lastBrkId = 3187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3187]) return breakpoint(s, 1, 3187, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___1802;
    s.tmp_2 = Fx_toInt__P165_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1425; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P165_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1426; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg1.fields["color"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.tmp_5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_TrailFactory_drawParticle__P2739.info = {"start":6154,"length":117,"line":196,"column":8,"endLine":198,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_TrailFactory_drawParticle__P2739_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_TrailFactory_drawParticle__P2739, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite___drawCore__P2077(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___21098 = undefined;
    s.oy___21106 = undefined;
    s.l___21114 = undefined;
    s.t___21118 = undefined;
    s.font___21133 = undefined;
    s.tx___21137 = undefined;
    s.ty___21139 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1328]) return breakpoint(s, 20, 1328, r0);
  case 20:
    s.tmp_1 = Sprite_isOutOfScreen__P2076_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 371; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1329]) return breakpoint(s, 22, 1329, r0);
  case 22:
    { step = 19; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1330]) return breakpoint(s, 23, 1330, r0);
  case 23:
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 512);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetX"];
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.ox___21098 = (s.tmp_4);
    s.lastBrkId = 1331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1331]) return breakpoint(s, 24, 1331, r0);
  case 24:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = 0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg1.fields["drawOffsetY"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___21106 = (s.tmp_2);
    s.lastBrkId = 1332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1332]) return breakpoint(s, 25, 1332, r0);
  case 25:
    s.tmp_1 = Sprite_left__P2062_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 372; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.ox___21098);
    s.l___21114 = (r0);
    s.lastBrkId = 1333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1333]) return breakpoint(s, 27, 1333, r0);
  case 27:
    s.tmp_1 = Sprite_top__P2066_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 373; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.oy___21106);
    s.t___21118 = (r0);
    s.lastBrkId = 1334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1334]) return breakpoint(s, 29, 1334, r0);
  case 29:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___1802, s.tmp_0, s.l___21114, s.t___21118);
    s.lastBrkId = 1335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1335]) return breakpoint(s, 30, 1335, r0);
  case 30:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 64);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1336]) return breakpoint(s, 31, 1336, r0);
  case 31:
    s.font___21133 = (globals.font5___1750);
    s.lastBrkId = 1337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1337]) return breakpoint(s, 32, 1337, r0);
  case 32:
    s.tx___21137 = (s.l___21114);
    s.lastBrkId = 1338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1338]) return breakpoint(s, 33, 1338, r0);
  case 33:
    s.tmp_1 = r0 = s.t___21118;
    s.tmp_3 = Sprite_height__P2061_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 374; s.pc = 34; return s.tmp_3;
  case 34:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.ty___21139 = (r0);
    s.lastBrkId = 1339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1339]) return breakpoint(s, 35, 1339, r0);
  case 35:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    s.tmp_7 = Sprite_x__P2025_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 375; s.pc = 37; return s.tmp_7;
  case 37:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 0);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 38);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 38:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_y__P2027_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 376; s.pc = 39; return s.tmp_11;
  case 39:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 >> 0);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 40);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 40:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___21137;
    s.tmp_0.arg3 = s.ty___21139;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___21133;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 377; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 1340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1340]) return breakpoint(s, 41, 1340, r0);
  case 41:
    s.tmp_0 = r0 = s.tx___21137;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___21133;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 378; s.pc = 42; return s.tmp_2; }
    }
  case 42:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.tx___21137 = (r0);
    s.lastBrkId = 1341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1341]) return breakpoint(s, 43, 1341, r0);
  case 43:
    s.tmp_1 = Sprite_vx__P2029_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 379; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    s.tmp_2 = Sprite_vy__P2031_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 380; s.pc = 45; return s.tmp_2;
  case 45:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1342]) return breakpoint(s, 46, 1342, r0);
  case 46:
    s.tmp_4 = r0 = s.ty___21139;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___21133;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 381; s.pc = 47; return s.tmp_7; }
    }
  case 47:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___21139 = (r0);
    s.lastBrkId = 1343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1343]) return breakpoint(s, 48, 1343, r0);
  case 48:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_6 = Sprite_vx__P2029_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 382; s.pc = 50; return s.tmp_6;
  case 50:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 51);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 51:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("v", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_vy__P2031_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 383; s.pc = 52; return s.tmp_10;
  case 52:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 53);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 53:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___21137;
    s.tmp_0.arg3 = s.ty___21139;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___21133;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 384; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
  case 9:
  case 10:
    s.lastBrkId = 1344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1344]) return breakpoint(s, 54, 1344, r0);
  case 54:
    s.tmp_1 = Sprite_ax__P2033_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 385; s.pc = 55; return s.tmp_1;
  case 55:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    s.tmp_2 = Sprite_ay__P2035_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 386; s.pc = 56; return s.tmp_2;
  case 56:
    r0 = s.retval;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1345]) return breakpoint(s, 57, 1345, r0);
  case 57:
    s.tmp_4 = r0 = s.ty___21139;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___21133;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 387; s.pc = 58; return s.tmp_7; }
    }
  case 58:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___21139 = (r0);
    s.lastBrkId = 1346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1346]) return breakpoint(s, 59, 1346, r0);
  case 59:
    s.tmp_0 = helpers_imagePrint__P1760_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_6 = Sprite_ax__P2033_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 388; s.pc = 61; return s.tmp_6;
  case 61:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 62);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 62:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("a", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_ay__P2035_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 389; s.pc = 63; return s.tmp_10;
  case 63:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 64);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 64:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___21137;
    s.tmp_0.arg3 = s.ty___21139;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___21133;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 390; s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 1347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1347]) return breakpoint(s, 65, 1347, r0);
  case 65:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2528);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1348]) return breakpoint(s, 66, 1348, r0);
  case 66:
    s.tmp_0 = helpers_imageDrawRect__P1731_mk(s);
    s.tmp_0.arg0 = globals.screen___1802;
    s.tmp_2 = Fx_toInt__P165_mk(s);
    s.tmp_3 = game_Hitbox_left__P1966_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 391; s.pc = 69; return s.tmp_3;
  case 69:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 392; s.pc = 68; return s.tmp_2;
  case 68:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.ox___21098);
    s.tmp_0.arg1 = r0;
    s.tmp_5 = Fx_toInt__P165_mk(s);
    s.tmp_6 = game_Hitbox_top__P1967_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 393; s.pc = 71; return s.tmp_6;
  case 71:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 394; s.pc = 70; return s.tmp_5;
  case 70:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.oy___21106);
    s.tmp_0.arg2 = r0;
    s.tmp_7 = Fx_toInt__P165_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 395; s.pc = 72; return s.tmp_7;
  case 72:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_8 = Fx_toInt__P165_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 396; s.pc = 73; return s.tmp_8;
  case 73:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 397; s.pc = 67; return s.tmp_0;
  case 67:
    r0 = s.retval;
  case 17:
  case 18:
  case 19:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___drawCore__P2077.info = {"start":20864,"length":1383,"line":642,"column":4,"endLine":680,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function Sprite___drawCore__P2077_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___drawCore__P2077, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  ox___21098: undefined,
  oy___21106: undefined,
  l___21114: undefined,
  t___21118: undefined,
  font___21133: undefined,
  tx___21137: undefined,
  ty___21139: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite___visible__P2059(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2016_VT)) failedCast(r0);
    s.lastBrkId = 1292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1292]) return breakpoint(s, 1, 1292, r0);
  case 1:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 128);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite___visible__P2059.info = {"start":8329,"length":72,"line":303,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__visible","argumentNames":["this"]}

function Sprite___visible__P2059_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___visible__P2059, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }




function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_flags_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C2714_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function particles_ParticleSource__C2678_v4_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_x_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_y_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2159_v4_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if___update_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C2159_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charHeight_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_multiplier_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_data_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_xOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_yOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if___draw_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_z_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function controller_Button__C1903_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_s_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vx_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vy_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_condition_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_width_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_height_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_sourceFactory_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_func_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_target_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_self_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_turnRate_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_rate_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_animations_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_animations_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_countdownEndHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_startScreenEffect_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_GameOverDialog__C2516_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_GameOverDialog__C2516_v1_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_onPlayFinished_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_5_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }


function if_lifeZeroHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2159_v2_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function PhysicsEngine__C2159_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_z_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_spriteToFollow_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_displayValue_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_image_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_effect_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C2159_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_destroyHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function animation_SpriteAnimation__C3494_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_generator_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_padding_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsPerRow_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardSpacing_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_getText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_basicCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_selectedCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_activeCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_BaseDialog__C2477_v1_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function animation_PathNode__C3470_v0_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_handler_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_tileIndex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_left_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_top_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C2714_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_updateSay_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function sprites_BaseSprite__C1858_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSprite__C1858_v2_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_shouldBeVisible_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_scene_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_state_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_up_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_yOffset_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_up_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }

const controller_Button__C1903_VT = mkVTable({
  name: "Button",
  numFields: 7,
  classNo: 16,
  lastSubtypeNo: 17,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_Button_isPressed__P1912,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "toString": controller_Button_toString__P1908,
    "raiseButtonUp": controller_Button_raiseButtonUp__P3892,
    "raiseButtonDown": controller_Button_raiseButtonDown__P3893,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P3894,
    "onEvent": controller_Button_onEvent__P1910,
    "isPressed": controller_Button_isPressed__P1912,
    "pressureLevel": controller_Button_pressureLevel__P1913,
    "setPressed": controller_Button_setPressed__P1914,
    "__update": controller_Button___update__P1915,
  },
  toStringMethod: controller_Button_toString__P1908,
});
const controller_AnyButton__C3895_VT = mkVTable({
  name: "AnyButton",
  numFields: 7,
  classNo: 17,
  lastSubtypeNo: 17,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_AnyButton_isPressed__P3897,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "isPressed": controller_AnyButton_isPressed__P3897,
    "toString": controller_Button_toString__P1908,
    "raiseButtonUp": controller_Button_raiseButtonUp__P3892,
    "raiseButtonDown": controller_Button_raiseButtonDown__P3893,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P3894,
    "onEvent": controller_Button_onEvent__P1910,
    "pressureLevel": controller_Button_pressureLevel__P1913,
    "setPressed": controller_Button_setPressed__P1914,
    "__update": controller_Button___update__P1915,
  },
});
const Math_FastRandom__C2586_VT = mkVTable({
  name: "FastRandom",
  numFields: 2,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "lfsr": null,
    "set/lfsr": null,
    "seed": null,
    "set/seed": null,
    "next": Math_FastRandom_next__P2589,
    "randomRange": Math_FastRandom_randomRange__P2590,
    "pickRandom": Math_FastRandom_pickRandom__P2591,
    "percentChance": Math_FastRandom_percentChance__P2593,
  },
});
const texteffects_TextEffect__C2831_VT = mkVTable({
  name: "TextEffect",
  numFields: 1,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "getState": null,
    "set/getState": null,
  },
});
const sprites_BaseSprite__C1858_VT = mkVTable({
  name: "BaseSprite",
  numFields: 2,
  classNo: 20,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P1861,
    "__draw": sprites_BaseSprite___draw__P1864,
    "__drawCore": sprites_BaseSprite___drawCore__P1865,
    "__update": sprites_BaseSprite___update__P1866,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "__visible": sprites_BaseSprite___visible__P1861,
    "z": sprites_BaseSprite_z__P1862,
    "set/z": sprites_BaseSprite_z__P1863,
    "__draw": sprites_BaseSprite___draw__P1864,
    "__drawCore": sprites_BaseSprite___drawCore__P1865,
    "__update": sprites_BaseSprite___update__P1866,
  },
});
const Sprite__C2016_VT = mkVTable({
  name: "Sprite",
  numFields: 26,
  classNo: 21,
  lastSubtypeNo: 22,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2059,
    "__draw": sprites_BaseSprite___draw__P1864,
    "__drawCore": Sprite___drawCore__P2077,
    "__update": Sprite___update__P2078,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "updateSay": null,
    "set/updateSay": null,
    "sayBubbleSprite": null,
    "set/sayBubbleSprite": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "x": Sprite_x__P2025,
    "set/x": Sprite_x__P2026,
    "y": Sprite_y__P2027,
    "set/y": Sprite_y__P2028,
    "vx": Sprite_vx__P2029,
    "set/vx": Sprite_vx__P2030,
    "vy": Sprite_vy__P2031,
    "set/vy": Sprite_vy__P2032,
    "ax": Sprite_ax__P2033,
    "set/ax": Sprite_ax__P2034,
    "ay": Sprite_ay__P2035,
    "set/ay": Sprite_ay__P2036,
    "fx": Sprite_fx__P2037,
    "set/fx": Sprite_fx__P2038,
    "fy": Sprite_fy__P2039,
    "set/fy": Sprite_fy__P2040,
    "data": Sprite_data__P2041,
    "set/data": Sprite_data__P2042,
    "image": Sprite_image__P2055,
    "setImage": Sprite_setImage__P2056,
    "setHitbox": Sprite_setHitbox__P2057,
    "isStatic": Sprite_isStatic__P2058,
    "__visible": Sprite___visible__P2059,
    "width": Sprite_width__P2060,
    "height": Sprite_height__P2061,
    "left": Sprite_left__P2062,
    "set/left": Sprite_left__P2063,
    "right": Sprite_right__P2064,
    "set/right": Sprite_right__P2065,
    "top": Sprite_top__P2066,
    "set/top": Sprite_top__P2067,
    "bottom": Sprite_bottom__P2068,
    "set/bottom": Sprite_bottom__P2069,
    "kind": Sprite_kind__P2070,
    "setKind": Sprite_setKind__P2071,
    "setPosition": Sprite_setPosition__P2072,
    "setVelocity": Sprite_setVelocity__P2073,
    "startEffect": Sprite_startEffect__P2075,
    "isOutOfScreen": Sprite_isOutOfScreen__P2076,
    "__drawCore": Sprite___drawCore__P2077,
    "__update": Sprite___update__P2078,
    "setFlag": Sprite_setFlag__P2079,
    "overlapsWith": Sprite_overlapsWith__P2080,
    "clearObstacles": Sprite_clearObstacles__P2084,
    "registerObstacle": Sprite_registerObstacle__P2085,
    "destroy": Sprite_destroy__P2087,
    "_destroyCore": Sprite__destroyCore__P2088,
    "follow": Sprite_follow__P2089,
    "toString": Sprite_toString__P2090,
    "z": sprites_BaseSprite_z__P1862,
    "set/z": sprites_BaseSprite_z__P1863,
    "__draw": sprites_BaseSprite___draw__P1864,
  },
  toStringMethod: Sprite_toString__P2090,
});
const StatusBarSprite__C3579_VT = mkVTable({
  name: "StatusBarSprite",
  numFields: 27,
  classNo: 22,
  lastSubtypeNo: 22,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2059,
    "__draw": sprites_BaseSprite___draw__P1864,
    "__drawCore": Sprite___drawCore__P2077,
    "__update": Sprite___update__P2078,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "updateSay": null,
    "set/updateSay": null,
    "sayBubbleSprite": null,
    "set/sayBubbleSprite": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "_statusBar": null,
    "set/_statusBar": null,
    "value": StatusBarSprite_value__P3581,
    "set/value": StatusBarSprite_value__P3582,
    "attachToSprite": StatusBarSprite_attachToSprite__P3585,
    "spriteAttachedTo": StatusBarSprite_spriteAttachedTo__P3586,
    "applyChange": StatusBarSprite_applyChange__P5765,
    "x": Sprite_x__P2025,
    "set/x": Sprite_x__P2026,
    "y": Sprite_y__P2027,
    "set/y": Sprite_y__P2028,
    "vx": Sprite_vx__P2029,
    "set/vx": Sprite_vx__P2030,
    "vy": Sprite_vy__P2031,
    "set/vy": Sprite_vy__P2032,
    "ax": Sprite_ax__P2033,
    "set/ax": Sprite_ax__P2034,
    "ay": Sprite_ay__P2035,
    "set/ay": Sprite_ay__P2036,
    "fx": Sprite_fx__P2037,
    "set/fx": Sprite_fx__P2038,
    "fy": Sprite_fy__P2039,
    "set/fy": Sprite_fy__P2040,
    "data": Sprite_data__P2041,
    "set/data": Sprite_data__P2042,
    "image": Sprite_image__P2055,
    "setImage": Sprite_setImage__P2056,
    "setHitbox": Sprite_setHitbox__P2057,
    "isStatic": Sprite_isStatic__P2058,
    "__visible": Sprite___visible__P2059,
    "width": Sprite_width__P2060,
    "height": Sprite_height__P2061,
    "left": Sprite_left__P2062,
    "set/left": Sprite_left__P2063,
    "right": Sprite_right__P2064,
    "set/right": Sprite_right__P2065,
    "top": Sprite_top__P2066,
    "set/top": Sprite_top__P2067,
    "bottom": Sprite_bottom__P2068,
    "set/bottom": Sprite_bottom__P2069,
    "kind": Sprite_kind__P2070,
    "setKind": Sprite_setKind__P2071,
    "setPosition": Sprite_setPosition__P2072,
    "setVelocity": Sprite_setVelocity__P2073,
    "startEffect": Sprite_startEffect__P2075,
    "isOutOfScreen": Sprite_isOutOfScreen__P2076,
    "__drawCore": Sprite___drawCore__P2077,
    "__update": Sprite___update__P2078,
    "setFlag": Sprite_setFlag__P2079,
    "overlapsWith": Sprite_overlapsWith__P2080,
    "clearObstacles": Sprite_clearObstacles__P2084,
    "registerObstacle": Sprite_registerObstacle__P2085,
    "destroy": Sprite_destroy__P2087,
    "_destroyCore": Sprite__destroyCore__P2088,
    "follow": Sprite_follow__P2089,
    "toString": Sprite_toString__P2090,
    "z": sprites_BaseSprite_z__P1862,
    "set/z": sprites_BaseSprite_z__P1863,
    "__draw": sprites_BaseSprite___draw__P1864,
  },
});
const effects_ParticleEffect__C2789_VT = mkVTable({
  name: "ParticleEffect",
  numFields: 3,
  classNo: 25,
  lastSubtypeNo: 26,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "start": effects_ParticleEffect_start__P2791,
    "destroy": effects_ParticleEffect_destroy__P2792,
  },
});
const particles_ParticleFactory__C2714_VT = mkVTable({
  name: "ParticleFactory",
  numFields: 0,
  classNo: 27,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ParticleFactory_createParticle__P2716,
    "drawParticle": particles_ParticleFactory_drawParticle__P2717,
  },
  iface: {
    "createParticle": particles_ParticleFactory_createParticle__P2716,
    "drawParticle": particles_ParticleFactory_drawParticle__P2717,
  },
});
const particles_TrailFactory__C2732_VT = mkVTable({
  name: "TrailFactory",
  numFields: 5,
  classNo: 28,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_TrailFactory_createParticle__P2738,
    "drawParticle": particles_TrailFactory_drawParticle__P2739,
  },
  iface: {
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "galois": null,
    "set/galois": null,
    "createParticle": particles_TrailFactory_createParticle__P2738,
    "drawParticle": particles_TrailFactory_drawParticle__P2739,
  },
});
const particles_ParticleSource__C2678_VT = mkVTable({
  name: "ParticleSource",
  numFields: 13,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P1861,
    "__draw": particles_ParticleSource___draw__P2684,
    "__drawCore": sprites_BaseSprite___drawCore__P1865,
    "__update": sprites_BaseSprite___update__P1866,
    "updateParticle": particles_ParticleSource_updateParticle__P4411,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "priority": null,
    "set/priority": null,
    "_dt": null,
    "set/_dt": null,
    "anchor": null,
    "set/anchor": null,
    "lifespan": null,
    "set/lifespan": null,
    "pFlags": null,
    "set/pFlags": null,
    "head": null,
    "set/head": null,
    "timer": null,
    "set/timer": null,
    "period": null,
    "set/period": null,
    "_factory": null,
    "set/_factory": null,
    "ax": null,
    "set/ax": null,
    "ay": null,
    "set/ay": null,
    "__draw": particles_ParticleSource___draw__P2684,
    "_update": particles_ParticleSource__update__P2685,
    "_prune": particles_ParticleSource__prune__P2686,
    "setAcceleration": particles_ParticleSource_setAcceleration__P2687,
    "setRelativeToCamera": particles_ParticleSource_setRelativeToCamera__P2689,
    "enabled": particles_ParticleSource_enabled__P2690,
    "set/enabled": particles_ParticleSource_enabled__P2691,
    "destroy": particles_ParticleSource_destroy__P2692,
    "clear": particles_ParticleSource_clear__P2693,
    "setAnchor": particles_ParticleSource_setAnchor__P2694,
    "setRate": particles_ParticleSource_setRate__P2695,
    "setFactory": particles_ParticleSource_setFactory__P2697,
    "updateParticle": particles_ParticleSource_updateParticle__P4411,
    "drawParticle": particles_ParticleSource_drawParticle__P4412,
    "__visible": sprites_BaseSprite___visible__P1861,
    "z": sprites_BaseSprite_z__P1862,
    "set/z": sprites_BaseSprite_z__P1863,
    "__drawCore": sprites_BaseSprite___drawCore__P1865,
    "__update": sprites_BaseSprite___update__P1866,
  },
});
const particles_Particle__C2659_VT = mkVTable({
  name: "Particle",
  numFields: 8,
  classNo: 34,
  lastSubtypeNo: 34,
  maxBgInstances: 200,
  methods: {
  },
  iface: {
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "vx": null,
    "set/vx": null,
    "vy": null,
    "set/vy": null,
    "lifespan": null,
    "set/lifespan": null,
    "next": null,
    "set/next": null,
    "data": null,
    "set/data": null,
    "color": null,
    "set/color": null,
  },
});
const control_EventContext__C384_VT = mkVTable({
  name: "EventContext",
  numFields: 9,
  classNo: 35,
  lastSubtypeNo: 35,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "deltaTime": control_EventContext_deltaTime__P389,
    "runCallbacks": control_EventContext_runCallbacks__P3737,
    "registerFrameCallbacks": control_EventContext_registerFrameCallbacks__P3738,
    "register": control_EventContext_register__P390,
    "unregister": control_EventContext_unregister__P391,
    "registerFrameHandler": control_EventContext_registerFrameHandler__P392,
    "registerHandler": control_EventContext_registerHandler__P394,
  },
});
const scene_Scene__C2419_VT = mkVTable({
  name: "Scene",
  numFields: 23,
  classNo: 36,
  lastSubtypeNo: 36,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eventContext": null,
    "set/eventContext": null,
    "background": null,
    "set/background": null,
    "tileMap": null,
    "set/tileMap": null,
    "allSprites": null,
    "set/allSprites": null,
    "spriteNextId": null,
    "set/spriteNextId": null,
    "spritesByKind": null,
    "set/spritesByKind": null,
    "physicsEngine": null,
    "set/physicsEngine": null,
    "camera": null,
    "set/camera": null,
    "flags": null,
    "set/flags": null,
    "destroyedHandlers": null,
    "set/destroyedHandlers": null,
    "createdHandlers": null,
    "set/createdHandlers": null,
    "overlapHandlers": null,
    "set/overlapHandlers": null,
    "overlapMap": null,
    "set/overlapMap": null,
    "tileOverlapHandlers": null,
    "set/tileOverlapHandlers": null,
    "collisionHandlers": null,
    "set/collisionHandlers": null,
    "wallCollisionHandlers": null,
    "set/wallCollisionHandlers": null,
    "gameForeverHandlers": null,
    "set/gameForeverHandlers": null,
    "particleSources": null,
    "set/particleSources": null,
    "controlledSprites": null,
    "set/controlledSprites": null,
    "followingSprites": null,
    "set/followingSprites": null,
    "_millis": null,
    "set/_millis": null,
    "_data": null,
    "set/_data": null,
    "previousScene": null,
    "set/previousScene": null,
    "init": scene_Scene_init__P2441,
    "data": scene_Scene_data__P2442,
    "millis": scene_Scene_millis__P2443,
    "addSprite": scene_Scene_addSprite__P2444,
    "destroy": scene_Scene_destroy__P2445,
    "render": scene_Scene_render__P2446,
  },
});
const effects_ImageEffect__C2816_VT = mkVTable({
  name: "ImageEffect",
  numFields: 4,
  classNo: 37,
  lastSubtypeNo: 37,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "preferredDelay": null,
    "set/preferredDelay": null,
    "effect": null,
    "set/effect": null,
    "fastRandom": null,
    "set/fastRandom": null,
    "times": null,
    "set/times": null,
    "applyTo": effects_ImageEffect_applyTo__P2818,
    "change": effects_ImageEffect_change__P2819,
    "startScreenEffect": effects_ImageEffect_startScreenEffect__P2820,
  },
});
const effects_ScreenEffect__C2793_VT = mkVTable({
  name: "ScreenEffect",
  numFields: 5,
  classNo: 26,
  lastSubtypeNo: 26,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "source": null,
    "set/source": null,
    "sceneDefaultRate": null,
    "set/sceneDefaultRate": null,
    "startScreenEffect": effects_ScreenEffect_startScreenEffect__P2795,
    "endScreenEffect": effects_ScreenEffect_endScreenEffect__P2796,
    "start": effects_ParticleEffect_start__P2791,
    "destroy": effects_ParticleEffect_destroy__P2792,
  },
});
const particles_SprayFactory__C2718_VT = mkVTable({
  name: "SprayFactory",
  numFields: 3,
  classNo: 29,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_SprayFactory_createParticle__P2720,
    "drawParticle": particles_SprayFactory_drawParticle__P2721,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "createParticle": particles_SprayFactory_createParticle__P2720,
    "drawParticle": particles_SprayFactory_drawParticle__P2721,
    "setSpeed": particles_SprayFactory_setSpeed__P2722,
    "setDirection": particles_SprayFactory_setDirection__P2723,
  },
});
const particles_AreaFactory__C2724_VT = mkVTable({
  name: "AreaFactory",
  numFields: 8,
  classNo: 30,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_AreaFactory_createParticle__P2730,
    "drawParticle": particles_AreaFactory_drawParticle__P2731,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "createParticle": particles_AreaFactory_createParticle__P2730,
    "drawParticle": particles_AreaFactory_drawParticle__P2731,
    "setSpeed": particles_SprayFactory_setSpeed__P2722,
    "setDirection": particles_SprayFactory_setDirection__P2723,
  },
});
const particles_ShapeFactory__C2740_VT = mkVTable({
  name: "ShapeFactory",
  numFields: 11,
  classNo: 31,
  lastSubtypeNo: 32,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P2744,
    "drawParticle": particles_ShapeFactory_drawParticle__P2743,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P2742,
    "drawParticle": particles_ShapeFactory_drawParticle__P2743,
    "createParticle": particles_ShapeFactory_createParticle__P2744,
    "setSpeed": particles_SprayFactory_setSpeed__P2722,
    "setDirection": particles_SprayFactory_setDirection__P2723,
  },
});
const particles_ConfettiFactory__C2745_VT = mkVTable({
  name: "ConfettiFactory",
  numFields: 11,
  classNo: 32,
  lastSubtypeNo: 32,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P2744,
    "drawParticle": particles_ShapeFactory_drawParticle__P2743,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P2742,
    "drawParticle": particles_ShapeFactory_drawParticle__P2743,
    "createParticle": particles_ShapeFactory_createParticle__P2744,
    "setSpeed": particles_SprayFactory_setSpeed__P2722,
    "setDirection": particles_SprayFactory_setDirection__P2723,
  },
});
const PhysicsEngine__C2159_VT = mkVTable({
  name: "PhysicsEngine",
  numFields: 0,
  classNo: 38,
  lastSubtypeNo: 39,
  maxBgInstances: null,
  methods: {
    "addSprite": PhysicsEngine_addSprite__P2161,
    "removeSprite": PhysicsEngine_removeSprite__P2162,
    "moveSprite": PhysicsEngine_moveSprite__P2163,
    "draw": PhysicsEngine_draw__P2164,
    "move": PhysicsEngine_move__P2165,
  },
  iface: {
    "addSprite": PhysicsEngine_addSprite__P2161,
    "removeSprite": PhysicsEngine_removeSprite__P2162,
    "moveSprite": PhysicsEngine_moveSprite__P2163,
    "draw": PhysicsEngine_draw__P2164,
    "move": PhysicsEngine_move__P2165,
  },
});
const scene_Camera__C2360_VT = mkVTable({
  name: "Camera",
  numFields: 8,
  classNo: 40,
  lastSubtypeNo: 40,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_offsetX": null,
    "set/_offsetX": null,
    "_offsetY": null,
    "set/_offsetY": null,
    "drawOffsetX": null,
    "set/drawOffsetX": null,
    "drawOffsetY": null,
    "set/drawOffsetY": null,
    "sprite": null,
    "set/sprite": null,
    "shakeStartTime": null,
    "set/shakeStartTime": null,
    "shakeDuration": null,
    "set/shakeDuration": null,
    "shakeAmplitude": null,
    "set/shakeAmplitude": null,
    "offsetX": scene_Camera_offsetX__P2365,
    "set/offsetX": scene_Camera_offsetX__P2366,
    "offsetY": scene_Camera_offsetY__P2367,
    "set/offsetY": scene_Camera_offsetY__P2368,
    "x": scene_Camera_x__P2369,
    "y": scene_Camera_y__P2370,
    "left": scene_Camera_left__P2371,
    "top": scene_Camera_top__P2373,
    "update": scene_Camera_update__P2376,
  },
});
const scene_Background__C2265_VT = mkVTable({
  name: "Background",
  numFields: 4,
  classNo: 41,
  lastSubtypeNo: 41,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "color": null,
    "set/color": null,
    "_image": null,
    "set/_image": null,
    "camera": null,
    "set/camera": null,
    "_layers": null,
    "set/_layers": null,
    "image": scene_Background_image__P2271,
    "set/image": scene_Background_image__P2272,
    "hasBackgroundImage": scene_Background_hasBackgroundImage__P2273,
    "draw": scene_Background_draw__P2274,
  },
});
const scene_BackgroundLayer__C2275_VT = mkVTable({
  name: "BackgroundLayer",
  numFields: 6,
  classNo: 42,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "distance": null,
    "set/distance": null,
    "img": null,
    "set/img": null,
    "repeatX": null,
    "set/repeatX": null,
    "repeatY": null,
    "set/repeatY": null,
    "alignX": null,
    "set/alignX": null,
    "alignY": null,
    "set/alignY": null,
    "draw": scene_BackgroundLayer_draw__P2283,
  },
});
const tiles_TileMap__C2317_VT = mkVTable({
  name: "TileMap",
  numFields: 3,
  classNo: 43,
  lastSubtypeNo: 43,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_scale": null,
    "set/_scale": null,
    "_layer": null,
    "set/_layer": null,
    "_map": null,
    "set/_map": null,
    "scale": tiles_TileMap_scale__P2319,
    "set/scale": tiles_TileMap_scale__P2320,
    "data": tiles_TileMap_data__P4000,
    "offsetX": tiles_TileMap_offsetX__P2321,
    "offsetY": tiles_TileMap_offsetY__P2322,
    "areaWidth": tiles_TileMap_areaWidth__P2323,
    "areaHeight": tiles_TileMap_areaHeight__P2324,
    "layer": tiles_TileMap_layer__P2325,
    "enabled": tiles_TileMap_enabled__P2327,
    "setData": tiles_TileMap_setData__P2328,
    "getTile": tiles_TileMap_getTile__P2329,
    "getTileIndex": tiles_TileMap_getTileIndex__P2330,
    "getImageType": tiles_TileMap_getImageType__P2332,
    "sampleTilesByType": tiles_TileMap_sampleTilesByType__P2335,
    "isInvalidIndex": tiles_TileMap_isInvalidIndex__P4001,
    "draw": tiles_TileMap_draw__P4002,
    "isObstacle": tiles_TileMap_isObstacle__P2336,
    "getObstacle": tiles_TileMap_getObstacle__P2337,
    "isOnWall": tiles_TileMap_isOnWall__P2338,
    "getTileImage": tiles_TileMap_getTileImage__P2339,
  },
});
const tiles_TileMapData__C2304_VT = mkVTable({
  name: "TileMapData",
  numFields: 7,
  classNo: 44,
  lastSubtypeNo: 44,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "data": null,
    "set/data": null,
    "layers": null,
    "set/layers": null,
    "tileset": null,
    "set/tileset": null,
    "cachedTileView": null,
    "set/cachedTileView": null,
    "_scale": null,
    "set/_scale": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "width": tiles_TileMapData_width__P2306,
    "height": tiles_TileMapData_height__P2307,
    "scale": tiles_TileMapData_scale__P2308,
    "set/scale": tiles_TileMapData_scale__P2309,
    "getTile": tiles_TileMapData_getTile__P2310,
    "getTileset": tiles_TileMapData_getTileset__P2312,
    "getTileImage": tiles_TileMapData_getTileImage__P2313,
    "isWall": tiles_TileMapData_isWall__P2315,
    "isOutsideMap": tiles_TileMapData_isOutsideMap__P2316,
  },
});
const controller_Controller__C1923_VT = mkVTable({
  name: "Controller",
  numFields: 5,
  classNo: 45,
  lastSubtypeNo: 45,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerIndex": null,
    "set/playerIndex": null,
    "buttons": null,
    "set/buttons": null,
    "analog": null,
    "set/analog": null,
    "_id": null,
    "set/_id": null,
    "_connected": null,
    "set/_connected": null,
    "_controlledSprites": controller_Controller__controlledSprites__P1928,
    "set/_controlledSprites": controller_Controller__controlledSprites__P1929,
    "id": controller_Controller_id__P1930,
    "left": controller_Controller_left__P1932,
    "right": controller_Controller_right__P1933,
    "up": controller_Controller_up__P1934,
    "down": controller_Controller_down__P1935,
    "moveSprite": controller_Controller_moveSprite__P1939,
    "button": controller_Controller_button__P3900,
    "connected": controller_Controller_connected__P1942,
    "set/connected": controller_Controller_connected__P1943,
    "__preUpdate": controller_Controller___preUpdate__P1947,
    "__update": controller_Controller___update__P1948,
  },
});
const ArcadePhysicsEngine__C2173_VT = mkVTable({
  name: "ArcadePhysicsEngine",
  numFields: 6,
  classNo: 39,
  lastSubtypeNo: 39,
  maxBgInstances: null,
  methods: {
    "addSprite": ArcadePhysicsEngine_addSprite__P2182,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2183,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2187,
    "draw": ArcadePhysicsEngine_draw__P2184,
    "move": ArcadePhysicsEngine_move__P2185,
  },
  iface: {
    "sprites": null,
    "set/sprites": null,
    "map": null,
    "set/map": null,
    "maxVelocity": null,
    "set/maxVelocity": null,
    "maxNegativeVelocity": null,
    "set/maxNegativeVelocity": null,
    "minSingleStep": null,
    "set/minSingleStep": null,
    "maxSingleStep": null,
    "set/maxSingleStep": null,
    "maxSpeed": ArcadePhysicsEngine_maxSpeed__P2175,
    "set/maxSpeed": ArcadePhysicsEngine_maxSpeed__P2176,
    "minStep": ArcadePhysicsEngine_minStep__P2177,
    "set/minStep": ArcadePhysicsEngine_minStep__P2178,
    "maxStep": ArcadePhysicsEngine_maxStep__P2179,
    "set/maxStep": ArcadePhysicsEngine_maxStep__P2180,
    "addSprite": ArcadePhysicsEngine_addSprite__P2182,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2183,
    "draw": ArcadePhysicsEngine_draw__P2184,
    "move": ArcadePhysicsEngine_move__P2185,
    "createMovingSprite": ArcadePhysicsEngine_createMovingSprite__P3929,
    "spriteCollisions": ArcadePhysicsEngine_spriteCollisions__P3930,
    "tilemapCollisions": ArcadePhysicsEngine_tilemapCollisions__P3931,
    "tilemapOverlaps": ArcadePhysicsEngine_tilemapOverlaps__P3932,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2187,
    "canResolveClipping": ArcadePhysicsEngine_canResolveClipping__P3933,
    "constrain": ArcadePhysicsEngine_constrain__P3934,
  },
});
const sprites_SpriteMap__C2094_VT = mkVTable({
  name: "SpriteMap",
  numFields: 5,
  classNo: 46,
  lastSubtypeNo: 46,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "cellWidth": null,
    "set/cellWidth": null,
    "cellHeight": null,
    "set/cellHeight": null,
    "rowCount": null,
    "set/rowCount": null,
    "columnCount": null,
    "set/columnCount": null,
    "buckets": null,
    "set/buckets": null,
    "neighbors": sprites_SpriteMap_neighbors__P2096,
    "overlaps": sprites_SpriteMap_overlaps__P2097,
    "draw": sprites_SpriteMap_draw__P2098,
    "resizeBuckets": sprites_SpriteMap_resizeBuckets__P2099,
    "clear": sprites_SpriteMap_clear__P2100,
    "key": sprites_SpriteMap_key__P3906,
    "insertAtKey": sprites_SpriteMap_insertAtKey__P3907,
    "insertAABB": sprites_SpriteMap_insertAABB__P2101,
    "mergeAtKey": sprites_SpriteMap_mergeAtKey__P3908,
    "toString": sprites_SpriteMap_toString__P2102,
  },
  toStringMethod: sprites_SpriteMap_toString__P2102,
});
const music_Melody__C1598_VT = mkVTable({
  name: "Melody",
  numFields: 2,
  classNo: 47,
  lastSubtypeNo: 47,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_text": null,
    "set/_text": null,
    "_player": null,
    "set/_player": null,
    "stop": music_Melody_stop__P1603,
    "registerMelody": music_Melody_registerMelody__P3779,
    "unregisterMelody": music_Melody_unregisterMelody__P3780,
    "playCore": music_Melody_playCore__P3781,
    "play": music_Melody_play__P1605,
    "toString": music_Melody_toString__P1607,
  },
  toStringMethod: music_Melody_toString__P1607,
});
const control_EventHandler__C3732_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 48,
  lastSubtypeNo: 48,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P3733,
    "unregister": control_EventHandler_unregister__P3734,
  },
});
const control_FrameCallback__C381_VT = mkVTable({
  name: "FrameCallback",
  numFields: 2,
  classNo: 49,
  lastSubtypeNo: 49,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "order": null,
    "set/order": null,
    "handler": null,
    "set/handler": null,
  },
});
const control_PollEvent__C3711_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 50,
  lastSubtypeNo: 50,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const control_Interval__C3706_VT = mkVTable({
  name: "Interval",
  numFields: 4,
  classNo: 51,
  lastSubtypeNo: 51,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "func": null,
    "set/func": null,
    "delay": null,
    "set/delay": null,
    "mode": null,
    "set/mode": null,
    "work": control_Interval_work__P3707,
  },
});
const sprites_SpriteSet__C2111_VT = mkVTable({
  name: "SpriteSet",
  numFields: 1,
  classNo: 52,
  lastSubtypeNo: 52,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_sprites": null,
    "set/_sprites": null,
    "length": sprites_SpriteSet_length__P2114,
    "sprites": sprites_SpriteSet_sprites__P2115,
    "add": sprites_SpriteSet_add__P2116,
    "remove": sprites_SpriteSet_remove__P2118,
    "contains": sprites_SpriteSet_contains__P2119,
    "toString": sprites_SpriteSet_toString__P2122,
  },
  toStringMethod: sprites_SpriteSet_toString__P2122,
});
const game_Hitbox__C1959_VT = mkVTable({
  name: "Hitbox",
  numFields: 5,
  classNo: 53,
  lastSubtypeNo: 53,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "parent": null,
    "set/parent": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "width": null,
    "set/width": null,
    "height": null,
    "set/height": null,
    "left": game_Hitbox_left__P1966,
    "top": game_Hitbox_top__P1967,
    "right": game_Hitbox_right__P1968,
    "bottom": game_Hitbox_bottom__P1969,
  },
});
const sprites_FollowingSprite__C1972_VT = mkVTable({
  name: "FollowingSprite",
  numFields: 4,
  classNo: 54,
  lastSubtypeNo: 54,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "self": null,
    "set/self": null,
    "target": null,
    "set/target": null,
    "rate": null,
    "set/rate": null,
    "turnRate": null,
    "set/turnRate": null,
  },
});
const animation_SpriteAnimation__C3494_VT = mkVTable({
  name: "SpriteAnimation",
  numFields: 3,
  classNo: 55,
  lastSubtypeNo: 57,
  maxBgInstances: null,
  methods: {
    "update": animation_SpriteAnimation_update__P3497,
  },
  iface: {
    "startedAt": null,
    "set/startedAt": null,
    "sprite": null,
    "set/sprite": null,
    "loop": null,
    "set/loop": null,
    "init": animation_SpriteAnimation_init__P3496,
    "update": animation_SpriteAnimation_update__P3497,
  },
});
const animation_ImageAnimation__C3498_VT = mkVTable({
  name: "ImageAnimation",
  numFields: 6,
  classNo: 56,
  lastSubtypeNo: 56,
  maxBgInstances: null,
  methods: {
    "update": animation_ImageAnimation_update__P3500,
  },
  iface: {
    "startedAt": null,
    "set/startedAt": null,
    "sprite": null,
    "set/sprite": null,
    "loop": null,
    "set/loop": null,
    "lastFrame": null,
    "set/lastFrame": null,
    "frames": null,
    "set/frames": null,
    "frameInterval": null,
    "set/frameInterval": null,
    "update": animation_ImageAnimation_update__P3500,
    "init": animation_SpriteAnimation_init__P3496,
  },
});
const animation_MovementAnimation__C3501_VT = mkVTable({
  name: "MovementAnimation",
  numFields: 5,
  classNo: 57,
  lastSubtypeNo: 57,
  maxBgInstances: null,
  methods: {
    "update": animation_MovementAnimation_update__P3503,
  },
  iface: {
    "startedAt": null,
    "set/startedAt": null,
    "sprite": null,
    "set/sprite": null,
    "loop": null,
    "set/loop": null,
    "path": null,
    "set/path": null,
    "nodeInterval": null,
    "set/nodeInterval": null,
    "update": animation_MovementAnimation_update__P3503,
    "init": animation_SpriteAnimation_init__P3496,
  },
});
const info_PlayerInfo__C2226_VT = mkVTable({
  name: "PlayerInfo",
  numFields: 12,
  classNo: 58,
  lastSubtypeNo: 58,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_player": null,
    "set/_player": null,
    "bg": null,
    "set/bg": null,
    "border": null,
    "set/border": null,
    "fc": null,
    "set/fc": null,
    "showScore": null,
    "set/showScore": null,
    "showLife": null,
    "set/showLife": null,
    "visilibity": null,
    "set/visilibity": null,
    "showPlayer": null,
    "set/showPlayer": null,
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "left": null,
    "set/left": null,
    "up": null,
    "set/up": null,
    "init": info_PlayerInfo_init__P3990,
    "getState": info_PlayerInfo_getState__P2239,
    "id": info_PlayerInfo_id__P2240,
    "score": info_PlayerInfo_score__P2241,
    "setScore": info_PlayerInfo_setScore__P2242,
    "changeScoreBy": info_PlayerInfo_changeScoreBy__P2243,
    "hasScore": info_PlayerInfo_hasScore__P2244,
    "life": info_PlayerInfo_life__P2245,
    "setLife": info_PlayerInfo_setLife__P2246,
    "changeLifeBy": info_PlayerInfo_changeLifeBy__P2247,
    "hasLife": info_PlayerInfo_hasLife__P2248,
    "raiseLifeZero": info_PlayerInfo_raiseLifeZero__P2250,
    "drawPlayer": info_PlayerInfo_drawPlayer__P2251,
    "drawScore": info_PlayerInfo_drawScore__P2252,
    "drawLives": info_PlayerInfo_drawLives__P2253,
  },
});
const info_InfoState__C3935_VT = mkVTable({
  name: "InfoState",
  numFields: 10,
  classNo: 59,
  lastSubtypeNo: 59,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerStates": null,
    "set/playerStates": null,
    "visibilityFlag": null,
    "set/visibilityFlag": null,
    "gameEnd": null,
    "set/gameEnd": null,
    "heartImage": null,
    "set/heartImage": null,
    "multiplierImage": null,
    "set/multiplierImage": null,
    "bgColor": null,
    "set/bgColor": null,
    "borderColor": null,
    "set/borderColor": null,
    "fontColor": null,
    "set/fontColor": null,
    "countdownExpired": null,
    "set/countdownExpired": null,
    "countdownEndHandler": null,
    "set/countdownEndHandler": null,
  },
});
const game_BaseDialog__C2477_VT = mkVTable({
  name: "BaseDialog",
  numFields: 11,
  classNo: 60,
  lastSubtypeNo: 61,
  maxBgInstances: null,
  methods: {
    "update": game_BaseDialog_update__P2490,
    "drawTextCore": game_BaseDialog_drawTextCore__P2492,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "update": game_BaseDialog_update__P2490,
    "drawTextCore": game_BaseDialog_drawTextCore__P2492,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2493,
    "drawBorder": game_BaseDialog_drawBorder__P4029,
    "fastFill": game_BaseDialog_fastFill__P4030,
    "clearInterior": game_BaseDialog_clearInterior__P4031,
    "drawPartial": game_BaseDialog_drawPartial__P4032,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P4033,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P4035,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P4036,
  },
});
const game_GameOverDialog__C2516_VT = mkVTable({
  name: "GameOverDialog",
  numFields: 16,
  classNo: 61,
  lastSubtypeNo: 61,
  maxBgInstances: null,
  methods: {
    "update": game_GameOverDialog_update__P2519,
    "drawTextCore": game_GameOverDialog_drawTextCore__P2520,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "cursorOn": null,
    "set/cursorOn": null,
    "isNewHighScore": null,
    "set/isNewHighScore": null,
    "win": null,
    "set/win": null,
    "score": null,
    "set/score": null,
    "highScore": null,
    "set/highScore": null,
    "displayCursor": game_GameOverDialog_displayCursor__P2518,
    "update": game_GameOverDialog_update__P2519,
    "drawTextCore": game_GameOverDialog_drawTextCore__P2520,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2493,
    "drawBorder": game_BaseDialog_drawBorder__P4029,
    "fastFill": game_BaseDialog_fastFill__P4030,
    "clearInterior": game_BaseDialog_clearInterior__P4031,
    "drawPartial": game_BaseDialog_drawPartial__P4032,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P4033,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P4035,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P4036,
  },
});
const music_MelodyPlayer__C1608_VT = mkVTable({
  name: "MelodyPlayer",
  numFields: 2,
  classNo: 62,
  lastSubtypeNo: 62,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "melody": null,
    "set/melody": null,
    "onPlayFinished": null,
    "set/onPlayFinished": null,
    "stop": music_MelodyPlayer_stop__P1612,
    "queuePlayInstructions": music_MelodyPlayer_queuePlayInstructions__P3784,
    "play": music_MelodyPlayer_play__P1613,
  },
});
const scene_Renderable__C2378_VT = mkVTable({
  name: "Renderable",
  numFields: 4,
  classNo: 24,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
    "__visible": scene_Renderable___visible__P2380,
    "__draw": sprites_BaseSprite___draw__P1864,
    "__drawCore": scene_Renderable___drawCore__P2381,
    "__update": sprites_BaseSprite___update__P1866,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "handler": null,
    "set/handler": null,
    "shouldBeVisible": null,
    "set/shouldBeVisible": null,
    "__visible": scene_Renderable___visible__P2380,
    "__drawCore": scene_Renderable___drawCore__P2381,
    "z": sprites_BaseSprite_z__P1862,
    "set/z": sprites_BaseSprite_z__P1863,
    "__draw": sprites_BaseSprite___draw__P1864,
    "__update": sprites_BaseSprite___update__P1866,
  },
});
const info_PlayerState__C2197_VT = mkVTable({
  name: "PlayerState",
  numFields: 3,
  classNo: 63,
  lastSubtypeNo: 63,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "score": null,
    "set/score": null,
    "life": null,
    "set/life": null,
    "lifeZeroHandler": null,
    "set/lifeZeroHandler": null,
  },
});
const statusbars_StatusBar__C3596_VT = mkVTable({
  name: "StatusBar",
  numFields: 24,
  classNo: 64,
  lastSubtypeNo: 64,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sprite": null,
    "set/sprite": null,
    "borderWidth": null,
    "set/borderWidth": null,
    "borderColor": null,
    "set/borderColor": null,
    "labelColor": null,
    "set/labelColor": null,
    "flags": null,
    "set/flags": null,
    "_label": null,
    "set/_label": null,
    "_image": null,
    "set/_image": null,
    "spriteToFollow": null,
    "set/spriteToFollow": null,
    "followPadding": null,
    "set/followPadding": null,
    "followOffset": null,
    "set/followOffset": null,
    "explicitlySetDirection": null,
    "set/explicitlySetDirection": null,
    "font": null,
    "set/font": null,
    "displayValue": null,
    "set/displayValue": null,
    "target": null,
    "set/target": null,
    "hasHitZero": null,
    "set/hasHitZero": null,
    "_barWidth": null,
    "set/_barWidth": null,
    "_barHeight": null,
    "set/_barHeight": null,
    "onColor": null,
    "set/onColor": null,
    "offColor": null,
    "set/offColor": null,
    "drainColor": null,
    "set/drainColor": null,
    "_max": null,
    "set/_max": null,
    "kind": null,
    "set/kind": null,
    "lastUpdate": null,
    "set/lastUpdate": null,
    "throttleAmount": null,
    "set/throttleAmount": null,
    "positionNextTo": statusbars_StatusBar_positionNextTo__P3612,
    "label": statusbars_StatusBar_label__P3614,
    "max": statusbars_StatusBar_max__P3616,
    "current": statusbars_StatusBar_current__P3618,
    "set/current": statusbars_StatusBar_current__P3619,
    "changeValue": statusbars_StatusBar_changeValue__P5792,
    "image": statusbars_StatusBar_image__P3621,
    "set/image": statusbars_StatusBar_image__P3622,
    "isVerticalBar": statusbars_StatusBar_isVerticalBar__P5793,
    "rebuildImage": statusbars_StatusBar_rebuildImage__P5795,
    "updateState": statusbars_StatusBar_updateState__P3623,
    "updateDisplay": statusbars_StatusBar_updateDisplay__P3624,
  },
});
const tiles_Location__C2289_VT = mkVTable({
  name: "Location",
  numFields: 3,
  classNo: 65,
  lastSubtypeNo: 65,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_row": null,
    "set/_row": null,
    "_col": null,
    "set/_col": null,
    "tileMap": null,
    "set/tileMap": null,
    "col": tiles_Location_col__P2290,
    "row": tiles_Location_row__P2291,
    "x": tiles_Location_x__P2293,
    "y": tiles_Location_y__P2294,
    "tileSet": tiles_Location_tileSet__P2295,
    "place": tiles_Location_place__P2296,
  },
});
const controller_ControlledSprite__C1919_VT = mkVTable({
  name: "ControlledSprite",
  numFields: 4,
  classNo: 66,
  lastSubtypeNo: 66,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_inputLastFrame": null,
    "set/_inputLastFrame": null,
    "s": null,
    "set/s": null,
    "vx": null,
    "set/vx": null,
    "vy": null,
    "set/vy": null,
  },
});
const scene_OverlapHandler__C2392_VT = mkVTable({
  name: "OverlapHandler",
  numFields: 3,
  classNo: 67,
  lastSubtypeNo: 67,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "kind": null,
    "set/kind": null,
    "otherKind": null,
    "set/otherKind": null,
    "handler": null,
    "set/handler": null,
  },
});
const particles_AshFactory__C2758_VT = mkVTable({
  name: "AshFactory",
  numFields: 9,
  classNo: 33,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_AshFactory_createParticle__P2760,
    "drawParticle": particles_AshFactory_drawParticle__P2761,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "colors": null,
    "set/colors": null,
    "createParticle": particles_AshFactory_createParticle__P2760,
    "drawParticle": particles_AshFactory_drawParticle__P2761,
    "setSpeed": particles_SprayFactory_setSpeed__P2722,
    "setDirection": particles_SprayFactory_setDirection__P2723,
  },
});
const particles_ColorCount__C4448_VT = mkVTable({
  name: "ColorCount",
  numFields: 2,
  classNo: 68,
  lastSubtypeNo: 68,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "color": null,
    "set/color": null,
    "count": null,
    "set/count": null,
  },
});
const statusbars_StatusHandler__C5796_VT = mkVTable({
  name: "StatusHandler",
  numFields: 5,
  classNo: 69,
  lastSubtypeNo: 69,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "kind": null,
    "set/kind": null,
    "comparison": null,
    "set/comparison": null,
    "comparisonType": null,
    "set/comparisonType": null,
    "percent": null,
    "set/percent": null,
    "handler": null,
    "set/handler": null,
    "conditionMet": statusbars_StatusHandler_conditionMet__P5797,
  },
});
const scene_systemMenu_PauseMenu__C2622_VT = mkVTable({
  name: "PauseMenu",
  numFields: 7,
  classNo: 70,
  lastSubtypeNo: 70,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "options": null,
    "set/options": null,
    "theme": null,
    "set/theme": null,
    "selection": null,
    "set/selection": null,
    "scrollRow": null,
    "set/scrollRow": null,
    "scrollTarget": null,
    "set/scrollTarget": null,
    "scrollOffset": null,
    "set/scrollOffset": null,
    "generator": null,
    "set/generator": null,
    "show": scene_systemMenu_PauseMenu_show__P2624,
    "onUpdate": scene_systemMenu_PauseMenu_onUpdate__P2625,
    "setSelection": scene_systemMenu_PauseMenu_setSelection__P2626,
    "drawText": scene_systemMenu_PauseMenu_drawText__P2627,
    "dispose": scene_systemMenu_PauseMenu_dispose__P2628,
    "updateScrollTarget": scene_systemMenu_PauseMenu_updateScrollTarget__P4311,
  },
});
const scene_systemMenu_MenuOption__C2614_VT = mkVTable({
  name: "MenuOption",
  numFields: 8,
  classNo: 71,
  lastSubtypeNo: 71,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "card": null,
    "set/card": null,
    "icon": null,
    "set/icon": null,
    "top": null,
    "set/top": null,
    "state": null,
    "set/state": null,
    "theme": null,
    "set/theme": null,
    "iconImage": null,
    "set/iconImage": null,
    "getText": null,
    "set/getText": null,
    "action": null,
    "set/action": null,
    "show": scene_systemMenu_MenuOption_show__P2616,
    "position": scene_systemMenu_MenuOption_position__P2617,
    "setOffset": scene_systemMenu_MenuOption_setOffset__P2618,
    "setTheme": scene_systemMenu_MenuOption_setTheme__P2619,
    "setState": scene_systemMenu_MenuOption_setState__P2620,
    "dispose": scene_systemMenu_MenuOption_dispose__P2621,
    "updateCard": scene_systemMenu_MenuOption_updateCard__P4310,
  },
});
const animation_Path__C3464_VT = mkVTable({
  name: "Path",
  numFields: 2,
  classNo: 72,
  lastSubtypeNo: 72,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "nodes": null,
    "set/nodes": null,
    "lastNode": null,
    "set/lastNode": null,
    "run": animation_Path_run__P3469,
  },
});
const animation_PathNode__C3470_VT = mkVTable({
  name: "PathNode",
  numFields: 1,
  classNo: 73,
  lastSubtypeNo: 73,
  maxBgInstances: null,
  methods: {
    "apply": animation_PathNode_apply__P3473,
  },
  iface: {
    "setStart": null,
    "set/setStart": null,
    "apply": animation_PathNode_apply__P3473,
  },
});
const MovingSprite__C2171_VT = mkVTable({
  name: "MovingSprite",
  numFields: 7,
  classNo: 74,
  lastSubtypeNo: 74,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sprite": null,
    "set/sprite": null,
    "cachedVx": null,
    "set/cachedVx": null,
    "cachedVy": null,
    "set/cachedVy": null,
    "dx": null,
    "set/dx": null,
    "dy": null,
    "set/dy": null,
    "xStep": null,
    "set/xStep": null,
    "yStep": null,
    "set/yStep": null,
  },
});
const sprites_StaticObstacle__C2146_VT = mkVTable({
  name: "StaticObstacle",
  numFields: 5,
  classNo: 75,
  lastSubtypeNo: 75,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "layer": null,
    "set/layer": null,
    "image": null,
    "set/image": null,
    "tileIndex": null,
    "set/tileIndex": null,
    "top": null,
    "set/top": null,
    "left": null,
    "set/left": null,
    "x": sprites_StaticObstacle_x__P2153,
    "y": sprites_StaticObstacle_y__P2154,
    "height": sprites_StaticObstacle_height__P2155,
    "width": sprites_StaticObstacle_width__P2156,
  },
});
const effects_SceneAnchor__C4454_VT = mkVTable({
  name: "SceneAnchor",
  numFields: 1,
  classNo: 76,
  lastSubtypeNo: 76,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "camera": null,
    "set/camera": null,
    "x": effects_SceneAnchor_x__P4455,
    "y": effects_SceneAnchor_y__P4456,
    "width": effects_SceneAnchor_width__P4457,
    "height": effects_SceneAnchor_height__P4458,
  },
});

const breakpoints = setupDebugger(1, ["transparency16___21726","tile1___21731","tile2___21736","ChargingEnemy___60273","AttackingEnemy___60276","StunnedEnemy___60279","projectile___60302","ducko___60308","statusbar___60339","baddie___60470"])

return _main___P60880
})
